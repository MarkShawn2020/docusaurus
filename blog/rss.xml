<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>南川笔记 Blog</title>
        <link>https://markshawn2020.github.io/blog</link>
        <description>南川笔记 Blog</description>
        <lastBuildDate>Mon, 11 Jul 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[札记 | 我与我周旋久，我亦是我]]></title>
            <link>https://markshawn2020.github.io/blog/2022/07/11/archive/prose-I-am-me</link>
            <guid>/2022/07/11/archive/prose-I-am-me</guid>
            <pubDate>Mon, 11 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[xxx]]></description>
            <content:encoded><![CDATA[<blockquote><p>xxx</p></blockquote><p>前几日，绵延一周的雨终究是停了，这同时也意味着，两年前的夏日刚来京城的那种窒息般的炎热，将接踵而至，无法拒绝。</p><p>当然，更令人无法拒绝的是，河南成百上千的储户哭诉无门，甚至惨遭暴打。前日是丰县，昨日是唐山，今日是河南，明日是哪，明明日又是哪，届时又该以怎样的心情与态度去面对呢。</p><p>但，倘真只是我们这一团乱麻吗，倒也未必。说来也是，隔壁前首相前脚方才离开，忘却的救世主便要骤临了，更别提这里下台了一位，那里离奇去世一位了。</p><p>但，即便如此，似乎也未必能得出我们只得惶惶不可终日的结论来。尽管，在一款毫无技术含量、漏洞百出却具有最高权力的软件前，已经大有这样的趋势了。</p><p>但，鲜活的历史告诉我们，今人不见古时月，今月曾经照古人，一切的纷扰均是内心的纷扰，一切的不安都是内心的不安。</p><p>倘以一年去看今时今日之喜怒，倘以十年去看今月今年之困厄，倘以百年去看今生今世之无常，则怒也好、喜也罢、悲也好、思也罢，都如那镜中花水中月，一片虚无与缥缈。为人若直诚，则泾渭而已；行事若忠己，则死生而已。</p><p>如果说有什么是最值得烦恼的话，那大概是我已如此明白我既成不了普通人，也成不了伟人，连小人也是遥不可及，一者我天生便非循规蹈矩之辈，二者我资质实数平庸，三者我决然不够那样的脸面。</p><p>所以，我到底是谁，是怎样的一个灵魂寄生在我这样的肉躯之内，它的命运究竟通往何方，即便是和它朝夕相处二十余年的我，亦不能回答。</p><p>但有一点我倒是有相当的确信，那就是我并不能完全控制与驾驭它。譬如，根本无法躺平着安然入眠，这对于我来说简直不可思议。再譬如，梦中美好的或是朦胧的或是惊险的际遇，每次都深深地让自己迷恋许久，为此总要耗去成吨的时间。</p><p>末了，如果说有什么是最值得分享的话，那大抵是我与我周旋久，我亦是我。</p><p>把灯灭了，静看烟火。</p><p>把目闭了，独照此心。</p><p>愿，执我。</p><p>南川记于二〇二二年七月十一日丑时</p>]]></content:encoded>
            <category>札记</category>
        </item>
        <item>
            <title><![CDATA[编程 | 使用pandas研究高考志愿填报]]></title>
            <link>https://markshawn2020.github.io/blog/2022/07/02/archive/dev-gaokao</link>
            <guid>/2022/07/02/archive/dev-gaokao</guid>
            <pubDate>Sat, 02 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[近日，我叔为我弟高考志愿填报的事情焦头烂额。（江苏高考志愿填报竟然能多达40个了，你敢信！）]]></description>
            <content:encoded><![CDATA[<blockquote><p>近日，我叔为我弟高考志愿填报的事情焦头烂额。（江苏高考志愿填报竟然能多达40个了，你敢信！） </p><p>我心想，也许可以为他们做点数据分析工作。
于是……</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="设计">设计<a class="hash-link" href="#设计" title="标题的直接链接">​</a></h2><p>高考志愿填报的核心难点，在于学校、专业众多，普通人很难抉择，尤其是中档学生，一本线以上、211勉强，对于他们来说，可能选得好就是天堂选不好就是地狱（也只是可能，最终还得看自身）。</p><p>他正好位于这档。</p><p>（不过在日益强大的数据分析工具面前，这个问题变得不再有挑战性，回想起我曾经填志愿时还只能傻傻地拿着一本大书慢慢比对，不得不感叹当年的我还是年轻。）</p><p>在母校曹老师的援助下，我很快地拿到了权威的去年志愿数据（来源：<a href="https://www.jseea.cn/webfile/index/index_zkxx/2021-07-17/24917.html;jsessionid=8A742AC473A754778E35DFAC962B7F7A.s107_7" target="_blank" rel="noopener noreferrer">江苏省2021年普通类本科批次投档线（物理等科目类） - 招考信息</a>），里面有物理学科本科院校志愿最低分的数据情况，长如下：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656766839465-3dd91a5a19354795df88ff375103b519196d6cf4c89ee94de197c944072e33f2.png" alt="picture 2" class="img_ev3q">  </p><p>这样，很快地，我们的思路就出来了，只要把我弟的数据录进去，再和这些学校比对，筛选出在他分数上下的院校即可，最好是985、211、双一流。</p><p>因此我们的工作大致有以下几个：</p><ol><li>清洗这张表格</li><li>为这张表格加上学校标签标识</li><li>将分数录入，进行筛选</li></ol><p>以下详细展示整个流程。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投档线数据清洗">投档线数据清洗<a class="hash-link" href="#投档线数据清洗" title="标题的直接链接">​</a></h2><p>首先查看表格，是传统的excel，还有最让编程人员烦的跨行合并的多层标题栏，那么第一步就是重构标题栏。</p><p>根据经验，表格的跨行合并，实际上真实数据都在合并的第一行（其他为空），例如取消合并后如下：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656766993094-7635f2a2ce0217a1f39d40ad8bf81d013b2273c86fd5200338887f632cbffe5c.png" alt="picture 4" class="img_ev3q">  </p><p>由此可以敏锐地发现，我们只需要把标题栏向下填充，使之全部对齐到第五行，就是可以被程序读取的标题栏了。而这个操作，就是pandas内所谓的<code>frontfill</code>（向前填充）。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656767020562-a50a20840b8b27bf3dea6a408e87562e13b4e05675565795bf4b63451ae212cc.png" alt="picture 5" class="img_ev3q">  </p><p>接着标题栏都是中文，并且命名过长，影响编程效率，所以有必要重命名。</p><p>此外，接着看内容，“院校、专业组（再选科目要求）”这一列信息量比较大，包含了学校名、专业组和专业限制。</p><p>其中专业组是指填报汇总后是根据大专业划分，几个比较近的属于某个专业组，例如计算机、软件、电子信息就很有可能属于同一个专业组，有点类似一级学科的意思，但也不太一样，主要是按招生对象不同，比如说中外合作的就可能在同一专业组，与其他的专业组可能专业内容上倒是相近的。这个就需要那本大书去查，网上还没有太好的信息。</p><p>专业限制是江苏专用的一套规则，按照“3+1+2”的要求，学生在语数外之外先要在“物理”和“历史”中首选一门，作为文理划分的依据；接着在剩余的4门（历史、政治、地理、生物）中任选两门，专业限制就是针对这两门，在曹老师的指导下我们了解到它分“不限”、“A”、“A或B”、“A和B”四种可能，分别属于不同的交并补关系（一开始我以为只有“不限”或者“A或B”两种可能，导致程序设计缺陷，这是我的疏忽，由于时间关系，没有做好前期统计的工作）。</p><p>因此，我们首先要做的就是把这列拆分，尤其对于专业组限制这块，一开始以为只有“或”的关系，我就把它拆成了一个数组，后来发现还有“和”的关系，这么做就不妥了，因此需要保留原字符串，后续以我弟的具体学科使用函数单独处理。</p><p>由此写出我们第一段程序，数据已经变成很干净的结构：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656767765128-03a51d1d3951b6781fb07b9da0683d99840e35154dc957c85a591d82ae7fd024.png" alt="picture 7" class="img_ev3q"> </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656773876476-c52acb4fe7a714e492466d7118974935b74e9923d36e74371ce6e1d2b2ea2d56.png" alt="picture 32" class="img_ev3q">  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="考分数据结构设计">考分数据结构设计<a class="hash-link" href="#考分数据结构设计" title="标题的直接链接">​</a></h2><p>为了通用性，我们在设计考分数据结构时，设计的相对比较保守，因为里面存在一些勾稽关系，所以使用<code>@property</code>保证数据的一致性。此外，由于每年分数线差异，因此需要做换算，所以加入了<code>bias</code>乘数。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656767932103-7981dfd9a59b69827e93d1fc4b2589159fcf45e4dc8b3b2b64859421163813dd.png" alt="picture 8" class="img_ev3q">  </p><p>在<code>bias</code>上，默认是1这个很好理解；考虑到我们可能有多次对标不同年份的需求（江苏没有，因为江苏改革目前才是第二年），所以需要不断地调整bias，因此最好的做法，是调整后再返回类本身，这样可以实现链式操作。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656768075428-c7aca4cf071f20a24eb678803ce9dcec6861f3299539eee12aaeb86a969ca3a2.png" alt="picture 9" class="img_ev3q">  </p><p>链式操作示范：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656768172602-572b8b5f9fd071eb6f8de7f75f3397f077051c88fb173ffc5c835fd103889bc0.png" alt="picture 10" class="img_ev3q">  </p><p>我们还在数据分的基础上，加入了排名，不过实际没有用上，因为我们没有投档线对应的排名数据。</p><p>以上就是整体的数据结构设计。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="考分录入年份修正风险偏好">考分录入、年份修正、风险偏好<a class="hash-link" href="#考分录入年份修正风险偏好" title="标题的直接链接">​</a></h2><p>在录入上，直接初始化即可。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656768324016-07135822436a2483b55726287dc8bdb1d6bae7a5c98ce64a07c553b8e7e2a6cb.png" alt="picture 11" class="img_ev3q">  </p><p>在年份修正上，则有些讲究。它本质的问题是确定，今年的分数在往年值多少分的问题。</p><p>我原先想用一本分数线做测度，但是江苏已经取消一本线了，只有本科线（也就是二本线）。</p><p>我想了一下，反正这块肯定有误差，在非对标顶级985的情况下，直接用二本线比值作为乘数似乎也没什么不妥。</p><p>比如去年本科线是417，今年是429，比值是0.97，也就是今年的1分等于去年的0.97分。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656768462360-9e2dc54ba2633efd5d2238816426b980bdd189834884e9c7caa0332fa49faf1f.png" alt="picture 12" class="img_ev3q">  </p><p>在年份修正的前提下，我们还得考虑一下风险偏好，目前我们看到的都是最低志愿投档线，因此实际已经很有风险，也即是现在看到的贵校的N分，实际进入该专业的学生可能都是N*k分，k显著大于1。</p><p>所以正常情况下，我们得在折合分上再乘以一个系数，降低一下自身的体位，可能0.98比较合适，但是不排除有些人特别risky，就想搏一搏，单车变摩托，所以我们在筛选的时候也可以适当调高点范围，这就是风险系数，我把它设置成了最高1.02，这样能多看十分（基数是五百多）的学校。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656768677788-0b18d662fcbf5800ff9947403a3a1bff8335e4666f611fe12bf9bb429b60dfb5.png" alt="picture 13" class="img_ev3q">  </p><p>看的时候，以风险调整后的分为最高分，从上往下筛学校即可。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基于学科进行筛选">基于学科进行筛选<a class="hash-link" href="#基于学科进行筛选" title="标题的直接链接">​</a></h2><p>在学科筛选上，可以写的很复杂，也可以写的很简单。</p><p>比较复杂的是一遍遍地for循环，然后用if去判断，到底符不符合。</p><p>我后来想了一种比较简单的，就是用集合的思想去设计。</p><p>如果目标专业组要求是“A和B”的关系，那么在集合上，我们考生的学科集合（也就是<code>{C, D}</code>）应该等于<code>{A, B}</code>。</p><p>如果目标专业组要求是“A或B”的关系，那么在集合上，我们考生的学科集合（也就是<code>{C, D}</code>）应该与<code>{A, B}</code>有交集，也就是 $<!-- -->{<!-- -->C, D<!-- -->}<!-- --> \cap <!-- -->{<!-- -->A, B<!-- -->}<!-- --> \ne \varnothing$。</p><p>如果目标专业只有一个，也就是必须要选修它，则是子集关系。</p><p>如果目标专业为“不限”，则是恒真关系。</p><p>于是，我们可以写成这样：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656769521413-46849b76826934ca106c73b9a7701078e2a4f3a490671bcaa2c05380ea5a5537.png" alt="picture 15" class="img_ev3q">  </p><p>这样，我们就把2200多条筛成了17000多条了，减少了20%，是很不错的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基于985211筛选">基于985、211筛选<a class="hash-link" href="#基于985211筛选" title="标题的直接链接">​</a></h2><p>我们首先关注的是985、211类大学，看看有没有什么机会。</p><p>我们要先拿到一个标签表。</p><p>简单搜索后，我们决定使用来自这份博客<a href="https://blog.csdn.net/weixin_40683253/article/details/88417600" target="_blank" rel="noopener noreferrer">对照表 - 用心整理了一份国内985/211大学名单及其一流学科_黄饱饱_bao的博客-CSDN博客</a>的数据。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656769729876-6ec048f8a3514c61dab87039788e4dad276193d4e76ebc2fa4223f0977de1134.png" alt="picture 16" class="img_ev3q">  </p><p>这是一张排版很标准的表格，如果你用F12去检查的话确实是标准的<code>table</code>标签。</p><p>我们如何把这个数据提取下来呢？</p><p>这可是表格，而非文字，直接复制处理起来很麻烦（但有时也未必不可以）。</p><p>要用爬虫吗？又觉得杀鸡焉用牛刀。</p><p>这时候，我突然想起来很多软件都自带表格数据提取工具，比如excel就有网站源数据刷新功能。</p><p>重点是，pandas也不例外！</p><p>一行代码，轻松搞定，只要喂一下网址即可！</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656769873501-7d6c39430b4fb107df808e5a0e24bedc0f1b62eed6b2c395fb768b9f5e9b8c41.png" alt="picture 17" class="img_ev3q">  </p><p>看到这，你是否会很想知道它的内部实现？没错，我也想，有时间再研究研究，估计是<code>requests + beautifulsoup</code>工作流？</p><p>简单清洗后，再与原先的那张表做左联操作：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656770240516-8ea1c31af98253cca91922a0aac56400e6f6e083820fbbedf6bd88ce0e5fb329.png" alt="picture 19" class="img_ev3q">  </p><p>左联操作，就是以左表（投档线表）为基础，加上额外的右表信息（不存在的就是标记缺失）。这个操作，也是数据分析中最常用的。</p><p>我们还额外地简单封装了这个染色操作，将不同风险偏好的分数段做染色处理，逻辑如下：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656770341081-6998c83936ecc24ba531deac77fe3f58ca262143c1a8808c1e06864d19be1b0f.png" alt="picture 20" class="img_ev3q">  </p><p>这样风险偏好保守的就看绿色部分就可以，高的可以看看红色（或者作为参考）。</p><p>不过很遗憾的是，我弟这个分数985、211只能去到很偏远的地方，或者都是中外合作办学项目。</p><p>此路似乎不通。</p><p>也许我们可以试一试双一流。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基于双一流筛选">基于双一流筛选<a class="hash-link" href="#基于双一流筛选" title="标题的直接链接">​</a></h2><p>我们同样需要双一流的标签数据，之前那个985/211的表里虽然也有双一流信息，但是不全，因为有些双非也是有双一流的。</p><p>我们在<a href="https://www.zhijiao.cn/syl.shtml" target="_blank" rel="noopener noreferrer">“第一轮双一流”建设高校及建设学科名单_中国教育在线</a>这里找到了我们要的数据。</p><p>于是，使用pandas梅开二度：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656770576448-e9b1e2692c2db0c2ea3e3bea561b0ed055d42991035ceb241eb5e81c598e741b.png" alt="picture 21" class="img_ev3q">  </p><p>这样就有140所学校了，可选性大了些（比92多了20所左右）。</p><p>不过，既然是基于双一流专业，我们肯定更以专业为主（而非学校），所以我们需要额外加一点基于专业的筛选操作。</p><p>比如，我们预设几个计算机相关的专业，然后在双一流学科名单中筛选，看看有没有相关的关键字，再结合分数，结果……</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656770672616-ff47941ea168d1fadd08988e0456ccbb00b7034eb220ea73bca466601aba6e74.png" alt="picture 22" class="img_ev3q">  </p><p>Emmm.....</p><p>我陷入了良久的沉思……</p><p>既然专业好也可以，那我们为何不试试专业排名（而非紧盯双一流呢？）</p><p>这么一想，思路就开阔了，那就是软科排名！</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基于软科排名筛选">基于软科排名筛选<a class="hash-link" href="#基于软科排名筛选" title="标题的直接链接">​</a></h2><p>软科的排名可以在官网找到：<a href="https://www.shanghairanking.cn/rankings/bcmr/2022" target="_blank" rel="noopener noreferrer">权威发布|2022软科中国大学专业排名|中国大学本科最好专业|就业率最高的专业</a></p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656770818534-227fe64e604260d36186637bab6b7cd316ffa28898512b5c944a054639535779.png" alt="picture 23" class="img_ev3q">  </p><p>我们可以在这里搜索不同的学科排名。</p><p>我们通过F12分析后端接口，发现有结构良好的json数据：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656770883806-8dadd0900400c59c6a851d2077d3b2d6d8b23f5a7339968a677687287b7644ce.png" alt="picture 24" class="img_ev3q">  </p><p>因此，可以考虑直接用爬虫的手段，毕竟每个搜索结果都要翻页十二十次，这显然是必须走自动化了。</p><p>经过测试，如果不加cookie，则获取时只会返回前20条，加了cookie就可以返回完整结果。</p><p>cookie也就是这个：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656770970159-0ae108ab6bd0574e833f4bd2a18024a6c47d10756f69d4ecb2cab4364f3b39c2.png" alt="picture 25" class="img_ev3q">  </p><p>我们把它复制出来，封装一下，就可以设计出得到任意学科的排名数据的接口了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656771058309-c544701861ec45612783fb4431526257be2ddda268f7c61409431d984ab5b7d0.png" alt="picture 26" class="img_ev3q">  </p><p>此外，我们注意到这个接口需要传入学科的编码，因此我们还要设计一个接口获得完整的编码列表。</p><p>经过分析，发现任何一个排名接口里已经包含了这份数据（的拷贝），因此我们可以首先调用任意一个专业的排名接口，然后解析出编码列表，代码如下：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656771264185-63f98497dd56ca34dac37663c757faefde4e26b0d6fd0cf561fcaa46a22ea22b.png" alt="picture 28" class="img_ev3q">  </p><p>但这只是我们编码好的字典，还不具备输入一个学科名就返回一个学科编号的功能，因此还要封装一个检索函数：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656771335922-69e0acfca3bdbe912eda019c67b32ee84ef240c4a990adb99939982c3407b63a.png" alt="picture 29" class="img_ev3q">  </p><p>手动修正所有目标专业的准确名称后，我们就可以正式进行分析工作了。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656773095464-9a349621f747035122e030e8cfd4cc51b7c7e659c8448cbfcf229141a32abb55.png" alt="picture 30" class="img_ev3q">  </p><p>此处唯一多需要注意的是，软科api里的<code>ranking</code>是字符串格式的整数，然后到我们pandas中也默认是字符串。</p><p>如果我们需要对<code>ranking</code>进行排序，就要先转换成整数；但如果我们在联表的的时候没有把非排名院校给筛掉（每份排名名单只有小几百所学校），就会导致数据缺失（变成<code>pd.NaN</code>），从而无法转换成整数，这是需要注意的。</p><p>解决办法就是要么直接把那些学校筛掉（比如本例）；要么就是使用<code>pd.numeric</code>函数，里面有两个参数<code>errors</code>和<code>downcast</code>可以控制异常如何处理。</p><p>技术部分就是这样！</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="复盘">复盘<a class="hash-link" href="#复盘" title="标题的直接链接">​</a></h2><p>其实本期最大的收获就是：</p><ul><li><p>对于有211分的，直接对照985、211、双一流名单去选就好了；</p></li><li><p>对于有一本分的，建议对照软科排名去选</p></li><li><p>对于其他的……</p></li></ul><p>我今天终于了解到了二本怎么选的了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/DataAnalysis-Gaokao-1656773375309-4cb693ae7f66b693d8fe2ab68b0c049f09d7e728c376b15ffd822cf0537d3d68.png" alt="picture 31" class="img_ev3q">  </p><p>哈哈哈，不得不说这是一个很好的思路！</p><p>以上！</p><p>（全部<code>ipynb</code>程序文件可以后台回复“<strong>使用pandas研究高考志愿填报</strong>”。）</p><p>最后感谢我叔提供的素材，以及再次感谢曹老师的热心援助，希望我弟和天下学子最终都能选到心仪的学校，学有所成，不枉此生！</p>]]></content:encoded>
            <category>开发笔记</category>
            <category>数据分析</category>
        </item>
        <item>
            <title><![CDATA[编程 | GoPro 02: 玩转 OpenLab]]></title>
            <link>https://markshawn2020.github.io/blog/2022/06/16/archive/dev-gopro-2</link>
            <guid>/2022/06/16/archive/dev-gopro-2</guid>
            <pubDate>Thu, 16 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[1. 方案1：物理手段解决]]></description>
            <content:encoded><![CDATA[<ol><li>方案1：物理手段解决</li><li>方案2：借助<strong>OpenCV</strong>基于文件创建时间进行推算</li><li>方案3：借助<strong>GoPro Labs</strong>添加时间戳浮层<ol><li>浮层大小</li><li>浮层内容</li><li>浮层位置</li><li>二维码生成</li><li>二维码使用</li><li>缺陷</li><li>其他用处</li></ol></li><li>*方案3个人笔记<ol><li>LAB01: how to install the labs firmware</li><li>LAB02: QR Controls For Settings</li><li>LAB03: add an overlay to viedeo</li></ol></li><li>最后一点感受</li></ol><p>在上一期【文章：gopro】中，我们提供了一种借助gopro基于延时摄影从而底层本高质量地全程记录个人生活的解决方案，实测中这个方案仍然有一些不足之处，本期就重点探讨时间戳相关的问题。</p><p>这个问题其实很关键，因为我们正在做的事情是长时间无感拍摄，目的是为了后期复盘，但在复盘过程中，由于延时时间跨度过长，我们希望知道视频里的每一帧所拍摄的实际时间，比如是某月某日的下午两点还是夜间十点，这是一个很自然的需求。</p><p>但很可惜，这个问题并不容易解决。</p><p>以下便基于这个问题，提供实际可行的三种方案。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="方案1物理手段解决">方案1：物理手段解决<a class="hash-link" href="#方案1物理手段解决" title="标题的直接链接">​</a></h2><p>如果你是一个比较传统的、具有较强时间观的人，也许这种方案特别适合你，那就是直接选购一款挂钟（这也是我在上篇文章中所采用的方法）。</p><p>例如，我们这里有一段使用挂钟时期的成品视频：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655354709985-843159c3c155958989a9d5791053dbaecaca765cf48c91ebed9afd66f5c1d33a.png" alt="picture 3" class="img_ev3q">  </p><p>将我们的挂钟摆在所拍摄视频中的合理位置，既增强了画面构图感，也能实时知道每一帧所对应的真实时间，这确实有一石二鸟之效。</p><p>但很可惜，这种方案，并未能坚持多久，原因是，廉价的挂钟机芯转动声音影响到了自己的睡眠。</p><p>按照我对睡眠无声的要求，在依次关闭空调、窗户、电脑散热器、硬盘柜之后，室内的声音强度耳测应该已经低于30分贝，此时挂钟的声音就显得尤为明显了。</p><p>尽管它不大，但确实也没那么动听，至少甚至不如星际穿越的曲子《Tick-Tock》的前奏。</p><p>除非我愿意花更多的时间与金钱去筛选到另一款真正无声的挂钟，但作为一名程序猿，也许有更廉价与炫酷的方案。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="方案2借助opencv基于文件创建时间进行推算">方案2：借助<strong>OpenCV</strong>基于文件创建时间进行推算<a class="hash-link" href="#方案2借助opencv基于文件创建时间进行推算" title="标题的直接链接">​</a></h2><blockquote><p>本节参考：- <a href="https://www.theeminentcodfish.com/gopro-timestamp/" target="_blank" rel="noopener noreferrer">GoPro TimeStamp - The Eminent Codfish</a></p></blockquote><p>事实上，由于我们的延时摄影采用了固定时间间隔的方案（有关“自动时间间隔”与“固定时间间隔”方案的差异与优劣，也在上篇文章中有阐述），因此只要我们知道视频的任何一帧所对应的真实物理时间，我们就可以基于等差数列算法进行推算。</p><p>而这，恰恰可行，因为gopro的视频输出格式为mp4，里面保存了文件的创建时间。</p><p>不过，这个文件创建时间，可不是我们在电脑上看到的那个文件创建时间，这不是同一个概念。</p><p>例如，我们这里有一段视频的开头显示是6月15日10点05分：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655355366257-b01f6386d8aaa7fc57ca802956a6fd73fc4f6628385437e0055b8bd94622b6f9.png" alt="picture 4" class="img_ev3q">  </p><p>但在我们的文件管理器上查看该文件的创建时间却是6月16日10点57分：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655355421774-dc43ac335c5f11ebcbda9c81edde670f3e7f285321771c5f1a0ad443f8f22e2a.png" alt="picture 5" class="img_ev3q">  </p><p>这显然不是时区的问题，而是操作系统问题，即在操作系统里定义的文件创建时间是该文件在本地磁盘上首次产生的时间，而非文件本身的首次创建时间（对于该视频来说，尤指该视频开始拍摄的时间）。</p><p>但我们并非没有手段获取实际视频创建时间，答案就是基于软件解析的手段：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655356074973-cf5d985ee99cf99c2e87527c0ea19e095d2c433ceb7bed96d27be097804bb0ba.png" alt="picture 6" class="img_ev3q">  </p><p>上述代码使用了<code>ffprobe</code>这个指令解析了我们的mp4文件，从结果中的<code>creation_time</code>标签得到了我们想要的视频创建的真实时间，于是乎，最难的问题解决了。</p><p>接下来，我们就基于视频领域的一些基本概念为我们的视频加上时间戳信息。</p><p>第一步是关于帧的。</p><p>在之前文章中我们说我们的视频是每5秒延时拍摄一帧，也就是每过一帧实际时间就要<strong>大致</strong>加五秒，这是一个很重要的信息。</p><p>而整个流程就是使用opencv读取我们视频的每一帧，然后算出该帧的时间，然后将格式化的时间戳放到那一帧上面去，最后再输出成一个新的视频，这个过程就叫“烧录”。</p><p>核心代码如下：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># ref: - [GoPro TimeStamp - The Eminent Codfish](https://www.theeminentcodfish.com/gopro-timestamp)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> datetime </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> datetime</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> timedelta</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> cv2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> subprocess </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> sp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> tqdm </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> tqdm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> get_file_creation_time </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> get_creation_time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FONT_COLOR </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># blue, green, red</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_output_file_path</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> file_path</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">:</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'_with-timestamp'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> file_path</span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add_timestamp_for_video</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Opens the video import and sets parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    video </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VideoCapture</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> video</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isOpened</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">raise</span><span class="token plain"> Exception</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"failed to open video of </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">file_path</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    FPS </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> video</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CAP_PROP_FPS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> video</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CAP_PROP_FRAME_WIDTH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> video</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CAP_PROP_FRAME_HEIGHT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    frames_cnt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">video</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CAP_PROP_FRAME_COUNT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># float -&gt; int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    duration </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> frames_cnt </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> FPS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Initializes time origin of the video</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    creation_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> get_creation_time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cur_frame_time</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> datetime </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> creation_time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string-interpolation string" style="color:#e3116c">f"frames_cnt: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">frames_cnt</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">, FPS: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">FPS</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">, initial_timestamp: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">cur_frame_time</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">, dimension: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">width</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> x </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">height</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">, duration: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">duration</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Command to send via the command prompt which specifies the pipe parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    command </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'ffmpeg'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-y'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># (optional) overwrite output file if it exists</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-f'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'rawvideo'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Input is raw video</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-vcodec'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'rawvideo'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-pix_fmt'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'bgr24'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Raw video format</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-s'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">width</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'x'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">height</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># size of one frame</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-r'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">FPS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># frames per second</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-i'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'-'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># The input comes from a pipe</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-an'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Tells FFMPEG not to expect any audio</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-vcodec'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mpeg4'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token string" style="color:#e3116c">'-b:v'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'10M'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Sets a maximum bit rate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               get_output_file_path</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># output file path</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Open the pipe</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pipe </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> sp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Popen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">command</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stdin</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">sp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PIPE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stderr</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">sp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PIPE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'====== OpenCV is processing ======='</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    process_time_start </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Reads through each frame, calculates the cur_frame_time, places it on the frame and</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># exports the frame to the output video.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> tqdm</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">frames_cnt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        success</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> image </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> video</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> success</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"ERROR: failed to read frame of [</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">i </span><span class="token string-interpolation interpolation operator" style="color:#393A34">+</span><span class="token string-interpolation interpolation"> </span><span class="token string-interpolation interpolation number" style="color:#36acaa">1</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">/</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">frames_cnt</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">]"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">continue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cur_frame_time </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> timedelta</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">seconds</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">putText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">image</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Date: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cur_frame_time</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">50</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">150</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FONT_HERSHEY_COMPLEX_SMALL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    FONT_COLOR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">putText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">image</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Time: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cur_frame_time</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">50</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FONT_HERSHEY_COMPLEX_SMALL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    FONT_COLOR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">assert</span><span class="token plain"> image </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">None</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pipe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stdin</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">tobytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'====== finished ======='</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    process_used_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> process_time_start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string-interpolation string" style="color:#e3116c">f"used time: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">process_used_time</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> seconds, video period: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">duration</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> seconds, multiplier: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">process_used_time </span><span class="token string-interpolation interpolation operator" style="color:#393A34">/</span><span class="token string-interpolation interpolation"> duration</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    video</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">release</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pipe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stdin</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    pipe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stderr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'__main__'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    add_timestamp_for_video</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/Volumes/Disk1/videos/gopro日常/gopro延时生活/2022-06-14/GH011701.MP4"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>输出结果：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655358120832-aa46758f93ddc61e960a10c274e8fb7ea49276b152f7d3fa6e343d02c1e2bc9a.png" alt="picture 7" class="img_ev3q">  </p><p>可以看到，基本一比一的处理速度，也就是说原视频时间有多长，程序运行时间就有多长，对于延时摄影来说，一天的录制输出大概就是十分钟的视频，因此脚本每天的运行时长也就是在十分钟左右，这是可以接受的。</p><p>不过这个脚本也有一点点小问题。</p><p>第一个问题是每次读取到第二十帧的时候就会报错，之后就没问题，不明白什么原因，也似乎不影响程序的表现，这个属于opencv范畴的问题了，留到以后再考虑了。</p><p>第二个问题就是输出的视频文件比原文件要小很多，直接差了十倍……：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655358301337-0a3bc21ac1b530ed8f43053e33a9dc99fc89d90bd464a0e3335c942c9c01ab41.png" alt="picture 8" class="img_ev3q">  </p><p>我们放在一起比对了一下，发现分辨率是没区别的，区别可能是在编码上：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655358410672-57cab49192da7b59eed7ba618c39d6d255cee16c69296294643a68eff01f401d.png" alt="picture 9" class="img_ev3q">  </p><p>实际看了一下，发现确实画质上有较大区别，比如原视频的白墙很光滑：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655358467434-475e70206879f5478766392201a3660654973eec188934dfe157dbd2a24e0bb0.png" alt="picture 10" class="img_ev3q">  </p><p>但编码后的白墙就明显有那种类似波纹的效果了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655358486566-93f149d18618d08ed0741e37dce78415d64e105c79d847a015f57ce19da5d9f1.png" alt="picture 11" class="img_ev3q">  </p><p>从这个角度上说，如果不考虑修改脚本，使之输出原质量的视频，那么我们的脚本输出的视频就只能当做备份与参照视频了，毕竟十倍的比率确实也有一些用武之地。</p><p>然而，这个脚本实际上还有另一个问题，那就是时间不一定能对齐。</p><p>比如刚刚文件对比图上，一个是20秒，一个是19秒，当然这个其实没有太大所谓了（虽然很非遗所以，也许就是和上面那个有两帧无法处理的问题有关），我更关心的是另一个对齐问题，曝光与时间间隔。</p><p>就是，怎么说呢，我现在并不确定gopro的曝光与拍摄间隔之间的关系，比如说，假设我们设置拍摄间隔为2秒，曝光时长为1秒，那么它是每3秒拍一次照片还是每2秒拍一张呢？</p><p>如果是每3秒拍一次照片，那么我们的算法每一帧加5秒就有问题，因为没有算上曝光时间，这样就会导致累积时间变少。</p><p>但如果是每2秒拍一张照片，那么更极端的一个情况，例如拍摄间隔为1秒，曝光时长为2秒，则似乎就无法拍摄了……</p><p>所以，这里有研究一下的必要。</p><p>总之，这种借助opencv进行后期处理的手段还是有一定实用价值，适用于很多其他的领域，是一种通用技术手段，我们有必要掌握，并且我对熟练掌握opencv之后输出我们想要的视频结果的可能性抱有很高的期望，除了曝光与拍摄间隔对齐的问题之外。</p><p>但输出的画面质量不佳（若提高质量（假设可行），势必速度会下降）与额外脚本运行的不便等因素，使我最后选择了第三种更干净的方案：<code>GoPro Labs</code>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="方案3借助gopro-labs添加时间戳浮层">方案3：借助<strong>GoPro Labs</strong>添加时间戳浮层<a class="hash-link" href="#方案3借助gopro-labs添加时间戳浮层" title="标题的直接链接">​</a></h2><p>如果说第二种方案属于后期，那么本方案则属于前期了。</p><p>众所周知，防患于未然，能从前期着手的方案，基本都是最优的。</p><p>而GoPro Labs就能帮助我们实现这点。</p><p>我们要做的事情就是：</p><ol><li>下载GoPro Labs的固件版本，完成固件升级（我的GoPro是9，是支持的）</li><li>制作我们的时间戳浮层二维码，扫描后使用</li></ol><p>主要通过这个网站： <a href="https://gopro.github.io/labs/control/overlays/" target="_blank" rel="noopener noreferrer">https://gopro.github.io/labs/control/overlays/</a> 生成我们所需的二维码，这里的每个参数都比较重要，我们一一解释：</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="浮层大小">浮层大小<a class="hash-link" href="#浮层大小" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655359589767-225e990742d950f8587e2c402e3368a9e244f5412a936ac5d47065be0bfe3eea.png" alt="picture 12" class="img_ev3q">  </p><p><code>vertical size</code>是浮层的整体高度，而非单个文字的高度，由于浮层支持多行文本，因此为了目标字体大小，多行文本时对应的竖直高度也要变高，我们设置为60，对应三行文本，（也就是每行20，单位大概是像素），效果不错</p><p><code>horizontal size</code>是浮层的整体宽度，因为这个底层是按行排版文本，因此我们直接设置成0，让它自动调整浮层的宽度即可，即所有行中最长的行的宽度</p><p><code>offset from the edge</code>是与画面边缘（应该是Y轴，因为X轴距离可以通过下文的换行符控制）的距离， 目前使用的是10，效果还不错</p><p><code>Limit dispaly time</code>设置成unlimited即可。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="浮层内容">浮层内容<a class="hash-link" href="#浮层内容" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655359884415-4a3b036583d6c3be88ca734bf9e9e51f76a3f6600c7ca7d3a5fd2751f4609384.png" alt="picture 13" class="img_ev3q">  </p><p>这个就是配置我们的自定义文本与时间、日期的地方，它是一行行下来的，可以自己用<code>\n</code>分隔符换行（但不可以换顺序，所以时间始终在日期之前）。</p><p>为了从简，我没有加任何个人自定义短语（一开始加了自己的昵称，后来觉得太冗余了，所以还是留空了），但我在尾部加了两个空行，这是为了主动地增加相机与底部（X轴）的边距，这样输出的视频里的时间戳在我mac电脑上预览时不会被进度条挡住。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="浮层位置">浮层位置<a class="hash-link" href="#浮层位置" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655360216872-e9f80b49b95e94ae25f967b4693cdd17aef45684d829b5e2986a0b246b40e314.png" alt="picture 16" class="img_ev3q">  </p><p>我将时间戳放在了左下角，因为我平常会在右下角办公，而画面中上部则是主体区域。</p><p>我们的场景中不需要使用GPS。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="二维码生成">二维码生成<a class="hash-link" href="#二维码生成" title="标题的直接链接">​</a></h3><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655360265681-720de6db987621a49e2a200321fcffca430ef8a599e20145dd6d7804e5b3aba5.png" alt="picture 17" class="img_ev3q">  </p><p>在生成二维码附近还有是否选择<code>active</code>的选项，我之前一开始捣鼓lab时弄出了bug，在 模式设置：<a href="https://community.gopro.com/s/article/GoPro-Labs-QR-Control?language=en_US#secondupdate" target="_blank" rel="noopener noreferrer">GoPro Labs: QR Controls For Settings</a> 中设置出了一个没有的模式，导致系统死掉，最后刷回GoPro9 1.5的稳定固件版本，然后重新升级到lib版本才恢复，这其中既有可能是模式问题，也有可能是这个浮层当时选了<code>permanent</code>选项，因此我现在已经完全不敢点这个选项了。但并不影响我目标功能的实现。</p><p>基于这些，最终的二维码就生成了，它对应的QR Command是：</p><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">g0oMBRNO=10oMBURN="(0,60)[BLHH:MM:SSaa mm-dd-yyyy]\n"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以后我直接基于这个Command字符串进行修改即可，还是很方便的，比如加上自定义前缀与后缀的结果如下：</p><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">g0oMBRNO=10oMBURN="(0,60)哈哈哈[BLHH:MM:SSaa mm-dd-yyyy]略略略\n"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果我们用函数去表达这个字符串输出就是：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">gen_gopro_overlay</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    overlay_edge</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    overlay_width</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    overlay_height</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    content_leading</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    content_ending</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    datetime_format</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f'g0oMBRNO=</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">overlay_edge</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">oMBURN="(</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">overlay_width</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">,</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">overlay_height</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">)</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">content_leading</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">[BL</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">datetime_fornat</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">]</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">content_ending</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>注意到，我们的时间格式也是可以自定义的，并且如果我们基于从字符串（而非网页交互）出发去生成二维码，那么我们就可以定义日期在前时间在后的格式了，比如<code>yyyyy-mm-dd HH:MM:SSaa</code>。虽然这一点未经过测试，但想必是可行的（写文章时才意识到的，hh~）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="二维码使用">二维码使用<a class="hash-link" href="#二维码使用" title="标题的直接链接">​</a></h3><p>只需要将升级成lab固件版本的gopro打开后对准我们的二维码，就会自动识别并应用了，然后“BOOM”，一个可爱的浮层就出现了！</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655360991571-d8d1b7e0310840ea24d4942d811b06c8afce5eb567d92a10db6ca0642adcd2f5.png" alt="picture 18" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="缺陷">缺陷<a class="hash-link" href="#缺陷" title="标题的直接链接">​</a></h3><ol><li>除了上文提到的容易导致系统挂掉之外，正常操作不会有问题</li><li>经测试，我们的时间戳浮层对照片和夜间延时没有效果，对普通视频与正常延时有效果。经过思考，我这个项目一开始采用夜间延时的方案现在觉得不太适用，因为实测下来在夜间我屋子几乎全黑的环境下即使开了夜间延时也几乎无法拍出能看清的画面，而白天看投影时又会导致曝光过高，因此直接放弃夜间的效果即可。当初拍夜间是为了监测睡眠，那段时间也会在睡觉时留一盏小灯（戴眼罩）以获得最好的拍摄效果，现在睡眠项目已经结项了，因此不需要了。我也更喜欢无声+全黑的睡眠环境。</li><li>关于上一点，也好像不是没有解决方案，正如我笔记中记载的 <a href="https://community.gopro.com/s/question/0D53b00008QAGooCAH/combining-the-video-overlay-and-interval-video-feature?language=en_US" target="_blank" rel="noopener noreferrer">Combining the video overlay and interval video feature.</a> 这篇帖子里的小哥貌似碰到的就是和我差不多的问题并有一个解决方案，但我暂时已经不需要了，以后有机会再研究吧！</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="其他用处">其他用处<a class="hash-link" href="#其他用处" title="标题的直接链接">​</a></h3><p>GoPro Labs的功能不仅限于添加浮层这一项，恰恰相反，这是里面最小的一个应用之一。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-timestamp-1655361326041-ae5359c76c082cda93c03f928c7e5ad513c1636b7dd46f1865dbf5e6b75e3da9.png" alt="picture 19" class="img_ev3q">  </p><p>它还有很多其他有趣的场景应用，必须运动检测、自动切换模式等，详情可参考：</p><ul><li><p><a href="https://community.gopro.com/s/article/GoPro-Labs-QR-Control?language=en_US#secondupdate" target="_blank" rel="noopener noreferrer">GoPro Labs: QR Controls For Settings</a></p></li><li><p><a href="https://www.youtube.com/watch?v=YaXcu0E10WM" target="_blank" rel="noopener noreferrer">(151) GoPro Labs: How to Use QR Codes to Instantly Switch Your Settings - YouTube</a></p></li><li><p><a href="https://www.youtube.com/watch?v=0LCGiO7jMEw" target="_blank" rel="noopener noreferrer">(151) GoPro Labs 2021 New Features for Hero 9, Max, Hero 8, Hero 7: Hands-on Details &amp; Explainer - YouTube</a></p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="方案3个人笔记">*方案3个人笔记<a class="hash-link" href="#方案3个人笔记" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lab01-how-to-install-the-labs-firmware">LAB01: how to install the labs firmware<a class="hash-link" href="#lab01-how-to-install-the-labs-firmware" title="标题的直接链接">​</a></h3><p>see <a href="https://gopro.com/en/us/support/hero9-black-product-update" target="_blank" rel="noopener noreferrer">Hero9 Black Product Update | GoPro</a>, but I failed to generate the target firmware in this site.</p><p>So I downloaded it in other place, e.g. - <a href="https://www.goproforums.com/threads/need-hero9-black-firmware-update-v1-5.87636/" target="_blank" rel="noopener noreferrer">Need HERO9 Black firmware update v1.5 | GoPro Forums</a>, which directed me to the dropbox download page: - <a href="https://www.dropbox.com/s/edh41nffo6d6gns/GoPro%20Hero%209%20firmwares%20fishycomics.zip?dl=0" target="_blank" rel="noopener noreferrer">GoPro Hero 9 firmwares fishycomics.zip</a></p><p>And finally, I saved two different firmwares in local disk, one for stable version, one for the lib one:</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-1655351979322-5f9d394f99b48f506a3fb28de9adadfd94be9ebc9f57562d3925e88635f16863.png" alt="picture 2" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/gopro-1655340186034-7e904daaa952ca0a5c3457c103fcddaa9eaee79362a7051a179ef1ca14576416.png" alt="picture 1" class="img_ev3q">  </p><p>ref:</p><ul><li><a href="https://community.gopro.com/s/article/GoPro-Labs?language=en_US" target="_blank" rel="noopener noreferrer">GoPro Labs Information</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lab02-qr-controls-for-settings">LAB02: QR Controls For Settings<a class="hash-link" href="#lab02-qr-controls-for-settings" title="标题的直接链接">​</a></h3><p>see:</p><ul><li><p>documentation: <a href="https://community.gopro.com/s/article/GoPro-Labs-QR-Control?language=en_US#secondupdate" target="_blank" rel="noopener noreferrer">GoPro Labs: QR Controls For Settings</a></p></li><li><p>custom qr control: <a href="https://gopro.github.io/labs/control/custom/" target="_blank" rel="noopener noreferrer">https://gopro.github.io/labs/control/custom/</a></p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lab03-add-an-overlay-to-viedeo">LAB03: add an overlay to viedeo<a class="hash-link" href="#lab03-add-an-overlay-to-viedeo" title="标题的直接链接">​</a></h3><p>see:</p><ul><li><a href="https://gopro.github.io/labs/control/overlays/" target="_blank" rel="noopener noreferrer">https://gopro.github.io/labs/control/overlays/</a></li></ul><p>ref:</p><ul><li><p><a href="https://community.gopro.com/s/question/0D53b00008HOPq7CAH/how-do-i-add-timestamp-to-hero-10-videos?language=en_US" target="_blank" rel="noopener noreferrer">How do I add timestamp to Hero 10 videos?</a></p></li><li><p><a href="https://www.reddit.com/r/gopro/comments/pt6u8j/burning_timestamp_on_gopro_movie/" target="_blank" rel="noopener noreferrer">Burning timestamp on GoPro movie : gopro</a></p></li></ul><p>bugfix: gopro labs won't add timestamp to interval videos, see:</p><ul><li><a href="https://community.gopro.com/s/question/0D53b00008QAGooCAH/combining-the-video-overlay-and-interval-video-feature?language=en_US" target="_blank" rel="noopener noreferrer">Combining the video overlay and interval video feature.</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="最后一点感受">最后一点感受<a class="hash-link" href="#最后一点感受" title="标题的直接链接">​</a></h2><p>国外的极客生态真地很繁荣，一个小小的gopro就能玩出这么多的花样，反观国内，似乎还停留在各种参数的堆砌与各种大饼的圈画上，实则看不到太多对待一个具体的事物（而非钱）研究的诚意与专注的热爱。</p><p>之前携国货之光大疆无人机奔赴川藏线，它真地很好。但现在身处帝都，最终还是无用武之地，幸好有位天体物理博士愿意收购它，让它继续发光发热。而我，则只有尽我可能，把一些有趣的东西搞的更明白一些、更有用一些、更好玩一些。</p><p>gopro的话题，从上篇的open-gopro到本篇的GoPro Labs，基本已经涉及了gopro核心开发生态的方方面面，朋友们需要时完全可以顺着这两篇一窥gopro的里子，进而玩出新的花样。</p><p>下一期，我们聊聊最近做的另外一个有趣的小东西：投影与手机遥控器。</p><p>Best Wishes to All of You.</p>]]></content:encoded>
            <category>开发笔记</category>
            <category>GoPro</category>
        </item>
        <item>
            <title><![CDATA[编程 | GoPro 01: 全天候自动4K延时摄影]]></title>
            <link>https://markshawn2020.github.io/blog/2022/06/11/archive/dev-gopro-1</link>
            <guid>/2022/06/11/archive/dev-gopro-1</guid>
            <pubDate>Sat, 11 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[背景]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景">背景<a class="hash-link" href="#背景" title="标题的直接链接">​</a></h2><p>北京难得下雨，因此，一旦下雨就会想起什么。</p><p>可是，人的记忆力总是有限的，也是虚无的。</p><p>人毕竟是肉体凡胎，人与人之间需要有实体的互动。</p><p>而最有效的实体，便是从古代的文字，到近代的照片，再到现在的短视频。</p><p>这是时代的进步，但我想，或许还可以更进一步，例如随着CPU、硬盘等信息技术的升级，未来建立全息个人档案的可行性将会逐渐增大，以至于，人类或许能够拥有完整追溯一个人过往以及重生一个人的能力。</p><p>但这项技术落入大众消费的范畴还远不可敢想，然，并非绝无希望的可能。</p><p>最近，恰好因了疫情的肆虐，我偶然间探索出了一种以视频完整记录人生的解决方案。</p><p>那就是：全天候自动4K延时摄影！</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="概述">概述<a class="hash-link" href="#概述" title="标题的直接链接">​</a></h2><p>首先我们要明确我们的目标，我们想完整录制自己的人生，如果可行，需要什么条件。</p><p>首先，我想，分辨率不能太低，不然没眼看，因此至少也得是1080p，最好是4K，因为4K基本能看清我们任意想看的细节。</p><p>我们就以4K为例，探讨一下硬件要求。</p><p>以GoPro摄像机为例，4K30帧录制10分钟的文件大小大约在4.5G，于是一小时便是27G，一天便是648G，一年便是231T。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654933516441-c8e243bc1634d339e694d3bdb9d0a308e5125301669d0575f125f5087595bb0f.png" alt="picture 3" class="img_ev3q">  </p><p>231T是什么概念。。。</p><p>显然不可行。</p><p>有段时间，我下决心解决我睡眠质量不好的问题，我想到了一个方案，把自己每天的睡眠录制下来，那个时刻，我第一反应便是延时！</p><p>没错，延时摄影非常适合长时间观察某个对象的场景：睡眠监控、人生监控，都非常适合。</p><p>说干就干，我监控了自己一周的睡眠：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654933983322-9d01b4747ab1a07349b3818fb8af23b5f42218ad6e0e2f821c56731b55adb5d9.png" alt="picture 4" class="img_ev3q">  </p><p>不过一开始由于没有啥经验，因此每天复盘自己的拍摄成果，至少解决了以下几个问题：</p><ol><li>gopro的电池容量并不大，4k视频录制一小时就要关机了，因此需要配一根充电线保持实时输电状态录制。</li><li>一开始选用的是夜景延时的默认自动时长选项，这导致了拍摄出来的延时短片没光时帧少，有光时帧多，这是有好处的，对后期非常方便。但其实不太适合我们的需求，因为我们只需要平凡的记录，不需要做啥后期，忽快忽慢的拍摄不利于自己对时间的把握，尤其是有光的时候，gopro拍的太快了，导致文件体积增大，也可能不太符合预期。后来摸索得出，把每帧时长控制在5秒，既可以控制10分钟内拍完一整晚，输出的文件不用分片。5秒的帧间隔有啥意义呢，按照30p来算的话，一秒本来需要30帧，而现在30帧对应了真实世界的150秒，所以等于把实际世界压缩了一百多倍。回想我们之前说的231T，如果除以150，我们得到了2，也就是一年的延时录制只需要2T的硬盘就可以了，我们买一张16T的机械硬盘，将允许我们录制5年以上！因此，硬盘方面的问题解决了。</li><li>尽管我们使用了固定的帧间隔，我们很多时候还是想知道拍摄的任意一帧是处于什么时间，我查阅了一些资料，有个比较复杂的python脚本可以允许对gopro的视频添加时间层信息，但我觉得没有必要。我想到了一个有意思的办法，那就是买了个挂钟，能同时显示日期和时间的挂钟（不需要很贵），这样就很直观了： <a href="https://item.jd.com/63986225561.html" target="_blank" rel="noopener noreferrer">康巴丝（Compas）挂钟时尚卧室客厅办公时钟日历挂表简约创意石英钟表 2941Y日历黑白色直径30cm【图片 价格 品牌 报价】-京东</a></li><li>gopro的无线方案其实远比想象地要复杂，官网介绍的是通过手机gopro quik软件连接gopro，并支持预览和操控gopro，而pc端的话要用usb连接读卡器，从而完成文件管理。这个步骤其实很繁琐，我想尝试无线的方案。后来我找到了gopro的开源代码库：<code>open-gopro</code>、<code>goprocam</code>，前者是gopro官方代码库，后者是某个人开发的wifi api。前者功能比较全面与底层，后者sdk做的比较友好方便，但支持wifi。从理论上说，我们使用<code>goprocam</code>的wifi api可以在电脑已经连接到gopro后，直接使用程序完成自动下载、清理存储的目标，但仍不够自动化，于是我又花了整整一天的时间研究明白了不需要手机app直接全程在电脑端控制gopro的原理与实现路径。</li><li>全自动化。由于我们最终设计出了完全可以自动的程序，所以又花了一下午研究清楚了基于<code>crontab</code>的定时工具，完成了全流程自动化，一切，是那样完美地运行着。</li></ol><p>接下来，将详细展开该解决方案中的一些问题。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基于gopro的全天候自动4k延时摄影系统设计">基于GoPro的全天候自动4K延时摄影系统设计<a class="hash-link" href="#基于gopro的全天候自动4k延时摄影系统设计" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="设备依赖">设备依赖<a class="hash-link" href="#设备依赖" title="标题的直接链接">​</a></h3><ol><li>一台gopro 9+设备（否则不支持<code>open-gopro</code>），可持续充电，固定房间某个角落</li><li>一台电脑，安装了<code>python 3.8+</code>，定时运行转储程序</li><li>一个2T以上空间的机械硬盘，定时转储视频</li><li>不需要网络，在转储时，gopro会自动开启一个本地局域网（但为了不影响实际wifi工作，我们的程序还是做了无线网络切换模块）</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="全自动化流程">全自动化流程<a class="hash-link" href="#全自动化流程" title="标题的直接链接">​</a></h3><div class="language-mermaid codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-mermaid codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">flowchart</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Start[开始]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--&gt; ConnectGoproViaBle["PC蓝牙连接gopro设备（将自动打开gopro）"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--&gt; ShutterOff["关闭gopro的摄影（否则无法执行文件传输）"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--&gt; EnableWifiAndConnect[打开gopro的wifi并连接]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--&gt; TransferFiles[讲gopro的文件转储到PC磁盘]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--&gt; DisableWifi["关闭gopro的wifi，复原PC的wifi连接"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--&gt; Switch2NightLapseMode["切换GoPro到夜景延时模式，设置好参数"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--&gt; ShutterOn[开启gopro的摄影]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- "一天后（十分钟的延时输出）" --&gt; ConnectGoproViaBle</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="pc端直接控制gopro拍摄下载清空的实现方案">PC端直接控制gopro拍摄、下载、清空的实现方案<a class="hash-link" href="#pc端直接控制gopro拍摄下载清空的实现方案" title="标题的直接链接">​</a></h2><p>首先，我们要知道gopro的无线通信框架，参见：<a href="https://gopro.github.io/OpenGoPro/" target="_blank" rel="noopener noreferrer">Open GoPro : Open GoPro</a>可以知道gopro只可以被蓝牙唤醒，然后被蓝牙、wifi或者usb控制，文件管理功能只允许wifi或者usb。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654935369129-4e3b66fb37ca6630f9389861c10eea1305355c9dc0b659bc5d74036a531bec75.png" alt="picture 5" class="img_ev3q">  </p><p>因此要先启动蓝牙连接，成功后再开启wifi进行文件传输。</p><p>核心代码如下：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> asyncio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> logging</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> binascii </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> hexlify</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> datetime </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> datetime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> typing </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> List</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> bleak </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> BleakScanner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> BleakClient</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> base</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">const </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> COMMAND_REQ_UUID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> GOPRO_WIFI_BASE_URL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> GOPRO_WIFI_GP_COMMAND</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> GOPRO_MEDIA_DIR</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> base</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">config </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> CONFIG_WIFI_GOPRO</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CONFIG_WIFI_HOME</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CURRENT_DATA_PATH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> base</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">log </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> logger</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> base</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">utils </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> get_media_online_path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> base</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">wifi </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> connect_wifi</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> is_wifi_connected</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># suppress unnecessary mac ble error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">logging</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getLogger</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"bleak.backends.corebluetooth.scanner"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setLevel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logging</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CRITICAL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyGoPro</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">None</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_event </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> asyncio</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Event</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_current_data_path </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> CURRENT_DATA_PATH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">connect_ble</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">notification_handler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">handle</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">None</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f'&lt;--- Response: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">handle</span><span class="token string-interpolation interpolation operator" style="color:#393A34">=</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">hexlify</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation">data</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">,</span><span class="token string-interpolation interpolation"> </span><span class="token string-interpolation interpolation string" style="color:#e3116c">":"</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation conversion-option punctuation" style="color:#393A34">!r</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic"># Notify the writer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"\n==== datetime: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">datetime</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">now</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">warning</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"电脑第一次与gopro配对时，需要保持gopro处于设置面板选中quik应用连接界面，直到收到所有返回消息方可确认配对成功"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">warning</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"程序运行之时，请确保没有其他进程正在执行，手机quik不要处于预览状态，否则将导致连接不上！"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">try</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            gopro_device </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">None</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic"># 1. 扫描蓝牙设备。正常情况下，要扫描1-2遍。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> gopro_device</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"---- Scanning for bluetooth devices... [#</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">count</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">]"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic"># 需要蓝牙权限，例如pycharm、terminal、iterm之类的应用</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> device </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> BleakScanner</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">discover</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">timeout</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"detected ble device: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">device</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">name</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> device</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">startswith</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"GoPro"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        gopro_device </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> device</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                count </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"found gopro：</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">gopro_device</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">name</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic"># 2. 连接蓝牙设备。配对自动进行，mac平台跳过（待确认）。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"----- Establishing BLE connection to </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">gopro_device</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">name</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">..."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> BleakClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gopro_device</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">connect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">timeout</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">30</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 太短的话会导致连接失败</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"BLE Connected!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic"># 3. 获取通知。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"---- Enabling notifications..."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> service </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">services</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> char </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> service</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">characteristics</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"notify"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> char</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Enabling notification on char </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">char</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">uuid</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">start_notify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">char</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> notification_handler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Done enabling notifications"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">except</span><span class="token plain"> Exception </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Connection establishment failed: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">e</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">raise</span><span class="token plain"> e</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_send_command</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> List</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> desc</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">None</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_client</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">connect_ble</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> desc </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">None</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            desc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f"Sending command of: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">data</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        desc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"---&gt; Requesting: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> desc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">desc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">clear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write_gatt_char</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">COMMAND_REQ_UUID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bytearray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">wait</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Wait to receive the notification response</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 比如开启wifi之间就需要时间间隔</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">send_command_load_timelapse_preset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># ref: https://gopro.github.io/OpenGoPro/ble_2_0#commands-quick-reference</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_send_command</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0x04</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x3E</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x02</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x03</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0xEA</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Loading timelapse preset"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">send_command_enable_shutter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_send_command</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> on</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Control shutter: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"ON"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> on </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"OFF"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">send_command_enable_wifi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        wifi名称和密码的程序化获取方式，参见`tutorial_5_connect_wifi/wifi_enable.py`</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        :param on:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_send_command</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0x03</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x17</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x01</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> on</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Control wifi: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"ON"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> on </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"OFF"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_check_wifi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">func</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        对需要使用wifi的函数装饰检查与修复</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">wrapper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">**</span><span class="token plain">kwargs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> is_wifi_connected</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_command_enable_wifi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">**</span><span class="token plain">kwargs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> wrapper</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:#393A34">@_check_wifi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">list_all_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> GOPRO_WIFI_BASE_URL </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/gopro/media/list"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">debug</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        date_ </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> datetime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">today</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isoformat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"media_list_</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">date_</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">.json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"w"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dump</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> indent</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:#393A34">@_check_wifi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">download_single_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fn</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"downloading file: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">fn</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">get_media_online_path</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fn</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_current_data_path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fn</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"wb"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"saving into: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">fp</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            f</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"√"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_delete_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> option</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> GOPRO_WIFI_GP_COMMAND </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/storage/delete"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> option</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">res </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> res </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'√'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:#393A34">@_check_wifi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">delete_single_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> media_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        删除单个文件时，网址结尾的"delete"不能带"/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        :param media_name:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">warning</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"deleting media: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">media_name</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_delete_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">option</span><span class="token operator" style="color:#393A34">=</span><span class="token string-interpolation string" style="color:#e3116c">f"?p=</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">GOPRO_MEDIA_DIR</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">/</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">media_name</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:#393A34">@_check_wifi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">delete_all_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">warning</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"deleting all the media"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_delete_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/all"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">task_daily_download_all_the_videos</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    my_gopro </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> MyGoPro</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># connect_ble part</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> my_gopro</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">connect_ble</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># wifi part</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> my_gopro</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_command_enable_shutter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">False</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># wifi打开之间需要停止拍摄</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> my_gopro</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_command_enable_wifi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    connect_wifi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">CONFIG_WIFI_GOPRO</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"---- downloading all the media"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token builtin">dir</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> my_gopro</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">list_all_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"media"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"traverse media in dir: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation builtin">dir</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">[</span><span class="token string-interpolation interpolation string" style="color:#e3116c">'d'</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">]</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token builtin">file</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">dir</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"fs"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            fn </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">file</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"n"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            my_gopro</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">download_single_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fn</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            my_gopro</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">delete_single_media</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fn</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># TODO：将gopro无线桥接到路由器，从而化简该步</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 最终要保证wifi回来</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    connect_wifi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">CONFIG_WIFI_HOME</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> my_gopro</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_command_enable_wifi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">False</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># continue part</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> my_gopro</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_command_load_timelapse_preset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> my_gopro</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">send_command_enable_shutter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'__main__'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 若以下任务是类的一个方法，则需要使用loop，如果是一个全局函数，则可以直接用run，参考：https://cloud.tencent.com/developer/article/1598240</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    asyncio</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">task_daily_download_all_the_videos</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>该代码主要参考<code>open-gopro</code>仓库里的<code>samples</code>，做了不少的修改与自己的封装，核心难点是<code>asyncio.Event</code>的使用。</p><p>除去技术上的难点，在产品上也有不少的坑。首先官网和绝大多数文章都只告诉你怎么用手机连gopro，而鲜有用电脑无线练的。</p><p>我也是抱着尝试的心态，在gopro hero 9中打开“连接设备-quik应用”后，直接在电脑端启动脚本成功连上的，这说明，手机gopro quik软件的连接原理和<code>open-gopro</code>仓库是等同的。</p><p>另外，蓝牙连接要使用到<code>bleak</code>底层库，也有一些可以忽略的<code>Error</code>信息，这些都需要花时间去鉴别，幸而没有大问题。</p><p>紧接着，由于蓝牙属于系统的敏感权限，因此脚本启动时，需要确保有蓝牙权限，一般情况下会弹窗，否则得自己加（比如<code>terminal.app</code>、<code>iTerms.app</code>、<code>/usr/sbin/cron</code>等），这一步将直接劝退对操作系统不怎么熟的程序员，因为你几乎找不到任何相关的资料。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654936750010-9948c6c0a74e620066ed5e9a6a952f1f0961b37c910bbc5e6186dc774ed7098c.png" alt="picture 6" class="img_ev3q">  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基于crontab自动化的定时程序">基于<code>crontab</code>自动化的定时程序<a class="hash-link" href="#基于crontab自动化的定时程序" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自动化的必要性">自动化的必要性<a class="hash-link" href="#自动化的必要性" title="标题的直接链接">​</a></h3><p>尽管程序我们写好了，已经可以运行，自动控制gopro的开启、录制、转储等功能，但是得每天都运行一遍，否则gopro的存储卡（我放的是一张128G的存储卡）将很快被撑爆（尤其是录制视频而非延时的话）。</p><p>而每天手动执行是很烦的，并且由于执行过程中需要连接到gopro的无线网络，因此本地就没法联网了。所以最适合的办法是让电脑自动夜间执行，达到无感的目的。</p><p>我想了想，最佳的时间点是凌晨五点，此时大多数情况下环境已有微光，能看清，而自己一般都在熟睡，不会有太大的动作；而gopro自动操作的哔哔哔声，也一定程序上有益于自己的早起。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自动化的充分性">自动化的充分性<a class="hash-link" href="#自动化的充分性" title="标题的直接链接">​</a></h3><p>我们要回到项目的起点上，我们做这个工程的意义是什么？</p><p>是为了如实地记录自己的人生，而非是一场作秀，对不？</p><p>那就尽量做到无感，甚至忘记这个项目！</p><p>当一切做到自动化之后，很多时间里自己都不知道自己是处于被记录的状态，这才是我们最想要的。</p><p>因此，我们需要自动化</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自动化方案选择">自动化方案选择<a class="hash-link" href="#自动化方案选择" title="标题的直接链接">​</a></h3><p>在mac平台上，至少有两种，一种是基于<code>crontab</code>，这也是linux通用的解决方案。</p><p>还有一种是使用<code>launchtl</code>和<code>plist</code>的方案。</p><p>考虑到兼容性，以及自己在linux平台上的经验，我选择使用<code>crontab</code>。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="crontab自动化的核心难点"><code>crontab</code>自动化的核心难点<a class="hash-link" href="#crontab自动化的核心难点" title="标题的直接链接">​</a></h3><p>理论上当我们的程序已经写完之后，将程序喂给<code>crontab</code>然后自动化运行，是再自然不过的事情了。</p><p>然而，我们的项目却有点不一样。</p><p>首先就是我们刚刚说的蓝牙权限的问题。由于<code>crontab</code>是一个后台程序，因此不会弹窗提醒你要不要允许系统权限，而是直接报错。</p><p>所以我们首先要跟踪<code>crontab</code>的输出，这是写自动化脚本的基本素养。</p><p>其次在定位到问题之后，要把我们的蓝牙权限交给<code>cron</code>。</p><p>另外还有一个问题，在我们的程序中，我们调用了mac的系统调用去控制wifi，其中在mac平台上连接名称为A密码为B的wifi的命令如下：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">networksetup </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">setairportnetwork en0 A B</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>但这里有两个问题，首先是如果我们的名称里有引号，则会被unix系统识别错误，我们需要这么写：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">networksetup </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">setairportnetwork en0 </span><span class="token string" style="color:#e3116c">"A's wifi"</span><span class="token plain"> B</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>open-gopro</code>项目里这部分代码就写的很粗糙，他们直接用单引号去包括wifi的名称和密码，这在wifi名称或密码里包含单引号时将导致错误。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654937659590-88b30ece6e4293f6afb3eb8ae4aede13181898295cbdc091e4018cb7820f6716.png" alt="picture 7" class="img_ev3q">  </p><p>其次还有个问题：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  ~ which cron</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/sbin/cron</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  ~ which networksetup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/sbin/networksetup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>虽然<code>cron</code>和<code>networksetup</code>都处于<code>/usr/sbin/</code>目录下，但当<code>cron</code>运行时，系统路径里却只有少的可怜的<code>PATH</code>：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654937962014-a80cc8825496fdadf5accafe126bebf7946caa645260b2c11dcab3f1714b00ce.png" alt="picture 8" class="img_ev3q">  </p><p>因此在<code>cron</code>程序中，无法直接调用<code>networksetup</code>：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654937983944-008f34e4649edee4440f96ea27e4393531862f2afb22b537bdaaf21c89d52102.png" alt="picture 9" class="img_ev3q">  </p><p>最简单的做法，是在我们的程序中显式指定<code>networksetup</code>的路径：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/usr/sbin/networksetup en0 A B</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这样，将原程序配置到<code>crontab</code>实现自动化的所有问题都解决了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654938110099-ae0481c9ff2f6985d6600f24ebde0b9e42a8e769a2aac5f16b198fc263d8dcd7.png" alt="picture 10" class="img_ev3q">  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="说在最后的话">说在最后的话<a class="hash-link" href="#说在最后的话" title="标题的直接链接">​</a></h2><p>绝大多数人的生命都是平淡如水的，因为我们不是Harry Porter，不是那个"The Chosen One"，甚至连被Voldemort选中的资格都没有。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654939590506-29c337c9cec89eabb7e6c8dc7b37c5f7065924b240cb6048257c5a59839adbdf.jpg" alt="picture 14" class="img_ev3q"><br>
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654939607377-f83d60721de76b09feb989c7caaeca87e37d56a62a6ebe6aee8e1e473875bde6.jpg" alt="picture 15" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654939631870-02c8906434c94a7a8cd9def6fd0a9e403bedff56f85490c819248e0e503a7d7f.jpg" alt="picture 16" class="img_ev3q">  </p><p>我们有的只是当下：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/my-gopro-1654938185985-7bd847c645a3d6c3b71a7b9fb712c384dba992c7efb1f44292faadd5366bec1a.png" alt="picture 11" class="img_ev3q">  </p><p>最后借一部短片 <a href="https://www.bilibili.com/video/BV1Rv4y1w7hA?p=1&amp;share_medium=iphone&amp;share_plat=ios&amp;share_session_id=FC6EA2F7-5433-42F2-B9E1-1ED0F5A232A1&amp;share_source=WEIXIN&amp;share_tag=s_i&amp;timestamp=1654581591&amp;unique_k=0kUaMFS&amp;vd_source=9cb028fe6c978c6816626901d9249eb1" target="_blank" rel="noopener noreferrer">“cheems，你要去码头整点薯条吗？”_哔哩哔哩_bilibili</a> 结束本文：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot2.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot3.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot4.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot5.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot6.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot7.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot8.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot9.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot10.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot11.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot12.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot13.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot14.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot15.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot16.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot17.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot18.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot19.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot20.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot21.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot22.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot23.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot24.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot25.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot26.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot27.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot28.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot29.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot30.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot31.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot32.jpg" alt="xxx" class="img_ev3q"><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/screenshot33.jpg" alt="xxx" class="img_ev3q"></p><p>【音乐：The Time To Run(Finale)】</p>]]></content:encoded>
            <category>开发笔记</category>
            <category>GoPro</category>
        </item>
        <item>
            <title><![CDATA[编程 | iOS 自动化实现王者荣耀一键换装]]></title>
            <link>https://markshawn2020.github.io/blog/2022/06/06/archive/dev-ios-automation</link>
            <guid>/2022/06/06/archive/dev-ios-automation</guid>
            <pubDate>Mon, 06 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[1. 概要]]></description>
            <content:encoded><![CDATA[<ol><li>概要</li><li>秒换装概念与分析<ol><li>秒换装的难度阶梯</li><li>备战出装换装的优点</li><li>备战出装换装的缺点</li><li>换指定装的实现分析</li></ol></li><li>iOS秒换装实现之语音控制（Voice Control）实现自定义手势</li><li>iOS秒换装实现之越狱、第三方应用</li><li>秒换装实现之基于外设硬件</li><li>iOS秒换装实现之基于iOS自动化：<code>facebook-wda</code>（WebDriverAgent）</li><li>UI自动化的缺点（行走中的触控集成问题）<ol><li>多点触控集成</li><li>封号的风险</li><li>需要USB接入</li></ol></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="概要">概要<a class="hash-link" href="#概要" title="标题的直接链接">​</a></h2><p>本篇主要讲解在iOS平台上如何实现王者荣耀一键换装。安卓由于有<code>adb</code>的存在，自动化远比iOS简单的多得多，因此不在本文探讨范畴内，感兴趣地可以参阅以前发的笔记：</p><p>【文章：安卓系统】</p><p>（其实主要是自己目前用iOS比较多，所以懒得再写Android部分）</p><p>本文核心参考：</p><ul><li><p><a href="https://www.jianshu.com/p/da1e00777273" target="_blank" rel="noopener noreferrer">IOS + Appium自动化教程 - 简书</a></p></li><li><p><a href="https://github.com/openatx/facebook-wda" target="_blank" rel="noopener noreferrer">openatx/facebook-wda: Facebook WebDriverAgent Python Client Library (not official)</a></p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="秒换装概念与分析">秒换装概念与分析<a class="hash-link" href="#秒换装概念与分析" title="标题的直接链接">​</a></h2><p>众所周知，王者荣耀的高端局经常涉及到两个骚操作：秒换装、三指操作。本篇主要将秒换装的操作，三指的话随缘说吧。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="秒换装的难度阶梯">秒换装的难度阶梯<a class="hash-link" href="#秒换装的难度阶梯" title="标题的直接链接">​</a></h3><p>不同的换装顺序难度是不同的。</p><p>最简单的是换复活甲，因为复活甲的缓冲时间是2秒，并且大多数情况下复活甲是用在对方一波技能打完之后：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654417265352-4adad444d58e652ab28960d7be6a3ce444de0f1759ae52d635e21db60a393f67.png" alt="picture 1" class="img_ev3q">  </p><p>其次是换金身，缓冲时间是1.5秒。但直到现在，我金身换其他（复活甲、名刀）等都换不来，原因是金身是主动释放，一般都是躲技能的紧急时刻，手忙脚乱的。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654417294961-eca0d2824084e1fba5f20ec52ad44f50b7e36e7c4e62d05ebc59a9503d92b744.png" alt="picture 2" class="img_ev3q">  </p><p>接着是名刀，缓冲时间只有1秒，远程英雄（例如我的诸葛）直接减半。0.5秒是真地只能换个锤子了。不过名刀其实比金身要好一些，因为触发名刀的场景大多数情况下是在跑路的时候，这个时候不需要什么其他操作，边走边换就可以。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654417411153-c17a01f9f0f7b77a407b263dbbd036c4a2ac81c7b8f7debc33da0bdb8a67c1b6.png" alt="picture 3" class="img_ev3q">  </p><p>而换装的核心操作，就是首先先在商店预选好下一件装备（通常走在路上的时候），或者基于预先设置好的出装顺序（缺点等会说）。然后就可以通过四次点击实现换装，在不引起混淆的情况下，我们称这种换装为“一键换装”：</p><ol><li>点击商店</li><li>点击卖出</li><li>点击关闭</li><li>点击购买（第一个推荐装备，如果钱够的话）</li></ol><p>换的核心是卖掉一个再买进一个，如果格子还没满，钱又多，就不存在换的问题，直接就到第四步，这个没啥操作。但如果格子满了，或者钱不够，就需要极快地时间内精准地按下四个键，这个要求是很高的。反正我也曾经尝试在训练营中练过会，表示紧张时刻并不能跟的上。</p><p>因此需要自动化！毕竟，为这样一款游戏苦练换装的手速是不值得的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="备战出装换装的优点">备战出装换装的优点<a class="hash-link" href="#备战出装换装的优点" title="标题的直接链接">​</a></h3><p>备战出装换装的优点也是很显著的，我们可以很简单地备战最后一套出装顺序是复活甲、金身、名刀、血手、炽热支配者。</p><p>这样，假设我们有一键换装脚本，即可轻轻松松地按顺序秒换复活甲、金身、名刀、血手、炽热支配者，十秒换五装。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654418687276-36ebbc351388d23a3489aa3b6dcc3d0e6b77794643b4892fcb1e238cc2933d00.png" alt="picture 5" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654418656646-e6fc345e3680afe24a83524181fdcb2dd12b94b000e5af6fc6cfcb5e87e20555.png" alt="picture 4" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654418923667-471c1cc58cd7497a08732c9a5e9ed57b95fac43a413d6970912f95157b347991.png" alt="picture 6" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="备战出装换装的缺点">备战出装换装的缺点<a class="hash-link" href="#备战出装换装的缺点" title="标题的直接链接">​</a></h3><p>首先是不灵活，局越高端，就越需要针对对方阵容出装，此时的备战出装如果只有一套的话，就很不灵活了。</p><p>我很久以前喜欢玩中单诸葛的时候，就预设了三套出装：暴力（回响+帽子+大书）、防近身（帽子换面具、大书换法穿棒）、防回血（回响换梦魇）。现在比较喜欢在局中随机应变了，但这就引发了新的问题：顺序问题，即如果局中先买了其他装备，则有可能会影响预期顺序。</p><p>例如假设原先六神装最后两件一次是法穿杖、复活甲，由于逆风局中途先出了个魔女抗压，然后快六神的时候，按照顺序第六件变成了法穿杖，第七件才是复活甲，所以按照默认顺序的话，危机关头一键换装就没有换到想要的复活甲。</p><p>所以”手动“预选下一件换装装备的必要性还是有的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="换指定装的实现分析">换指定装的实现分析<a class="hash-link" href="#换指定装的实现分析" title="标题的直接链接">​</a></h3><p>有些场景下，我们需要换指定装，尤其是复活甲。</p><p>比如无论你在玩什么英雄，并且玩的很顺风，突然不小心有个失误被集火了，如果能瞬间换个复活甲，等待队友的输出，可能就对局势有至关重要的影响；或者在最后守水晶或者冲水晶时需要自己用复活甲换对面的输出。</p><p>换指定装的核心难题，最主要的难题是要卖掉哪件装备。</p><p>大多数情况下，最合适的选择，是卖掉鞋子，因为太便宜了，后期的附属属性就不高；其次是最贵的装备，否则可能买不起指定装。</p><p>由于格子是顺序装装备的，因此实际上，我们不太清楚要卖的装备一定在哪个格子里。所以市面上有比如说预先设置好卖掉第六个格子然后买新装备的这种，我认为必要性不高。个人认为，换指定装最佳的方式，还是在和平时提前选好要卖的装备与要买的装备，然后在战时直接使用一键换装。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ios秒换装实现之语音控制voice-control实现自定义手势">iOS秒换装实现之语音控制（Voice Control）实现自定义手势<a class="hash-link" href="#ios秒换装实现之语音控制voice-control实现自定义手势" title="标题的直接链接">​</a></h2><p>在iOS平台上，目前最适合小白用户使用的官方办法，是基于语音控制。</p><p>所谓的语音控制，倒不是各种AI或者siri之类的智能语音控制，而是iOS自带的辅助功能里的语音控制，用户可以自己自定义一条语音指令，并未其搭配上手机要执行的输入或者点击动作。</p><p>于是我可以指定一条比如“乌拉”，然后设置其的动作为在屏幕上依次点击四个点（一键换装）的位置。保存之后，就可以通过大喊一声“乌拉”去触发它。</p><p>听起来很酷，但这种办法有几个缺点。</p><p>第一个缺点，是在配置这个点击动作时，它展示的是一个纯白的界面，实际上你不知道自己点的位置对应游戏里的哪个点。</p><p>这几乎只能从硬件上解决：比如我撕了几块小胶带，对照着截图提前贴在屏幕上的对应位置上，有些B站视频是用了记号笔，我没有这种可以画在贴膜上的记号笔。</p><p>第二个缺点，是一键换装的点击位置比较靠近边缘（购买键、关闭键），而iOS的手势定制时则必须先点击下方的“隐藏控制”，然后才能完整录入四个点的位置，并等待十秒后才能退出（虽然不影响后续操作，但每次都要运行10秒的脚本确实不够理想，从完美主义角度来说）。而最关键的就是即使屏幕上有四个标识好的坐标，手指去按时，也很难按照顺序按到最快，毕竟人手始终有反应速度的问题。因此理论上可能至少要0.5秒，实际在1秒左右。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654518617422-360051627d089bd41668ad94c8f5109559d3c87a2f93740a294b15f693c1ff1d.png" alt="picture 1" class="img_ev3q">  </p><p>如果前两个缺点还只是可以克服的小问题，那么第三个缺点就无法忽视了，那就是启动延时。由于iOS的语音控制，需要经过一套算法去识别你有没有喊“乌拉”这个词，因此需要时间，而这个时间，在恒定的一秒左右。所以通过这个办法，至少我测试下来，当我从喊乌拉时到换装完成，实际耗时要在2.5秒左右。这个时间，说实话，很不可以接受。</p><p>比如我玩诸葛时有套“富贵险中求”的连招就是“2冲刺+1+3+金身+2追击或者撤退”，一套操作都是几乎瞬间完成的，此时如果我们在用完金身后再语音控制进行换装，那基本上是不现实了。</p><p>考虑到这种情况，我后来想了个办法，就是提前喊口令。因为在喊完口令后，要大概一秒才会触发换装，所以我就在准备冲锋时先喊“乌拉”，再按“2+1+3+金身”，此时等待换装完成，然后再后续操作。</p><p>这听起来有点奇怪，非常奇怪，有种蒙太奇的感觉，但它确实是某些场景的有效的解决方案。</p><p>哦对了，最后，说一下语音控制中英文的问题，由于中文指令至少要四个字起步，因此建议配置英文指令，可以很简单的比如说用“f**k”完成，乌拉不属于英文，但你可以自己配置“wula”的词汇。再者，中文的识别难度肯定比英文大，苹果毕竟是美国的公司，用英文都已经1秒延迟了，别说中文了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ios秒换装实现之越狱第三方应用">iOS秒换装实现之越狱、第三方应用<a class="hash-link" href="#ios秒换装实现之越狱第三方应用" title="标题的直接链接">​</a></h2><p>刚刚讲了用苹果官方的语音控制来实现自定义手势以完成一键换装的办法，缺点最主要的是执行时的延迟。</p><p>那有没有其他的软件可以帮助我们更快的反应呢？</p><p>有。但如果我们不越狱的话，几乎没有可用的，比如按键精灵之类。</p><p>反正病毒风险很高，也基本都要收费。</p><p>越狱是不需要收费的，但越狱代价是很高的，普通小白肯定没必要考虑，不然手机就不保修了。</p><p>另一种办法是通过外设实现。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="秒换装实现之基于外设硬件">秒换装实现之基于外设硬件<a class="hash-link" href="#秒换装实现之基于外设硬件" title="标题的直接链接">​</a></h2><p>就我所了解到的，国内至少有飞智和北通两家公司在做基于王者荣耀、吃鸡等游戏的外设生态开发，用户只需要购买他们的手柄接上，就能在软件里自定义每个按键的宏动作，从而实现一键换装、英雄连招等操作了。</p><p>我实际体验过北通H2和飞智黄蜂2两款外设，首先值得肯定的是他们的外设确实是有效的，完全没有上述语音控制的延时问题了。</p><p>但接着个手柄（单手柄或者双手柄）玩王者之类的游戏，还是有点奇怪，因为实际没有完全脱离屏幕，比如比较畅销的黄蜂2左手手柄，确实右手的放技能还得在屏幕上比较方便，毕竟每个技能都要摇动，不是一般手柄能够实现的。一般的游戏手柄只有两个摇杆。</p><p>但也有不少问题。北通H2的硬件连接、手感、颜值上要逊色于飞智黄蜂2（当然北通价格也更便宜点），此处暂时不展开对北通H2的评价了，是我去年体验的，不太记得了。飞智黄蜂2最近体验了一下，说一下它的优缺点。</p><p>首先是优点吧，颜值、做工（据说是日本摇杆）、连接、软件上整体做的都非常不错，体验很好。</p><p>缺点的话，苹果的横屏游戏默认是顺时针旋转90度，也就是屏幕顶部是左边。而苹果13的摄像头是凸起的，此时如果接黄蜂飞智2的左手手柄，会发现不够稳定（如果是接右边则非常贴合），当然由于上下还是能够用力压住，所以还是能用，只是摄像头那部分被压着，感觉不太好。</p><p>这里完全不建议用户把手机开启自动旋转后，逆时针转90度后搭配飞智黄蜂2玩，否则会发现按键位置完全反了，没法用。飞智官方是推荐大家关闭旋转使用的。但我实际体验下来，通过先逆时针旋转90度然后锁定方向后，再去飞智里重新配置（进去再保存再出来，不用更改），其实也能用，只是偶尔会转来转去，这点上是飞智自己的软件没优化到位，或者不愿意担风险，因为硬件操控屏幕的原理是物理坐标点固定的，旋转屏幕后坐标点没变，但游戏中却变了。飞智毕竟是通过软件提前固定好坐标点，所以如果不关闭自动旋转，用户在游戏中旋转手机后则必然出现问题。</p><p>不过对于我来说，还有几个小问题。</p><p>首先是性能过剩，飞智黄蜂2配备了摇杆、A键、B键、LT键、LB键、扳机键，键位对我来说太多了，我其实只要一个键就可以了，这款手柄更适合玩吃鸡。更适合我的其实是飞智的另一款手柄：<a href="https://item.jd.com/100026396908.html" target="_blank" rel="noopener noreferrer">壹柄</a>，它只有一个摇杆和按键。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654520323055-0d1446ea4ae813235202b5d5307b68dbb6a36bf250d31342094d62afe68cc00b.png" alt="picture 3" class="img_ev3q">  </p><p>另一个黄蜂2的问题，就是摇杆的位置太偏上了，导致我的手型不是特别舒服，不像直接在屏幕上玩，虎口的角度大概在45度，用飞智直接变成5度了。</p><p>综上这些考虑，我还是把黄蜂2退掉了，毕竟那个价格给我的体验达不到期望，性能也绝对过剩。</p><p>壹柄的话后续我也没有继续考虑，因为我在研究飞智的软件时，同步研究了不越狱情况下对iOS自动化的实现办法，而这最终成功了，那就是大名鼎鼎的wda：WebDriverAgent。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ios秒换装实现之基于ios自动化facebook-wdawebdriveragent">iOS秒换装实现之基于iOS自动化：<code>facebook-wda</code>（WebDriverAgent）<a class="hash-link" href="#ios秒换装实现之基于ios自动化facebook-wdawebdriveragent" title="标题的直接链接">​</a></h2><p>wda是什么？从名字来看：WebDriverAgent，网页驱动代理，这个对于我（一名专业的爬虫工程师）来说太熟悉不过了，我们平常用的selenium自动化框架其实背后都需要一个driver，比如phantom、google的chromedriver或者firefox的geckodriver。</p><p>那wda的作用就是把整个手机系统的ui操作，集中到这个wda身上，通过wda向下调用系统的ui操作指令，从而完成自动化。</p><p>在iOS平台上，这个系统ui操作指令的框架，是苹果自带的<code>UiAutomation</code>（已废弃）和<code>XCTest.framwork</code>。</p><p>在我配置wda的过程中，经历了漫长而又痛苦的调试过程，一开始我是直接用facebook官方的<code>WebDriverAgent</code>进行配置的，结果各种bug，主要是我的xcode、我的手机系统（iOS15）太新了。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654521247615-7aa64babfae21ba5e4aa3f7312675df1823496646c8005d524c0cd502dc50db3.png" alt="picture 4" class="img_ev3q">  </p><p>爬坑的过程可以参考：- <a href="https://www.cnblogs.com/hong-fithing/p/15203980.html" target="_blank" rel="noopener noreferrer">WebDriverAgent重签名爬坑记 - 温一壶清酒 - 博客园</a></p><p>当时就是卡在了第二步，百般搜索都得不到解决办法，结果竟然找到一个国人把四步都走完了。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654521364105-3d2dd53b80df2fd385b651734d5867196d488eedae1961875d73b22dadab17ad.png" alt="picture 5" class="img_ev3q">  </p><p>但尽管如此，基于facebook的这个wda，我最终还是有一步没有搞定，那就是<code>inspector</code>不出截屏图片，我看了原因，还是有一句代码没过，所以这个代码确实太老了。</p><p>最终，我选择了文章里说的方法二，也就是基于appium里面的wda，一下就成功了，果然代码还是得用新的。</p><p>新的wda里也没有<code>inspector</code>，而且<code>session</code>默认返回<code>null</code>了，我以为又是我的操作的问题，后来在 <a href="https://testerhome.com/topics/23554" target="_blank" rel="noopener noreferrer">返回的 json 串 sessionId 为什么是 null · TesterHome</a>确认了是新的版本设计。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654521693689-9d8b15bb0e192e41c9d11220eb29b5e68314d402eaf407d714543a2a5f31c2d6.png" alt="picture 6" class="img_ev3q">  </p><p>最后一切ok之后，使用<code>facebook-wda</code>的python客户端进行连接，果然成功了，然后就可以通过代码控制屏幕的触摸手势了，一切都非常丝滑。</p><p>不过使用<code>WebDriverAgent</code>也有一些问题，最大的问题是由于底层使用了iOS自带的Test框架，所以会有两行字“Automation Running, Hold...”在屏幕上随机浮动，有时会长时间不提示，有时就会一直都在，虽然是层“Overlay”半透明的，但是很烦，这个没法去除。</p><p>另外有一个问题是屏幕没动作每隔两三秒就会自动变暗，于是我在执行脚本的时候启动了两个线程，一个线程捕获键盘动作执行脚本，另一个线程每隔2秒钟点击一下屏幕上的（0, 0）处坐标，保持屏幕常量，实测有效。</p><p>以下是现成的执行代码脚本：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> wda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># wda.DEBUG = True # default False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wda</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">HTTP_TIMEOUT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5.0</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># default 60.0 seconds</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DURATION </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.01</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IS_RUNNING </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># url = "http://169.254.101.229:8100"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># url = "http://192.168.1.3:8100"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"http://localhost:8100"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># session_id = 'B957CEB2-26D7-489E-A659-B37F24823ABD'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">session_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'00008110-000634163E9B801E'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># c = wda.Client(url=url)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># c = wda.Client()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 如果只有一个设备也可以简写为</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># If there is only one iPhone connected</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> wda</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">USBClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Show status</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">status</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Wait WDA ready</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">wait_ready</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">timeout</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">300</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 等待300s，默认120s</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CHOOSE_Y </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.8837606837606837</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CHOOSE_1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.34360189573459715</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            CHOOSE_Y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CHOOSE_6 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.6994470774091627</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            CHOOSE_Y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CHOOSE_X_INTERVAL </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0711690363349131</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># (CHOOSE_6 - CHOOSE_1) / 5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IS_SHOPPING_OPEN </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">open_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">global</span><span class="token plain"> IS_SHOPPING_OPEN</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> IS_SHOPPING_OPEN</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"打开商店"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        IS_SHOPPING_OPEN </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.06872037914691943</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token number" style="color:#36acaa">0.4111111111111111</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># else:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#     print("商店已打开")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sell</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"卖出装备"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.8270142180094787</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0.8017094017094017</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"购买装备（在商店中）"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.8270142180094787</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0.9017094017094017</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">close_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">global</span><span class="token plain"> IS_SHOPPING_OPEN</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> IS_SHOPPING_OPEN</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        IS_SHOPPING_OPEN </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"关闭商店"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.8609794628751974</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token number" style="color:#36acaa">0.08034188034188035</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># else:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#     print("商店已关闭")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buy_first_recommended</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"购买第一件推荐装备"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.13361769352290679</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0.40615384615384615</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">select_k_bought</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    选中第i个已买的装备</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :param i: 从1到6</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"选择第</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">i</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">格已买装备"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CHOOSE_1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> CHOOSE_X_INTERVAL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> CHOOSE_Y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">select_move</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"筛选【移动】（鞋子）"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.13230647709320695</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0.6068376068376068</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">select_attacks</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"筛选【攻击】"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    open_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.12717219589257503</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0.30256410256410254</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">select_defense</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"筛选【防御】"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    open_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.12717219589257503</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0.55056410256410254</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buy_mingdao</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    购买名刀</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"购买名刀"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    open_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    select_attacks</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 滑动到名刀页</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">swipe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">300</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.45</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.32</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buy_fuhuo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    购买复活甲</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"购买复活甲"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    open_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    select_defense</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 滑动到复活甲页</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">swipe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">300</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.65</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.18</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run_buy_fuhuo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&gt;&gt;&gt; 一键购买复活甲"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy_fuhuo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    close_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run_buy_mingdao</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&gt;&gt;&gt; 购买名刀"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy_mingdao</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    close_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run_one_switch_for_first_recommended</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    一键换预选装</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&gt;&gt;&gt; 一键换装"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    open_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sell</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    close_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy_first_recommended</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run_one_clear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&gt;&gt;&gt; 清空装备"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    open_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        select_k_bought</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sell</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    close_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run_one_buy_attacks</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&gt;&gt;&gt; 购买推塔装"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buy_gongsuqiaing</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        速击之枪</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.42101105845181674</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token number" style="color:#36acaa">0.8008547008547009</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        buy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buy_fengbaojujian</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        风暴巨剑</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">        """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.42338072669826227</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token number" style="color:#36acaa">0.1811965811965812</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        buy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    open_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 买攻速鞋</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    select_move</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0.42101105845181674</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0.8257264957264957</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> DURATION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 再买攻速装</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    select_attacks</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy_gongsuqiaing</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy_gongsuqiaing</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy_fengbaojujian</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buy_fengbaojujian</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    close_shop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">process_keep_awake</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">tap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">process_monitor_input</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> keyboard</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> keyboard</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">is_pressed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'ESC'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> keyboard</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">is_pressed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">' '</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            run_one_switch_for_first_recommended</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> keyboard</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">is_pressed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"f"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            run_buy_fuhuo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> keyboard</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">is_pressed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"m"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            run_buy_mingdao</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> keyboard</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">is_pressed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"q"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            run_one_clear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> keyboard</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">is_pressed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"g"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            run_one_buy_attacks</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'__main__'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> threading </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> Thread</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Thread</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">target</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">process_monitor_input</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Thread</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">target</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">process_keep_awake</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> daemon</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这些硬编码的坐标也需要通过一个脚本获取，我是基于opencv实现的：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">ref:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    - [Displaying the coordinates of the points clicked on the image using Python-OpenCV - GeeksforGeeks](https://www.geeksforgeeks.org/displaying-the-coordinates-of-the-points-clicked-on-the-image-using-python-opencv/)</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    - [How to draw Chinese text on the image using `cv2.putText`correctly? (Python+OpenCV) - Stack Overflow](https://stackoverflow.com/questions/50854235/how-to-draw-chinese-text-on-the-image-using-cv2-puttextcorrectly-pythonopen)</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># importing the module</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> cv2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> jstyleson</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">json </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> jstyleson</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">coors </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># function to display the coordinates of</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># of the points clicked on the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">click_event</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> flags</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># checking for left mouse clicks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> event </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EVENT_LBUTTONDOWN</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># displaying the coordinates</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># on the Shell</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' '</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># displaying the coordinates</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># on the image window</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        font </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FONT_HERSHEY_SIMPLEX</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">putText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">img</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">','</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> font</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        coors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> h</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">imshow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'image'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> img</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># checking for right mouse clicks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> event </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EVENT_RBUTTONDOWN</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># displaying the coordinates</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># on the Shell</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' '</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># displaying the coordinates</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># on the image window</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        font </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FONT_HERSHEY_SIMPLEX</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> img</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        g </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> img</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        r </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> img</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">putText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">img</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">','</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">','</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> font</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">imshow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'image'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> img</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># driver function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"__main__"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fn </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">input</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"脚本名："</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># reading the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    img </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">imread</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'assets/攻击.png'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    h</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> channels </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> img</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">shape</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"w: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">w</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">, h: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">h</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># displaying the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">imshow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'image'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> img</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># setting mouse handler for the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># and calling the click_event() function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">setMouseCallback</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'image'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> click_event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># wait for a key to be pressed to exit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">waitKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># close the window</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cv2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">destroyAllWindows</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dump</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">coors</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">fn</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">.json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"w"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> indent</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ui自动化的缺点行走中的触控集成问题">UI自动化的缺点（行走中的触控集成问题）<a class="hash-link" href="#ui自动化的缺点行走中的触控集成问题" title="标题的直接链接">​</a></h2><p>最后说说UI自动化的缺点。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="多点触控集成">多点触控集成<a class="hash-link" href="#多点触控集成" title="标题的直接链接">​</a></h3><p>首先是影响可行性的一个问题：多点触控集成。</p><p>这个问题在我去年做安卓触控开发的时候就发现了，为此我当时写了一个触控集成中心，当做系统触控事件的代理人、中间人，实测有效，但有点bug，由于时间有限最后也没有去修复。</p><p>这个问题到底是啥呢？那就是安卓与苹果系统的触控事件单元，不是基于手指的，而是基于时间戳的。</p><p>啥意思呢？</p><p>意思就是，当我手指在屏幕上点击一个点时，系统报的是一个单指点击的动作；而如果是两根手指点击了两个点时，系统报的是一个双指点击的动作。那么问题来了，当我在游戏中使用左手控制方向盘移动时，系统报的是一个单指按压移动的动作；此时如果我用自动化控制脚本再发送一个点击动作，则不可行，因为此时应该是一个双指动作，但现在缺少那么一个中枢告诉系统，我现在是双指了，因为屏幕是屏幕，脚本是脚本，如果用脚本，那么手指在屏幕上最好别动。否则脚本在动，手指也在动，系统就会犯迷糊，这是最大的问题。</p><p>我当时做的就是首先监控屏幕上的手指，把它拦截；同时监控外设的输出，也把它拦截，然后把两个根据安卓的规则再封装，再往下传，这是可行的。但我们的iOS平台上的wda，我目测下来是不行的。</p><p>所以平常我可以边移动，边用另一根手指打开商店进行换装。</p><p>但现在，使用脚本，你只能移动停止后，再启动脚本换装完成，然后再恢复移动，中间一定不要碰屏幕，否则轻则导致换装失败，重则脚本直接挂掉，因为会让iOS觉得这个触控事件输入有问题。</p><p>好在，这个问题其实不大，我之前用一开始的脚本录了一个视频，这里面可以看到换装的时间还比较长的。</p><p>【视频：一键换装】</p><p>后来考虑到了这个问题，不能长，所以我修改了程序里面每个按键的默认时长，都改为了0.01秒完成按键动作，然后换装就直接飞快，这绝对不是人手可以点出来的速度，但它就是有效的。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654522860291-7e2aabde59c6f2a614466c859c1df9ba13587f20a621833665adaef5a4d0a05f.png" alt="picture 7" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="封号的风险">封号的风险<a class="hash-link" href="#封号的风险" title="标题的直接链接">​</a></h3><p>那点这么快，会不会有封号风险？</p><p>哈哈哈，其实不会，以我多年的经验，可以肯定的说，首先我们基于的是苹果自带的自动化控制框架，因此每个点击动作都是有苹果系统官方背书的，一个处于应用层的游戏，只有老老实实接受系统输入的份。</p><p>并且，我们的换装，基本上只占游戏全程极其小的一部分，有时候甚至一局都没有一次换装，因此即使TX的反作弊数据分析部分再牛掰，怕也是无法找到你自动化的蛛丝马迹。尤其是如果我再在程序里加入随机抖动算法的话，尽管显然没那个必要。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="需要usb接入">需要USB接入<a class="hash-link" href="#需要usb接入" title="标题的直接链接">​</a></h3><p>我非常希望能像安卓平台上的adb一样，先用有线接上，再断开用无线。</p><p>我看到<code>facebook-wda</code>里面提供了无线连接的方式，但很可惜我没能实现，无论是使用<code>iproxy</code>端口转发的操作还是啥，我都必须有线连着脚本才能正常运行，这让我打游戏时的感觉很怪。</p><p>因为其实我已经接了一个散热背夹，没错，其实比起自动化脚本，散热才是更更更重要的关注点，否则这个夏天，一局还没打完就已经手机发热然后掉帧、烫手，然后你就输了。</p><p>推荐这款，我用下来感觉还不错：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654523305583-742fbd49ea5da78a8dcf2ae54748db5a20070c78cba4069e4178243e39dd675c.png" alt="picture 8" class="img_ev3q">  </p><p>不过由于最近已经不玩游戏了，所以退了所有的游戏外设。</p><p>要说为啥，因为找到了新的乐趣来源，那就是这今年一直要做的另一件事：读尽世间书，阅尽天下片！</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654523407342-6a07577f0784c5843c8675af4047ea7683594b5190c575b9d3d1b3472db6cfde.png" alt="picture 9" class="img_ev3q">  </p><p>毕竟游戏玩的再好，也只是一盘一盘的重复，但人生却是无止尽的向前。我们，未来再见！</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654524260027-4acc458ab3f551e86fc146ef482635fc3abce31562c1dfa4c5022556d12ea70c.jpg" alt="picture 15" class="img_ev3q"><br>
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654524266932-49215831f445e85f707c234a12f7540194a522edaf45dd2a98ce28df80f9b765.jpg" alt="picture 16" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654524282234-9c7803fd45febc00cca65ee75d18d4918fbacf2e70d8189f875a8bca74511aaa.jpg" alt="picture 17" class="img_ev3q"><br>
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654524311716-968fecfb2e55e90262ca2e5af7f086197938f3357d6850ebba043553e38056d1.jpg" alt="picture 18" class="img_ev3q"><br>
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/ios-automation-1654524075184-69bc3ee3d3732781910a1736339886d88886682816ddb5ec72fcbdb6df943a11.jpg" alt="picture 14" class="img_ev3q">  </p><p>【音乐：Saturn】</p>]]></content:encoded>
            <category>开发笔记</category>
            <category>自动化</category>
            <category>iOS</category>
            <category>王者荣耀</category>
        </item>
        <item>
            <title><![CDATA[编程 | 逼哥的音乐元数据修复]]></title>
            <link>https://markshawn2020.github.io/blog/2022/05/23/archive/dev-mp3-meta</link>
            <guid>/2022/05/23/archive/dev-mp3-meta</guid>
            <pubDate>Mon, 23 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[picture 1]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653310547240-0ba20a542cc9ebc6cf5540ad60c8e4ec8ae831b74d05ee16d60e98dba83e91ae.png" alt="picture 1" class="img_ev3q">  </p><p>今日在Apple Music中导入逼哥的音乐库时，出现了信息乱码：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653310695038-ed58410316d27f140f6d1df184971f369407b68053846151b1271578df0946ea.png" alt="picture 2" class="img_ev3q">  </p><p>可以看到，主要是<code>title</code>和<code>author</code>列出现了问题，这不禁引起了我的兴趣。</p><p>我第一反应便是去对应的原素材文件夹，右键 get info，可以看到确实是有两个属性是乱码（左边是原来的，右边是后续修复的）。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653310814595-e051efe2bf22ee099843f2cade8051e1d0ec73864ba0540e7a27ac86faea5c7e.png" alt="picture 3" class="img_ev3q">  </p><p>我原以为可以直接在属性窗上修改，结果不行。</p><p>于是我就想到，可能需要借助一些专业软件。果然，<strong>涉及到apple music列表显示的关键信息，是mp3文件的meta数据</strong>：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653310896397-b120adf7f15be2c82193521a2a0dbcc92abf91708af94d195fa03a8ee44a0752.png" alt="picture 4" class="img_ev3q">  </p><p>按照老经验，去我们的破解专用软件站去下载：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653310917717-96c26a3d5605a5736b8575c3946b946d627eac259ac48017ed8d361fec5ee494.png" alt="picture 5" class="img_ev3q">  </p><p>使用起来很简单，导入我们的文件夹，然后一个个修改mp3原数据的信息即可：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653310979865-312e6d473496ab4b99c3ef50bbbc7e49640ec2ff0f91d66f8ba8da5b3a68c0ef.png" alt="picture 6" class="img_ev3q">  </p><p>但既然了解了背后的原理，一个个手动修改元数据未免太慢了。</p><p>考虑到我导入的音乐，其文件名本身是良好定义的，所以直接写个程序去批量化处理比较好。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653311076592-c5fac94b7c1c9fbac41da0763a2b415c7eeb97a1a8af5bc0577497b97fada43e.png" alt="picture 7" class="img_ev3q">  </p><p>它们用的是<code>eyeD3</code>这个库：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653311105001-491e73b2c2fdcaf3c0a822892515284a07555e8bc4f07f2da2242b0b8edc9283.png" alt="picture 8" class="img_ev3q">  </p><p>使用方法也非常简单，一看就明白：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653311130085-98b0cb7b131b2ea6a9f72142e5ed18ceba98e24d5392f6bef5b782df861ceb2a.png" alt="picture 9" class="img_ev3q">  </p><p>那就轻松了，我们直接写程序即可。</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> eyed3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> re</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">edit_mp3_meta</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> title</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> author</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"fp_: "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    audiofile </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> eyed3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">load</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># ref: https://stackoverflow.com/a/67541983/9422455</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    audiofile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">tag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">artist </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">u'%s'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> author</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    audiofile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">tag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">title </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">u'%s'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> title</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># ref: https://stackoverflow.com/a/32908607/9422455</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    audiofile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">tag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">version</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">eyed3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ID3_DEFAULT_VERSION</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'__main__'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    author </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"李志"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 处理第一个乱码文件夹，它们内部的命名是 “李志 - 歌名（专辑）.mp3"，用正则提取比较方便</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># dir = '/Volumes/Disk2/resources/乐/lizhi-18砖/2015年《i.O》 (2014-2015李志跨年音乐会)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># for fn in os.listdir(dir):</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#     fp_ = os.path.join(dir, fn)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#     song_name_match = re.match(f'{author} - (.*?)\(2014i／O版\).mp3', fn)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#     assert song_name_match, fn</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#     song_name = song_name_match.groups()[0]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#     edit_mp3_meta(fp_, song_name, author)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 处理第二个乱码文件夹，里面有两个CD文件夹，因此使用`walk`迭代，音乐命名是其本身，因此直接提取</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> root</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dirs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fns </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">walk</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/Volumes/Disk2/resources/乐/lizhi-18砖/2013《108个关键词》'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> fn </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> fns</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> fn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">endswith</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"mp3"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                fp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">root</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fn</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                song_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fn</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">:</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                edit_mp3_meta</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> song_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> author</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>处理完后，我们重新导入这些音乐，就发现，apple music中的属性都正常了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_eidt-mp3-meta-1653311311787-92d45f8fae2b0ac6518f4bcaeb3db6e71d3a3ebaebd8a239a1d8657b0f0e2b50.png" alt="picture 10" class="img_ev3q">  </p><p>希望对你有用~</p><p>查询参考：</p><ul><li><a href="https://www.google.com.hk/search?q=mac+get+info+%E4%B9%B1%E7%A0%81&amp;newwindow=1&amp;ei=TXuLYrGBDf_N2roPw_Sf6AM&amp;ved=0ahUKEwjx27uRzfX3AhX_plYBHUP6Bz0Q4dUDCA4&amp;uact=5&amp;oq=mac+get+info+%E4%B9%B1%E7%A0%81&amp;gs_lcp=Cgdnd3Mtd2l6EANKBAhBGAFKBAhGGABQuAVYjQhg2AtoAXAAeACAAZ0BiAGJBJIBAzAuNJgBAKABAcABAQ&amp;sclient=gws-wiz" target="_blank" rel="noopener noreferrer">mac get info 乱码 - Google 搜索</a></li><li><a href="https://www.google.com.hk/search?q=mp3+modify++title+and+author" target="_blank" rel="noopener noreferrer">mp3 modify title and author - Google 搜索</a></li><li><a href="https://www.mp3tag.de/en/download.html" target="_blank" rel="noopener noreferrer">Mp3tag - Download</a></li><li><a href="https://macwk.com/soft/mp3tag" target="_blank" rel="noopener noreferrer">Mp3tag 1.2.2 中文破解版 for Mac 音频元数据编辑工具</a></li><li><a href="https://www.google.com.hk/search?q=python+modify+mp3+tag" target="_blank" rel="noopener noreferrer">python modify mp3 tag - Google 搜索</a></li><li><a href="https://stackoverflow.com/questions/8948/accessing-mp3-metadata-with-python" target="_blank" rel="noopener noreferrer">Accessing MP3 metadata with Python - Stack Overflow</a></li><li><a href="https://eyed3.readthedocs.io/en/latest/" target="_blank" rel="noopener noreferrer">Welcome to eyeD3 — eyeD3 0.9.4 documentation</a></li><li><a href="https://www.google.com.hk/search?q=eyed3+unicode&amp;oq=eyed3+unicode&amp;aqs=chrome..69i57j69i60.3349j0j7&amp;sourceid=chrome&amp;ie=UTF-8" target="_blank" rel="noopener noreferrer">eyed3 unicode - Google 搜索</a></li><li><a href="https://stackoverflow.com/questions/30388411/processing-chinese-character-using-eyed3-in-python" target="_blank" rel="noopener noreferrer">encoding - Processing chinese character using eyed3 in python - Stack Overflow</a></li></ul>]]></content:encoded>
            <category>开发笔记</category>
            <category>音乐</category>
        </item>
        <item>
            <title><![CDATA[评测 | Breo Dream6 按摩仪]]></title>
            <link>https://markshawn2020.github.io/blog/2022/05/22/archive/evaluation-breo-dream6</link>
            <guid>/2022/05/22/archive/evaluation-breo-dream6</guid>
            <pubDate>Sun, 22 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[最近试用了三款按摩/睡眠仪，写一写使用体验。]]></description>
            <content:encoded><![CDATA[<p>最近试用了三款按摩/睡眠仪，写一写使用体验。</p><ol><li><a href="https://detail.tmall.com/item.htm?id=658789572598" target="_blank" rel="noopener noreferrer">Breo Dream6头眼颈一体的按摩仪</a>，4099(到手3702)</li></ol><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653221900302-ea84456ee6b5783dc597bc835f53e479f089c8656efda03b6dcba2178774ddc6.png" alt="picture 77" class="img_ev3q">  </p><ol start="2"><li><a href="https://detail.tmall.com/item.htm?id=588310474304" target="_blank" rel="noopener noreferrer">Breo 腰部按摩枕</a>，439(实际0，买上者送的)</li></ol><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653222021795-aa06f820454d65ce63cb2cb5ac224020f74ae05d27f19e59d8cb48db28ae062a.png" alt="picture 78" class="img_ev3q">  </p><ol start="3"><li><a href="https://item.jd.com/10026471738507.html" target="_blank" rel="noopener noreferrer">HOMER ION睡眠仪</a>，698（外加一个Emod枕边睡眠喷雾，总计到手899）</li></ol><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653222102702-15934409bd3975b8391841c420257ad4ff19dd5a8b43197b7b88fdda61c6083a.png" alt="picture 79" class="img_ev3q">  </p><p>本期主要谈谈Breo Dream6的使用体验。</p><p>首先说一下试用它的理由，因为我个人很容易感到眼部疲劳，尽管有很多其他措施缓解疲劳，但我想到了物理按摩。</p><p>此时，也许一款眼部按摩仪是最适合我的，但考虑到我很多年前买过一款比较粗糙的眼部按摩仪，实际体验一般般，因此有一定阴影。</p><p>同时，考虑到如果能同时按摩头皮，也许会有1+1&gt;2的奇效，基于此我经过一顿搜索后断定，一款按摩头盔比较适合我。</p><p>说到按摩头皮，其实专用的头部按摩仪也不错，它大概长这样（龙爪手）：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653222482389-f3b20222a8daa9a1fb83ec7dd33d17279e5fd9c558fd8c514c74d2fe44b32f5f.png" alt="picture 80" class="img_ev3q">  </p><p>我看了一些B站测评，他们的反馈还不错：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653222672205-3c58e7ecdaeb41ec8b2cf6e59046acbd1465544d2f136bf1b1adc37e6fa0bf84.png" alt="picture 81" class="img_ev3q">  </p><ul><li><p><a href="https://www.bilibili.com/video/BV1Sz4y1Q7qA?spm_id_from=333.880.my_history.page.click" target="_blank" rel="noopener noreferrer">【炎炎谷】好物分享「breo倍轻松」头部按摩器 | 龙爪手の开箱评测！_哔哩哔哩_bilibili</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1rT4y1w7sG?spm_id_from=333.880.my_history.page.click" target="_blank" rel="noopener noreferrer">拆网易严选的头部按摩仪，看看他们产品内部的做工和用料是否良心_哔哩哔哩_bilibili</a></p></li></ul><p>但缺点就是必须手握着，放头上不断地按摩，心想不是很方便。</p><p>不过现在在体验了呆板（不方便调整头皮按摩位置）的纯自动头眼按摩仪后，这种龙爪手反而有了灵活的优点。</p><p>因此，我在写这篇复盘时，悄咪咪地决定，再入个龙爪手试试。</p><p>ok，说了一大串，我们回到breo dream6上来。</p><p>在此之前，我已经认真看了这几个测评视频：</p><ul><li><p><a href="https://www.bilibili.com/video/BV1hE411R7eP?spm_id_from=333.880.my_history.page.click" target="_blank" rel="noopener noreferrer">倍轻松iDreamX头部按摩仪_哔哩哔哩_bilibili</a></p></li><li><p><a href="https://www.bilibili.com/video/BV19T4y1g7yx?spm_id_from=333.880.my_history.page.click" target="_blank" rel="noopener noreferrer">真AI or 假噱头？智能头部按摩仪—“倍轻松iDreamX AI一休精灵”开箱体验_哔哩哔哩_bilibili</a></p></li></ul><p>说实话，看测评感觉还不错，然后我去breo官网看了看，发现有新款的，也就是dream 6.</p><p>Dream 6 最打动我的就是它的外观与结构设计了，白灰色、可折叠，非常适合出差使用，个人觉得。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653222969953-0f0e289b876e812a24c68c043e80e17b6c35349a376552cf41dbb9c1b4a10887.png" alt="picture 82" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653222978309-ce07801bed2a98c534f46f61498e51d36c4cfbb3560d7831e7071be783180207.png" alt="picture 83" class="img_ev3q">  </p><p>可以对比看一下这两款，可以看到，结构设计上真地大有不同。</p><p>但很可惜，最终它还是让我失望了。</p><p>先说说优点吧。</p><p>最大的优点就是我们说的，它的可折叠设计方便出差与收纳、灰白色织物外观高大上手感好，这些都还是很ok的。</p><p>实际体验中，也是有一定的优点的，比如它的放松模式与冥想模式的曲子选的还算不错，然后不同模式使用的按摩“手法”也确实略有不同，比如放松模式下会压紧你的眼窝然后头顶往上拉，这种感觉确实挺棒。最好的感受还是它的眼部的热敷与按压，确实一绝。</p><p>在十五分钟的按摩后，你确实觉得自己的元气恢复了几分。</p><p>但除此之外，问题就很多了。</p><p>首先是具体的按摩效果方面。</p><p>刚刚说了，眼部的按摩效果是可以的。但也仅仅是眼部了。</p><p>头皮部是一堆硅胶刺，慢慢地戳向你的头皮。我体验下来，要没没啥感觉，要么感觉戳的有点疼，但不管哪种，都没让我觉得很舒服的感觉。</p><p>接着后面的颈部按摩，我以为也会有什么按压或者滚压的体验，结果是几乎没有任何感觉。反复就只起到了一个固定的作用。</p><p>所以，颈部部分我也懒得说了，接下来可能会根据这篇视频的评测：- <a href="https://www.bilibili.com/video/BV1Uq4y1571H?spm_id_from=333.880.my_history.page.click" target="_blank" rel="noopener noreferrer">【视频】SKG、西屋、倍轻松按摩仪怎么选答案都在评测里！_哔哩哔哩_bilibili</a> 尝试一下西屋的颈部按摩仪。</p><p>头皮部分我觉得需要再展开一下。</p><p>我可以理解绝大多数的自动按摩设备，都是以一些马达等去控制一些物理的运动，从而模拟人类的按揉摸搓等动作。</p><p>然而我不得不说，头部的这部分，远远没有达到我对一个头皮按摩的期望，尽管有一点点效果，确实那些硅胶刺过来是挺师傅的，但不够，我只觉得痒……（并且痒的时候还不好挠，因为戴着头盔呢）</p><p>ok，效果方面说完了，再说说体验方面。</p><p>首先考虑以什么姿势戴的问题，如果是坐着戴，那对不起，由于头盔的重力原因，会不断下沉，以至于能把你鼻子压扁然后无法呼吸。因为什么呢？因为整个头盔只有水平直径调节而没有垂直直径调节。也就是说它默认所有人的头部的高度是一定的，并且为自己头皮部的按压预留了一些上下的空间。</p><p>如果是躺着的，那又要对不起了，因为颈部部分里面是硬的，所以直接躺的话，后脑勺根本吃不消，我的意思很明显，虽然这玩意有助眠模式，并且是默认模式，但是我根本无法在我想躺着的时候使用它，更别说戴着它入梦了。如果考虑要助眠入梦，我觉得最佳的选择是蒸汽眼罩，而非一款头盔！</p><p>最后我发现了这玩意最好的使用姿势，是半躺在沙发上的时候，让空的后脑勺上部靠在后面的墙上以支撑住整个头盔，从而能让头盔保持固定，并且自己的后脑勺下部不产生额外的压力。</p><p>所以，为了得到较好的体验，竟然需要如此麻烦……</p><p>其次，音乐，很粗糙的就是单曲循环，甚至曲子都没有做淡入淡出处理，导致三五分钟的曲子一遍遍循环的中间很生硬，一下就打破了沉浸感。</p><p>曲子选的说实话，很一般，尤其是放松模式的曲子，那真的是，没耳听。当然这玩意也因人而异，反正我不喜欢就是了。</p><p>曲子倒是可以换，不过要连接app，那我们再来聊一聊app。</p><p>breo的app进入之后，使用蓝牙连接头盔这个没问题，app整体做的还可以，很清爽，这个我是认同的。</p><p>但接下来，让我连接无线网，并且我看提示是自动获取wifi失败，让我手动输入wifi密码（此时我是连着wifi的）。</p><p>输就输吧，输完然后就转圈圈，无法退出，这也可以理解。</p><p>但长达半分钟后，提示我连接失败。我试了N次都是这个结果。</p><p>连不上wifi的后果就是这款产品主打的ai语音完全不起作用，只能用最简单的固定词汇控制，比如：“调高/低音量”。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653224832567-5034a839b0392386405fe59cccf594cdfd35e50e22343c88c905059e29ea96b7.png" alt="picture 84" class="img_ev3q">  </p><p>然后接着我就发现蓝牙连接体验很差，需要在连接头盔之后，再手动切换到蓝牙设置界面再连另一个蓝牙，也就是那个用于音乐传输的蓝牙。</p><p>这一步也可以忍，但接下来就不能忍了。</p><p>一切操作成功之后，打开我的音乐软件，播放，这样手机不出声，声音走头盔，那个音质，我真是……</p><p>我觉得9块9的耳机都可以把这音质按在地上摩擦，这音质简直就是三十年前的电话音质。</p><p>我们花四千块以为能买到一个沉浸式的、无比舒适的……</p><p>对不起，我连词都尽了。</p><p>再说说一名软件工程师能够明显感觉到的代码层的设计问题吧：</p><ol><li><p>每次启动这个头盔，都是直接进入助眠模式，而非记忆上次模式，这是我认为应该要改进的。比如我就更喜欢冥想模式，但是每次都得按两次才能切换到。</p></li><li><p>app的那些最直观的问题刚刚已经说了，再说个不明显的：在使用默认音频输出的模式下，有开机问候、关机问候，使用调高音量语音指令达到最大后会有“已经最大音量”的提示，但是在app里使用蓝牙音频输出后，这些问候、提示全都没了，15分钟到的时候立马一下哑火，体验差，也暴露了程序员在开发时几乎是写了两套方案，没有统一，水平显然不行。</p></li></ol><p>最后，还是肖战代言的……</p><p>我虽然不追星，也不看星，本人对肖战无感但也没有敌意，但基于这么多糟糕体验，每次启动头盔时来的一句肖战的问候，就觉得，如此annoying。</p><p>可能这款产品的唯一目标用户就是头大（否则无法固定）的颜值肖战XX粉了吧。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653226273162-d7b84aa1441c9fa287890f013da23082e9272bf55a8a69c660c38ce4ce6775e8.png" alt="picture 87" class="img_ev3q">  </p><p>真是白瞎了红点设计奖了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653225429198-bb441c5db92a7a7fb06f1b6a8d649e1ffce9908dfd2c8c80352ee5d70e88d4ab.png" alt="picture 85" class="img_ev3q"> </p><p>如果一定要认真夸一句，我觉得商家态度还是很不错的，了解到我被疫情封控无法寄货后，直接将七天无理由退换货改成21天了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_massage-1653225660459-25f8178ebd0dea5432ddf3c3f0680889c5065a6a0c78f9280c5766ad420039bd.png" alt="picture 86" class="img_ev3q">  </p><p>也许，他们只是需要点时间再去仔细打磨自己的产品，但愿吧，但不是我关心的事了。</p><p>PS：那个腰部按摩仪的使用体验相对靠谱很多，但缺点和dream6相反，它很笨重，考虑到是赠品，我也没有留下来的意愿了。</p><p>祝好。散。</p><p>下期给大家讲讲这个Homer ION手部按摩仪是怎么回事，这个倒是很有意思。</p>]]></content:encoded>
            <category>评测</category>
            <category>养身</category>
        </item>
        <item>
            <title><![CDATA[札记 | 须知，活好是很不容易的]]></title>
            <link>https://markshawn2020.github.io/blog/2022/05/15/archive/prose-is-not-easy</link>
            <guid>/2022/05/15/archive/prose-is-not-easy</guid>
            <pubDate>Sun, 15 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[须知，活好是很不容易的。]]></description>
            <content:encoded><![CDATA[<p>须知，活好是很不容易的。</p><p>在学校时，尚不能领略这一点，因都是和大家住，时间也都被和大家一起的学业、和大家一起的事业，所全部被占领。</p><p>细想，很少有所谓的属于自己的时间。虽不至于全无，但总会很快又逃走，比如朋友喊道：走，吃饭！</p><p>聊且自慰。大多数情况下，我就是那个朋友。我这么说一定是没错的，毕竟我确是自己朋友的朋友。</p><p>我有幸在这样的集体主义下，懵懵懂懂度过了自开始记事来的所有时光，恍惚间已二十年矣。</p><p>不过难以否认的是，我还是很感谢这样的集体主义。因为以我的尿性，我深知如若没有这种来自“大家长”力量的庇护（同时也是约束），我并不能确信自己会通往何方，我至少没有底气说我会过的一定比现在好（尽管，现在也谈不上）。</p><p>于是，直到毕业，直到疫情开始肆虐，直到我长租于北京，我才开始真正面对一个人的生活，我也才真正明白，生活是不容易的，活好更是难上加难。而且，这并非完全出于经济的原因。</p><p>我其实已经很不差钱了，相较于那些——当代流媒体的流量密码——催泪的工人、志愿者和流浪者们。</p><p>都是为了生活而负重前行，谁高谁下并不那么明了，也无几分意义。</p><p>生活不会因为你贫穷，而多锤你几下；也不会因为你高贵，就少锤几分。所有的一切在命运中都标定了价格。</p><p>生活真正的难题，不在宏大叙事上面，不在你今天买不起某张席梦思，明天追不到某个梦中情人。</p><p>生活真正的难题，是如何处理生活这件事本身：你当下在做什么，想做什么，怎么做的问题。</p><p>是贯穿从清晨有意识开始，要不要起床、怎么起床；到午饭吃点什么；再到晚上复盘今天做了什么；到夜里该不该睡觉、如何睡觉的问题。</p><p>这十二十个小时里，我们有心心念的主线任务——比如工作与学习——即那些在有形的或者无形的计划表上的事。但我们实际上会在很多其他事情上耗费相当的时间，例如发呆、游戏、聊天、了解今时今日的新闻——那些糅杂着事实与谣言的、无论真假你却难以改变的事情。</p><p>譬如今早微信群里通知我们小区历经两周终于解封了，然而中午还未到，又有人却说并不行，现在保安和物业一团乱。</p><p>生活便主要是由这些鸡零狗碎的事情构成的。</p><p>大多数人也缺乏应付这些鸡零狗碎的一些必要手段，便是那些称之为“原则”的东西。</p><p>工作需要原则，需要纪律，生活也需要吗？</p><p>我想，应该是的。</p><p>自然，生活也可以是没有原则的，凡法无禁止皆可为，放浪形骸、以酒度日、引吭高歌，似乎也并非不妥。</p><p>一个人如果连往下都不怕，他还怕什么呢？</p><p>但大多数人并没有往下跃的勇气与机缘，他只能往上，但心有余而力不足，最终不上不下。</p><p>大多数人最终都会是不上不下的，即所谓的社会的稳态。这是政客们最喜欢的东西。</p><p>现在大家都喜欢谈逆熵，我也喜欢。</p><p>逆熵的核心是控制的艺术，人一旦有了控制感，人就会对未来更充满希望，觉得自己更可以主宰自己的命运，说俗点就是能得到自己想要的东西：一个人，或一个物品，有形的或者无形的。</p><p>我想，人都想往上走，这本无可厚非。王小波也在年轻时觉得自己可以永远地生猛下去。</p><p>而留给我们的，或者说留给我的，一名青年男子，似乎时间还有很多。</p><p>也似乎，确实很多：假如我心无旁骛，就干它个十年八年，把一件事做好，做成的话。</p><p>人们往往高估自己一年可以做成的事，低估自己十年可以做成的事。</p><p>问题是，这十年，未必好熬，这十年，未必总能有一种控制感。</p><p>这大概就是人和组织最大的不同。</p><p>人可以放纵，但组织不可以，</p><p>人可以没有计划，而组织必须要有。</p><p>三年的、五年的，甚至百年的、千年的。</p><p>越超过自己目所能及的地方，越引起人的心潮澎湃。</p><p>从博弈论角度，这是多么明智的选择：比起毫无计划、毫无准备，有总归是更好的。</p><p>一个有效的机器学习模型，可以允许喂一个随机的种子，它的过程必定动荡、无序，但总有一天它会收敛。</p><p>我们，也一定会得到一个最终的答案。</p><p>所以，多多少少还是学一些管控生活的艺术，例如收纳。</p><p>给自己的房间挂一张爱因斯坦的画像，再摆一盆绿植，调整床的朝向与位置，把所有的家具摆在最适合它的位置，如果不够宽敞再充分利用上墙贴，打造空间层次感。</p><p>疫情封控的大背景下，学会自己做饭成为显著提升自己幸福感的源泉：只要买一口好锅，多看几个炒菜视频，会用叮咚买菜即可。</p><p>作为一个程序员，将生活控制在和自己的代码一样整洁的一个复杂度下，应该是一门必修课。</p><p>毕竟，如果有些东西没法改变，比起悲观地度过每一天，乐观也许更好。</p><p>这似乎也是博弈论教给我们的应有之义。</p><p>但坦白说，我其实不怎么信这玩意，但比起啥都不信，信一些东西似乎更免烦恼。</p><p>而这似乎，又是博弈论教给我们的应有之义。</p><p>生活的问题，便是如上，无穷无尽。</p><p>我的答案也逐渐明了：把自己收拾好，尽一切努力。然后，静待花开。</p><p>这未必是一份满分答卷。</p><p>但人生之路，哪有满分一说呢。</p><p>且行，且歌，且思，且录吧。</p><p>南川记于二零二二年五月十五日，某薛定谔的解封之日。</p>]]></content:encoded>
            <category>札记</category>
        </item>
        <item>
            <title><![CDATA[编程 | 视频剪辑自动转写字幕]]></title>
            <link>https://markshawn2020.github.io/blog/2022/05/14/archive/dev-voice2srt</link>
            <guid>/2022/05/14/archive/dev-voice2srt</guid>
            <pubDate>Sat, 14 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[1. 语音转写市场概览]]></description>
            <content:encoded><![CDATA[<ol><li>语音转写市场概览</li><li>网易见外的缺点<ol><li>FCPX不支持网易见外导出的srt字幕文件</li><li>网易见外的转写结果需要手动进行长度切割</li><li>网易见外只支持后期文本替换，而不支持前期预设词库</li><li>网易见外不支持基于鼠标点击的文本位置智能跳转语音并播放</li></ol></li><li>讯飞转写<ol><li>讯飞服务价格</li><li>讯飞语音转写控制台</li><li>讯飞语音转写的使用</li><li>讯飞语音转写使用分词</li><li>讯飞语音转写程序</li></ol></li><li>基于Automator实现右键语音文件后台自动转写</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="语音转写市场概览">语音转写市场概览<a class="hash-link" href="#语音转写市场概览" title="标题的直接链接">​</a></h2><p>目前国内中文语音转文字，做的最好的应该是科大讯飞（可惜要付费）：</p><ul><li><a href="https://console.xfyun.cn/services/lfasr" target="_blank" rel="noopener noreferrer">控制台-讯飞开放平台</a></li></ul><p>所以其实很多UP主用的是网易见外之类的免费转写产品。</p><p>其他转写平台还有，比如：</p><ul><li><a href="https://github.com/PaddlePaddle/PaddleSpeech" target="_blank" rel="noopener noreferrer">百度的飞桨</a></li><li><a href="https://github.com/opensourceteams/google-sdk-speech-to-text" target="_blank" rel="noopener noreferrer">谷歌识别</a></li><li>……</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="网易见外的缺点">网易见外的缺点<a class="hash-link" href="#网易见外的缺点" title="标题的直接链接">​</a></h2><p>我实际体验下来，网易见外还是不太能满足我的需求的，主要如下：</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fcpx不支持网易见外导出的srt字幕文件">FCPX不支持网易见外导出的srt字幕文件<a class="hash-link" href="#fcpx不支持网易见外导出的srt字幕文件" title="标题的直接链接">​</a></h3><p>这个我之前就了解了一下，发现大家都是用一些第三方软件再将网易见外的srt转换成另一种srt，不禁引起了我的好奇，到底为啥网易见外的srt不支持fcpx导入。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652437655118-c3c5e4b27ab7ff01d6860b73a89f616fff6cd87264153c70010e5802280ee68b.png" alt="picture 9" class="img_ev3q">  </p><p>我对比了讯飞转写和网易见外的srt文件，发现两者的唯一区别就在于编序下标不同：网易见外从0开始标记，而讯飞转写从1开始：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652437563419-c6548e1349f50fa454cc6d34842da5852007a8d589514d968974963ce1751cf1.png" alt="picture 8" class="img_ev3q">  </p><p>由此大胆猜测：FCPX对srt文件的硬性要求就是从1开始编码！</p><p>于是我将网易见外的第0号编码对应的字幕内容去掉，重新导入FCPX，结果成功了，此即证实了我的猜想。</p><p>了解了原因之后，这个问题就变得不那么恐怖了，随便用什么脚本语言把网易见外的srt文件里的序号全部加1，或者干脆把第一条去掉即可。不是什么难事。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="网易见外的转写结果需要手动进行长度切割">网易见外的转写结果需要手动进行长度切割<a class="hash-link" href="#网易见外的转写结果需要手动进行长度切割" title="标题的直接链接">​</a></h3><p>网易见外的默认转写字幕长度是偏长的。这其实可以理解，因为长一点有助于基于上下文分析提高转写的准确度。</p><p>但问题就在于，想把分好的每句字幕再切小一点，则需要手动的在网页上点击分隔按钮一个个地调整，这个工作量就变得无法接受了。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652437965030-0e0c5d1f23c071c4b8621142912eeb55bdbf32bec4663afaa6854b30f47fbf4c.png" alt="picture 10" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="网易见外只支持后期文本替换而不支持前期预设词库">网易见外只支持后期文本替换，而不支持前期预设词库<a class="hash-link" href="#网易见外只支持后期文本替换而不支持前期预设词库" title="标题的直接链接">​</a></h3><p>对于学过机器学习的程序员或者用过<code>jieba</code>分词之类开源代码库的人都知道，预设词库在文本分析相关领域是非常重要的，显著影响算法识别的准确度和使用体验。</p><p>然而网易见外是不支持转写之前预设词库，只可以转完之后在页面点击文本替换，由此可见网易转写的机器学习模型（如果有的话）比较低级，它只有通用的一个，不支持用户自己输入词库进行模型微调。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="网易见外不支持基于鼠标点击的文本位置智能跳转语音并播放">网易见外不支持基于鼠标点击的文本位置智能跳转语音并播放<a class="hash-link" href="#网易见外不支持基于鼠标点击的文本位置智能跳转语音并播放" title="标题的直接链接">​</a></h3><p>这个是讯飞转写的一个很友好的功能，并且在技术是线上我认为也不是很难的一件事，但很可惜，网易见外也未能把这个用户体验做起来。</p><p>基于以上原因，我认为网易见外是远未达到我对一个智能转写软件平台的目标要求的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="讯飞转写">讯飞转写<a class="hash-link" href="#讯飞转写" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="讯飞服务价格">讯飞服务价格<a class="hash-link" href="#讯飞服务价格" title="标题的直接链接">​</a></h3><p>如果没有开通过讯飞的服务，可以申请免费使用。不过有一定要求，比如企业用户需要提交工商执照相关信息，而个人用户，看声明貌似要19年的新用户……反正我是不符合了（我以前应该用过）。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652431323538-20c35f16a1a4cedc75b65c5c69614ddc05521d1e6608e1bc485f523af6b8d8e9.png" alt="picture 6" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="讯飞语音转写控制台">讯飞语音转写控制台<a class="hash-link" href="#讯飞语音转写控制台" title="标题的直接链接">​</a></h3><p>在控制台，可以查看自己所购买的讯飞服务详情，最主要的就是确认自己购买的是“讯飞转写”的服务，然后至少要支持中英文转写，最后在个性化热词里可以加入自己的特殊词库（用于提高准确率，非常有用）。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652431465004-4f6c800430b3f09d8917e0e0009af5ba5668169312f800f2e236fcda51ac55a0.png" alt="picture 7" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="讯飞语音转写的使用">讯飞语音转写的使用<a class="hash-link" href="#讯飞语音转写的使用" title="标题的直接链接">​</a></h3><p>可以使用讯飞语音转写的api，在该页可以下载各大语音（例如python）的demo：<a href="https://www.xfyun.cn/doc/asr/lfasr/API.html" target="_blank" rel="noopener noreferrer">语音转写 API 文档 | 讯飞开放平台文档中心</a></p><p>建议直接对着demo改，否则从0到1写会很麻烦，因为要很多加密相关参数。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652431132707-614749d87f3bee0e5b8675061e1330fb9b700080406a936bc8c7f30a4cb929ce.png" alt="picture 5" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="讯飞语音转写使用分词">讯飞语音转写使用分词<a class="hash-link" href="#讯飞语音转写使用分词" title="标题的直接链接">​</a></h3><p>在 <code>/prepare</code> 接口的参数中如果加上 <code>has_participle = true</code>，则会返回带每个词语识别的结果。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652461333188-95a3f302b742e110b3cbdf3f0227cbc525d8869298487f4929c0fa8ad037a333.png" alt="picture 11" class="img_ev3q">  </p><p>不过深入去使用词级别的解析结果也是一件不太容易的事情，因为需要我们自己去处理断句的问题。比如说要通过<code>'wordsName': '，'</code>去判别是个断句。</p><p>基于这个角度来看，网易见外不支持按长度的智能分句，似乎也变得不是那么不能接受了。</p><p>但尽管如此，讯飞的结果依旧要比网易见外好很多。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="讯飞语音转写程序">讯飞语音转写程序<a class="hash-link" href="#讯飞语音转写程序" title="标题的直接链接">​</a></h3><p>已同步在个人仓库：<a href="https://github.com/MarkShawn2020/mark_keeps_learning/blob/master/mark_scripts/voice2srt/main.py" target="_blank" rel="noopener noreferrer">https://github.com/MarkShawn2020/mark_keeps_learning/blob/master/mark_scripts/voice2srt/main.py</a></p><p>具体脚本内容如下：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># -*- coding: utf-8 -*-</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   author: yanmeng2, xunfei api relative</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   author: markshawn2020, xunfei result to srt-format file, 2022-05-13</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   config: https://console.xfyun.cn/services/lfasr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   doc: https://www.xfyun.cn/doc/asr/lfasr/API.html</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> base64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> hashlib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> hmac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lfasr_host </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'http://raasr.xfyun.cn/api'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 请求的接口名</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">api_prepare </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/prepare'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">api_upload </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/upload'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">api_merge </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/merge'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">api_get_progress </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/getProgress'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">api_get_result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/getResult'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 文件分片大小10M</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">file_piece_sice </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10485760</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># ——————————————————转写可配置参数————————————————</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 参数可在官网界面（https://doc.xfyun.cn/rest_api/%E8%AF%AD%E9%9F%B3%E8%BD%AC%E5%86%99.html）查看，根据需求可自行在gene_params方法里添加修改</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 转写类型</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lfasr_type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 是否开启分词</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">has_participle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'false'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">has_seperate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'true'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 多候选词个数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">max_alternatives </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 子用户标识</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">suid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">N </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 每隔N秒获取一次进度</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">SliceIdGenerator</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""slice id生成器"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__ch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'aaaaaaaaa`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getNextSliceId</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__ch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        j </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ch</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> j </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ch</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">j</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> cj </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'z'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ch</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">j</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">chr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">ord</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cj</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> ch</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">j </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ch</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">j</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'a'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> ch</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">j </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                j </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> j </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__ch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__ch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># -------------------- 从讯飞结果到srt的转换函数 -----------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">time2stamp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    将整数时间（毫秒）转化为srt的时间戳，即 HH:MM:SS,mmm</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :param s:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mmm </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s </span><span class="token operator" style="color:#393A34">//=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    SS </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s </span><span class="token operator" style="color:#393A34">//=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MM </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s </span><span class="token operator" style="color:#393A34">//=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    HH </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f"</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">HH</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">02</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">:</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">MM</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">02</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">:</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">SS</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">02</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">,</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">mmm</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">03</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">pickle_srt_item</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mm_start</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mm_end</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> content</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    构建srt字幕文件的基本单元</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :param index: 字幕序号，从1开始，手动创建</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :param mm_start: 该字幕单元起始毫秒数</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :param mm_end: 该字幕单元结束毫秒数</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :param content: 该字幕单元的文本内容</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f"</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">index</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">\n</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">time2stamp</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation">mm_start</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> --&gt; </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">time2stamp</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation">mm_end</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">\n</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">content</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">\n"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">xunfei_json2srt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">items</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    将讯飞转写的输出转成srt字幕文本内容</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :param items:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    :return:</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"\n"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">pickle_srt_item</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"bg"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"ed"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> item</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"onebest"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                      </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> item</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">enumerate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">items</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">RequestApi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">object</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">__init__</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> appid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> secret_key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> upload_file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_appid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> appid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_secret_key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> secret_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_upload_file_path </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> upload_file_path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">srt_fp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">splitext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_upload_file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">".srt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"--- initialized ---"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 根据不同的apiname生成不同的参数,本示例中未使用全部参数您可在官网(https://doc.xfyun.cn/rest_api/%E8%AF%AD%E9%9F%B3%E8%BD%AC%E5%86%99.html)查看后选择适合业务场景的进行更换</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">gene_params</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> apiname</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> taskid</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">None</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> slice_id</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">None</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        appid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_appid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        secret_key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_secret_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        upload_file_path </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_upload_file_path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ts </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> hashlib</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">md5</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        m2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">update</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">appid </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> ts</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        md5 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> m2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hexdigest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        md5 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">bytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">md5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 以secret_key为key, 上面的md5为msg， 使用hashlib.sha1加密结果为signa</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        signa </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> hmac</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">new</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">secret_key</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> md5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hashlib</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sha1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">digest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        signa </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b64encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signa</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        signa </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signa</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        file_len </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getsize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">upload_file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        file_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">basename</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">upload_file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        param_dict </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> apiname </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> api_prepare</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic"># slice_num是指分片数量，如果您使用的音频都是较短音频也可以不分片，直接将slice_num指定为1即可</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            slice_num </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_len </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> file_piece_sice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_len </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> file_piece_sice </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'app_id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> appid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'signa'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> signa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'ts'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'file_len'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_len</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'file_name'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> file_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'slice_num'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">slice_num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> apiname </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> api_upload</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'app_id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> appid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'signa'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> signa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'ts'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'task_id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> taskid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'slice_id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> slice_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> apiname </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> api_merge</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'app_id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> appid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'signa'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> signa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'ts'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'task_id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> taskid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'file_name'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> file_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> apiname </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> api_get_progress </span><span class="token keyword" style="color:#00009f">or</span><span class="token plain"> apiname </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> api_get_result</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'app_id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> appid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'signa'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> signa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'ts'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            param_dict</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'task_id'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> taskid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> param_dict</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 请求和结果解析，结果中各个字段的含义可参考：https://doc.xfyun.cn/rest_api/%E8%AF%AD%E9%9F%B3%E8%BD%AC%E5%86%99.html</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">gene_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> apiname</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> files</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">None</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> headers</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">None</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lfasr_host </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> apiname</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> files</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">files</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> headers</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">headers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">text</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"ok"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"{} success:"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiname</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"{} error:"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiname</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            exit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 预处理</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">prepare_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiname</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">api_prepare</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 data</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_params</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_prepare</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 上传</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">upload_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> taskid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> upload_file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        file_object </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">upload_file_path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'rb'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">try</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            index </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sig </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> SliceIdGenerator</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                content </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> file_object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_piece_sice</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> content </span><span class="token keyword" style="color:#00009f">or</span><span class="token plain"> </span><span class="token builtin">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">content</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                files </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"filename"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_params</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_upload</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"slice_id"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_upload</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                             data</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_params</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_upload</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> taskid</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">taskid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                                   slice_id</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">sig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getNextSliceId</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                             files</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">files</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'ok'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token comment" style="color:#999988;font-style:italic"># 上传分片失败</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'upload slice fail, response: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'upload slice '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' success'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                index </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">finally</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'file index:'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">tell</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            file_object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 合并</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">merge_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> taskid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_merge</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_params</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_merge</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> taskid</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">taskid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 获取进度</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_progress_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> taskid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_get_progress</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_params</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_get_progress</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> taskid</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">taskid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 获取结果</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_result_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> taskid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_get_result</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">gene_params</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api_get_result</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> taskid</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">taskid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">all_api_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 1. 预处理</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pre_result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prepare_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        taskid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pre_result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 2 . 分片上传</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">upload_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">taskid</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">taskid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> upload_file_path</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_upload_file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 3 . 文件合并</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">merge_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">taskid</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">taskid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 4 . 获取任务进度</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic"># 每隔N秒获取一次任务进度</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            progress </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_progress_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">taskid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            progress_dic </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> progress</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> progress_dic</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'err_no'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">and</span><span class="token plain"> progress_dic</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'err_no'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">26605</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'task error: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> progress_dic</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'failed'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> progress_dic</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'data'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                task_status </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> task_status</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'status'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'task '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> taskid </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' finished'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword" style="color:#00009f">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'The task '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> taskid </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' is in processing, task status: '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">N</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 每次获取进度间隔N S</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 5 . 获取结果</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        srt_json </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_result_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">taskid</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">taskid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"data"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        srt_str </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> xunfei_json2srt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">srt_json</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">srt_fp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"w"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            f</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">srt_str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"has written converted result into path: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">srt_fp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'__main__'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> RequestApi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        appid</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">environ</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"XUNFEI_APP_ID"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        secret_key</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">environ</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"XUNFEI_APP_SK"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        upload_file_path</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">sys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">all_api_request</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基于automator实现右键语音文件后台自动转写">基于Automator实现右键语音文件后台自动转写<a class="hash-link" href="#基于automator实现右键语音文件后台自动转写" title="标题的直接链接">​</a></h2><p>目前我们写的脚本，输入是一个文件路径，特别的，是指我们待转的音频文件，根据讯飞接口要求，对输入的文件有以下限制：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652533014083-ec6a9f68a140717a16bb63397a987c5ce2e8abc80fe3f8a0959e1ca0ad3c0dbc.png" alt="picture 8" class="img_ev3q">  </p><p>从音频格式来看，除了<code>aac</code>格式不支持，其他常用的例如<code>mp3, wav, m4a</code>都支持了，所以还是挺广泛的。</p><p>但是每次手动调用程序去转写一个音频文件，未免还是感觉有点麻烦，尤其是对于程序员来说。</p><p>比如现在我们转写一个音频文件，需要在命令行执行如下命令：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">python3 </span><span class="token operator" style="color:#393A34">~</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">mark_keeps_learning</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">mark_scripts</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">voice2srt</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">main</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">py 目标音频文件路径</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>虽然我们也可以使用<code>alias</code>手段，把这一串命令缩短成一个词，以方便我们直接使用<code>voice2srt 目标音频文件路径</code> 的命令完成目标，但还是要基于命令行，多有不便。</p><p>主要是，我们也不需要修改其他参数（基本按照默认即可，热词已经在讯飞官网配好了）。</p><p>那么这种纯粹基于文件的操作，在mac平台上最好的办法是写一个<code>automator</code>脚本：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652532742053-608328c5fa3dc43bb127e4acf67d24ca3a9b96c3dc785f182745c4301b002348.png" alt="picture 7" class="img_ev3q">  </p><p>这样我们就可以直接在finder里面右键我们的音频文件，然后在快捷菜单中找到我们的automator脚本选项，鼠标一点就自动转成了，非常方便！</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652533417457-750a70456486d620a0f3e313e6e431fbe6530aa99aa51b04b6899cb39f4defa9.png" alt="picture 9" class="img_ev3q">  </p><p>十秒钟之后，就自动在当前文件夹内生成一个讯飞转写后的字幕文件了，非常方便：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652533472130-84eedb0ba0b9f481f2ae1d09fffb8d14c58ff3543e83d8225237eed6627be5f3.png" alt="picture 10" class="img_ev3q">  </p><p>并且我将标准输出重定位到了根目录的log文件，这样就可以在程序出错时复查：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/auto-voice2srt-1652533562489-e40a4b0b90122321cf4ca18cc2a9ffdf12deaa944aa86ca2cc3fcc421d5809e7.png" alt="picture 11" class="img_ev3q">  </p><p>Automator是一个很有用的工具，我也对它越来越感兴趣了，比如说还写了一个网易云音乐ncm转mp3的快捷操作，这样右键一个ncm文件，就能转成mp3了，非常方便。</p><p>但愿本文对你有帮助~</p>]]></content:encoded>
            <category>开发笔记</category>
            <category>字幕</category>
        </item>
        <item>
            <title><![CDATA[研究 | 基于MBTI的人生复盘与计划（上）]]></title>
            <link>https://markshawn2020.github.io/blog/2022/04/22/archive/research-mbti/mark_mbti</link>
            <guid>/2022/04/22/archive/research-mbti/mark_mbti</guid>
            <pubDate>Fri, 22 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[很久以前就知道这个测试，但一直都没重视。]]></description>
            <content:encoded><![CDATA[<p>很久以前就知道这个测试，但一直都没重视。</p><p>最近因缘际会之下，认真研究了一番，确有所获，故记之。</p><p>本文将分上、中、下，共记录自己对MBTI官网60道题的思考与复盘，以期明确自己的性格与未来规划。</p><ol><li><a href="#%E4%BB%80%E4%B9%88%E6%98%AFmbti">什么是MBTI</a><ol><li><a href="#%E8%83%BD%E9%87%8Fei">能量（E/I）</a></li><li><a href="#%E6%84%9F%E7%9F%A5sn">感知（S/N）</a></li><li><a href="#%E5%86%B3%E7%AD%96tf">决策（T/F）</a></li><li><a href="#%E8%A1%8C%E5%8A%A8jp">行动（J/P）</a></li></ol></li><li><a href="#%E6%88%91%E7%9A%84mbti%E5%88%86%E6%9E%90">我的MBTI分析</a><ol><li><a href="#1-you-regularly-make-new-friends">1. You regularly make new friends</a></li><li><a href="#2-you-spend-a-lot-of-your-free-time-exploring-various-random-topics-that-pique-your-interest">2. You spend a lot of your free time exploring various random topics that pique your interest</a></li><li><a href="#3-seeing-other-people-cry-can-easily-make-you-feel-like-you-want-to-cry-too">3. Seeing other people cry can easily make you feel like you want to cry too</a></li><li><a href="#4-you-often-make-a-backup-plan-for-a-backup-plan">4. You often make a backup plan for a backup plan</a></li><li><a href="#5-you-usually-stay-calm-even-under-a-lot-of-pressure">5. You usually stay calm, even under a lot of pressure</a></li><li><a href="#6-at-social-events-you-rarely-try-to-introduce-yourself-to-new-people-and-mostly-talk-to-the-ones-you-already-know">6. At social events, you rarely try to introduce yourself to new people and mostly talk to the ones you already know</a></li><li><a href="#7-you-prefer-to-completely-finish-one-project-before-starting-another">7. You prefer to completely finish one project before starting another</a></li><li><a href="#8-you-are-very-sentimental">8. You are very sentimental</a></li><li><a href="#9-you-like-to-use-organizing-tools-like-schedules-and-lists">9. You like to use organizing tools like schedules and lists</a></li><li><a href="#10-even-a-small-mistake-can-cause-you-to-doubt-your-overall-abilities-and-knowledge">10. Even a small mistake can cause you to doubt your overall abilities and knowledge</a></li><li><a href="#11-you-feel-comfortable-just-walking-up-to-someone-you-find-interesting-and-striking-up-a-conversation">11. You feel comfortable just walking up to someone you find interesting and striking up a conversation</a></li><li><a href="#12-you-are-not-too-interested-in-discussing-various-interpretations-and-analyses-of-creative-works">12. You are not too interested in discussing various interpretations and analyses of creative works</a></li><li><a href="#13-you-are-more-inclined-to-follow-your-head-than-your-heart">13. You are more inclined to follow your head than your heart</a></li><li><a href="#14-you-usually-prefer-just-doing-what-you-feel-like-at-any-given-moment-instead-of-planning-a-particular-daily-routine">14. You usually prefer just doing what you feel like at any given moment instead of planning a particular daily routine</a></li><li><a href="#15-you-rarely-worry-about-whether-you-make-a-good-impression-on-people-you-meet">15. You rarely worry about whether you make a good impression on people you meet</a></li><li><a href="#16-you-enjoy-participating-in-group-activities">16. You enjoy participating in group activities</a></li><li><a href="#17-you-like-books-and-movies-that-make-you-come-up-with-your-own-interpretation-of-the-ending">17. You like books and movies that make you come up with your own interpretation of the ending</a></li><li><a href="#18-your-happiness-comes-more-from-helping-others-accomplish-things-than-your-own-accomplishments">18. Your happiness comes more from helping others accomplish things than your own accomplishments</a></li><li><a href="#19-you-are-interested-in-so-many-things-that-you-find-it-difficult-to-choose-what-to-try-next">19. You are interested in so many things that you find it difficult to choose what to try next</a></li><li><a href="#20-you-are-prone-to-worrying-that-things-will-take-a-turn-for-the-worse">20. You are prone to worrying that things will take a turn for the worse</a></li><li><a href="#21-you-avoid-leadership-roles-in-group-settings">21. You avoid leadership roles in group settings</a></li><li><a href="#22-you-are-definitely-not-an-artistic-type-of-person">22. You are definitely not an artistic type of person</a></li><li><a href="#23-you-think-the-world-would-be-a-better-place-if-people-relied-more-on-rationality-and-less-on-their-feelings">23. You think the world would be a better place if people relied more on rationality and less on their feelings</a></li><li><a href="#24-you-prefer-to-do-your-chores-before-allowing-yourself-to-relax">24. You prefer to do your chores before allowing yourself to relax</a></li><li><a href="#25-you-enjoy-watching-people-argue">25. You enjoy watching people argue</a></li><li><a href="#26-you-tend-to-avoid-drawing-attention-to-yourself">26. You tend to avoid drawing attention to yourself</a></li><li><a href="#27-your-mood-can-change-very-quickly">27. Your mood can change very quickly</a></li><li><a href="#28-you-lose-patience-with-people-who-are-not-as-efficient-as-you">28. You lose patience with people who are not as efficient as you</a></li><li><a href="#29-you-often-end-up-doing-things-at-the-last-possible-moment">29. You often end up doing things at the last possible moment</a></li><li><a href="#30-you-have-always-been-fascinated-by-the-question-of-what-if-anything-happens-after-death">30. You have always been fascinated by the question of what, if anything, happens after death</a></li><li><a href="#31-you-usually-prefer-to-be-around-others-rather-than-on-your-own">31. You usually prefer to be around others rather than on your own</a></li><li><a href="#32-you-become-bored-or-lose-interest-when-the-discussion-gets-highly-theoretical">32. You become bored or lose interest when the discussion gets highly theoretical</a></li><li><a href="#33-you-find-it-easy-to-empathize-with-a-person-whose-experiences-are-very-different-from-yours">33. You find it easy to empathize with a person whose experiences are very different from yours</a></li><li><a href="#34-you-usually-postpone-finalizing-decisions-for-as-long-as-possible">34. You usually postpone finalizing decisions for as long as possible</a></li><li><a href="#35-you-rarely-second-guess-the-choices-that-you-have-made">35. You rarely second-guess the choices that you have made</a></li><li><a href="#36-after-a-long-and-exhausting-week-a-lively-social-event-is-just-what-you-need">36. After a long and exhausting week, a lively social event is just what you need</a></li><li><a href="#37-you-enjoy-going-to-art-museums">37. You enjoy going to art museums</a></li><li><a href="#38-you-often-have-a-hard-time-understanding-other-peoples-feelings">38. You often have a hard time understanding other people’s feelings</a></li><li><a href="#39-you-like-to-have-a-to-do-list-for-each-day">39. You like to have a to-do list for each day</a></li><li><a href="#40-you-rarely-feel-insecure">40. You rarely feel insecure</a></li><li><a href="#41-you-avoid-making-phone-calls">41. You avoid making phone calls</a></li><li><a href="#42-you-often-spend-a-lot-of-time-trying-to-understand-views-that-are-very-different-from-your-own">42. You often spend a lot of time trying to understand views that are very different from your own</a></li><li><a href="#43-in-your-social-circle-you-are-often-the-one-who-contacts-your-friends-and-initiates-activities">43. In your social circle, you are often the one who contacts your friends and initiates activities</a></li><li><a href="#44-if-your-plans-are-interrupted-your-top-priority-is-to-get-back-on-track-as-soon-as-possible">44. If your plans are interrupted, your top priority is to get back on track as soon as possible</a></li><li><a href="#45-you-are-still-bothered-by-mistakes-that-you-made-a-long-time-ago">45. You are still bothered by mistakes that you made a long time ago</a></li><li><a href="#46-you-rarely-contemplate-the-reasons-for-human-existence-or-the-meaning-of-life">46. You rarely contemplate the reasons for human existence or the meaning of life</a></li><li><a href="#47-your-emotions-control-you-more-than-you-control-them">47. Your emotions control you more than you control them</a></li><li><a href="#48-you-take-great-care-not-to-make-people-look-bad-even-when-it-is-completely-their-fault">48. You take great care not to make people look bad, even when it is completely their fault</a></li><li><a href="#49-your-personal-work-style-is-closer-to-spontaneous-bursts-of-energy-than-organized-and-consistent-efforts">49. Your personal work style is closer to spontaneous bursts of energy than organized and consistent efforts</a></li><li><a href="#50-when-someone-thinks-highly-of-you-you-wonder-how-long-it-will-take-them-to-feel-disappointed-in-you">50. When someone thinks highly of you, you wonder how long it will take them to feel disappointed in you</a></li><li><a href="#51-you-would-love-a-job-that-requires-you-to-work-alone-most-of-the-time">51. You would love a job that requires you to work alone most of the time</a></li><li><a href="#52-you-believe-that-pondering-abstract-philosophical-questions-is-a-waste-of-time">52. You believe that pondering abstract philosophical questions is a waste of time</a></li><li><a href="#53-you-feel-more-drawn-to-places-with-busy-bustling-atmospheres-than-quiet-intimate-places">53. You feel more drawn to places with busy, bustling atmospheres than quiet, intimate places</a></li><li><a href="#54-you-know-at-first-glance-how-someone-is-feeling">54. You know at first glance how someone is feeling</a></li><li><a href="#55-you-often-feel-overwhelmed">55. You often feel overwhelmed</a></li><li><a href="#56-you-complete-things-methodically-without-skipping-over-any-steps">56. You complete things methodically without skipping over any steps</a></li><li><a href="#57-you-are-very-intrigued-by-things-labeled-as-controversial">57. You are very intrigued by things labeled as controversial</a></li><li><a href="#58-you-would-pass-along-a-good-opportunity-if-you-thought-someone-else-needed-it-more">58. You would pass along a good opportunity if you thought someone else needed it more</a></li><li><a href="#59-you-struggle-with-deadlines">59. You struggle with deadlines</a></li><li><a href="#60-you-feel-confident-that-things-will-work-out-for-you">60. You feel confident that things will work out for you</a></li></ol></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是mbti">什么是MBTI<a class="hash-link" href="#什么是mbti" title="标题的直接链接">​</a></h2><p>在微信搜索MBTI可以发现有大量相关的文章：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650191510091-869f49efefa5c82cbd0498200c946d0c25184af482573e2138fc8d5135e1dfc0.png" alt="picture 2" class="img_ev3q">  </p><p>在MBTI官网可以找到这个理论的一些定义： <a href="https://www.16personalities.com/articles/our-theory" target="_blank" rel="noopener noreferrer">Our Framework | 16Personalities</a></p><p>想要获得大概认识的话，可以看B站这个，讲的生动有趣： <a href="https://www.bilibili.com/video/BV1a44y1L7Yw/?spm_id_from=333.788.recommend_more_video.-1" target="_blank" rel="noopener noreferrer">全网最详细MBTI 解析！|满满干货！|迷茫必看！_哔哩哔哩_bilibili</a></p><p>想知道影视人物表现出的十六种性格类型，可以看： <a href="https://www.bilibili.com/video/BV1Sp4y1e7rd/?spm_id_from=trigger_reload" target="_blank" rel="noopener noreferrer">通过影视人物表现的16种性格类型_哔哩哔哩_bilibili</a> </p><p>简单来说：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650334147954-04a55bf30f67666f993ad5b229ae481425b91249ed1ce5958aca572e67b0d6a7.png" alt="picture 5" class="img_ev3q">  </p><p>为方便理解，我们姑且称这四类人格属性记为：<strong>能量（EI）、感知（SN）、决策（TF）、行动（JP）</strong>。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="能量ei">能量（E/I）<a class="hash-link" href="#能量ei" title="标题的直接链接">​</a></h3><p>很多人会把MBTI的EI题用来判断自己是否外向，再进一步退化，叫是否“social”，其实我觉得不是这样的。</p><p>我们看上面那个英文解释，叫“Direction of energy and attention focus”，这个解释听起来很高大上，甚至让我联想到了火影忍者里的查克拉：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650528165570-2e2c83e637efc29b22e77bd29ad1c493397a85d5106c8225afe475326fe4ca9c.png" alt="picture 4" class="img_ev3q">  </p><p>具体来讲，就是注意力集中在何处（内心还是世界），从哪里（内心还是世界）获得动力（能量的流向）。</p><p>在这个问题上，我觉得我是坚定的更关注内心的一派，我心即宇宙，我的社交也是为了更好地构筑我的内心，所以我现在其实是I，以后也会是I，当然这并不意味着我未来会减少社交（尽管有这个可能，也可能相反）。</p><p>阅读/学习 --&gt; 社交/交流 --&gt; 实践 --&gt; 阅读/学习，对我来说，这是一个闭环的过程。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="感知sn">感知（S/N）<a class="hash-link" href="#感知sn" title="标题的直接链接">​</a></h3><p>其实这个我不是特别懂~</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="决策tf">决策（T/F）<a class="hash-link" href="#决策tf" title="标题的直接链接">​</a></h3><p>基于逻辑（T）还是感觉（F）。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="行动jp">行动（J/P）<a class="hash-link" href="#行动jp" title="标题的直接链接">​</a></h3><p>基于计划（J）还是冲动（P）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="我的mbti分析">我的MBTI分析<a class="hash-link" href="#我的mbti分析" title="标题的直接链接">​</a></h2><p>根据MBTI官网的规则，每道题的选项空间有七个，我们标记如下：</p><ul><li>3：极其同意</li><li>2：比较同意</li><li>1：相对同意</li><li>0：中立</li><li>-1：相对不同意</li><li>-2：比较不同意</li><li>-3：极其不同意</li></ul><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650539429940-14379162bf5bf19ae2c692bd1eb5c110fcd3e0a44b4b3837408555c74d5fdcaa.png" alt="picture 9" class="img_ev3q">  </p><p>考虑到我个人的独特成长经历，以下每道题，我将给出我的分析过程，并且分别给出我现在（特指目前工作期间）、我期望（特指终极人生目标）等两种不同状态的答案。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-you-regularly-make-new-friends">1. You regularly make new friends<a class="hash-link" href="#1-you-regularly-make-new-friends" title="标题的直接链接">​</a></h3><p>我是否经常结交新朋友？</p><p>EI题。是的。</p><p>通常情况下，人都喜欢交朋友，比如交越来越多的朋友与质量越来越高的朋友。不过这也并非人人如此。</p><p>最简单的，我注意到大学毕业时，不同学生的微信好友数目天差地别，有的只有两三百个，甚至更少；而有的则有两三千个，甚至更多。我应该属于中间水平。</p><p>从经验上看，大部分年轻人交友少的最大原因，可能是沉迷自己的兴趣或者缺乏自信，他们在认识新朋友时会更容易紧张与不安。也就是说，更多的是一种被动结果。</p><p>而一些有名望的人则是另一种局面，他们更多地可能会选择主动避免与回避某些社交，比如冯唐，因为他们认为这些潜在的朋友不能带给自己更多的价值。</p><p>我觉得我大学时期看起来还是比较E（Extravert）的，因为那时候我在班级里公开募资炒股、参加了一个社团、创办了一个社团、经常要打需要上台展示的商赛、经常参加某些商业或学术会议等。</p><p>但怎么说呢，其实我知道我的骨子里是I（Introvert）的，因为如果非无必要，我更倾向于独处，比如就像现在这般，好好地码会字，这让我感到很安详。</p><p>我在社交平台上的话绝对属于不算少的那类，但更多的情况下，（我觉得）那是因为我FP的性格底色让我想要发表更多，而非想要获得更多。</p><p>所以我之前应该是比较喜欢交朋友，现在也是比较喜欢，最后我希望自己是较为喜欢（从2降到1）。</p><p>ANS: 2, 1</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-you-spend-a-lot-of-your-free-time-exploring-various-random-topics-that-pique-your-interest">2. You spend a lot of your free time exploring various random topics that pique your interest<a class="hash-link" href="#2-you-spend-a-lot-of-your-free-time-exploring-various-random-topics-that-pique-your-interest" title="标题的直接链接">​</a></h3><p>我是否花很多时间在一些引起兴趣的随机话题上？</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650536422237-de67e0eb440c23f578f517213c56442c737d0a21d15c7a930f139af17d30fb47.png" alt="picture 8" class="img_ev3q">  </p><p>感觉是TF题。是的，比如小花梅、上海疫情等。</p><p>很显然，目前应该是的，毕竟上海疫情一个月以来，由于其前所未有的三观崩裂，我几乎是上海瓜田里乱窜的猹钻来钻去，已经花费了很长的时间。</p><p>但怎么说呢，这个东西，既有优点又有缺点，其实本质问题就是是否有足够的好奇心，代价就是容易影响到自己既有的计划。</p><p>我应该一直都是比较容易花时间研究感兴趣的事情的人（并不惜改变牺牲一些既定需要完成的任务，以至于……我最后毕业后竟然跨行工作了……）。</p><p>未来我可能还会继续关注投资、潮流等领域，因此对于这道题，应该来说，不可能完全选不同意，比较合理的答案是曾经比较同意，未来相对不同意（毕竟那时候三观较为稳定了，不太需要一直关注外界的新东西）。</p><p>ANS: 2, -1</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-seeing-other-people-cry-can-easily-make-you-feel-like-you-want-to-cry-too">3. Seeing other people cry can easily make you feel like you want to cry too<a class="hash-link" href="#3-seeing-other-people-cry-can-easily-make-you-feel-like-you-want-to-cry-too" title="标题的直接链接">​</a></h3><p>我是否看见别人哭时也容易哭？</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650531710336-50117e102315a84601fd2742f15a8316b657e1ed35d0dd4ce096661ef638017d.png" alt="https://www.pinterest.com/pin/10344274142071053/" class="img_ev3q">  </p><p>TF题。是的。</p><p>我真心觉得我泪点还是比较低的，比如看红楼梦、人世间等， 真能把我哭个半死，抑郁好长时间。</p><p>以前是见不得女孩哭，后来慢慢地，基于众所周知的原因，更见不得男人哭。</p><p>不过我不觉得这是个什么丢人的事，同理心，人皆有之，而且我的职业也不需要我过多的压抑自己的情绪。</p><p>我并不想变得过于冷血，但我也希望未来自己情绪能更稳定一些、更客观一些（-1到1之间），但具体想偏向哪边说实话我还真不能确定。</p><p>我未来到底还希不希望自己看到别人哭时自己也愿意稍微哭一点呢？</p><p>或许可以从佛学中得到点启示，平和心吧，所以未来希望是0，不悲也不喜。</p><p>但考虑到尽量不要选中性答案，既然生而为人，还是选相对同意吧。</p><p>ANS: 2, 1</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-you-often-make-a-backup-plan-for-a-backup-plan">4. You often make a backup plan for a backup plan<a class="hash-link" href="#4-you-often-make-a-backup-plan-for-a-backup-plan" title="标题的直接链接">​</a></h3><p>我经常为B计划准备C计划吗？</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650531918847-2d9b44b3cf77e6820e9f289cee4c5c1edd97adaa1a9e460678296f478b8d98b8.png" alt="picture 6" class="img_ev3q">  </p><p>JP题。否。</p><p>hmm，这道题，我应该是坚定地选否了，我甚至一般都没有B计划，只有A计划。</p><p>我向来不是很喜欢做策划、执行类工作，而且未来大概率也不会。</p><p>也向来是一个敢爱敢恨、敢拼敢做的人，经常在自己只有59分的时候去挑战99分的任务，最终可能只有79分。</p><p>有些时候赢了，有些时候输了。</p><p>坦白说，很多时候真没想过输了后会怎么做。</p><p>只有一条：无论输赢，我们的人生都将继续下去。</p><p>每每想到这，我也就没有什么好怕的，只要想，便往前冲就是。</p><p>所以，目前是-3，未来有孩子之类的话，大概率是-1。</p><p>ANS: -3, -1</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-you-usually-stay-calm-even-under-a-lot-of-pressure">5. You usually stay calm, even under a lot of pressure<a class="hash-link" href="#5-you-usually-stay-calm-even-under-a-lot-of-pressure" title="标题的直接链接">​</a></h3><p>我经常在高压状态之下也能保持冷静？</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650532878798-6bc68acc10908ff74441338a18fe6d16500b0b74634dcd1617551dee5a81a368.png" alt="picture 7" class="img_ev3q">  </p><p>TF题。是的。</p><p>接上题，我觉得很多情况下，之所以有勇气去承接一些新的项目、面对一些新的风暴、挑战一些新的极限，其很重要的一个原因，是我确实经常能够保持冷静，我也有段时间刻意去控制、训练自己的这种特质。</p><p>在高压状态下，比如临考前、项目攻关之时，我会刻意地去冲澡、冥想、听舒缓或激动的音乐，压力极大的情况下也可能考虑抽两根烟，保持头脑的镇定，审视自己能调用的所有资源，仔细去思考问题的可行方案。</p><p>这些一次又一次的艰难考验，磨练了我的意志力，并不断内化为心中的平稳与自信，最终外化为情绪的稳定与镇静，进一步增大我做成一件事的概率。</p><p>正如马斯克所言，比起悲观，他更倾向于乐观。</p><p>我也如此，在此基础之上，比起慌乱，我更倾向于冷静。</p><p>不过其实，我也曾经有过巨大的怀疑过，大学里有一次因为一件很小的社团矛盾，顿感过人生的不值得，当时我在宿舍楼的楼顶，说实话真有一股向下的冲动，还好当时有着封锁起来的玻璃门，现在想来也是十分地幼稚的。尽管这么说并不够负责，我们不能把现在的心态去作用在当时上面。</p><p>人的内心是逐渐成长的，但未来的问题也会越来越大，它就像一追一赶的关系，你真地不知道什么时候你会有完全撑不住的时候，maybe买房还贷资金锻炼的时候？or maybe亲人……</p><p>May peace with us all.</p><p>ANS: 3, 3</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-at-social-events-you-rarely-try-to-introduce-yourself-to-new-people-and-mostly-talk-to-the-ones-you-already-know">6. At social events, you rarely try to introduce yourself to new people and mostly talk to the ones you already know<a class="hash-link" href="#6-at-social-events-you-rarely-try-to-introduce-yourself-to-new-people-and-mostly-talk-to-the-ones-you-already-know" title="标题的直接链接">​</a></h3><p>在社交场合，我是否经常与熟人交谈，而非向陌生人介绍自己？</p><p>EI题。是的。</p><p>如非职业需要，我想大多数人应该都倾向于与熟人交流，而非与陌生人吧~</p><p>但这不代表这问题就不重要，毕竟MBTI可辅助作为职业性格测试。</p><p>也许真地有天生就喜欢认识新人的人存在？</p><p>遗憾的是，我不属于这类；幸运的是，我的职业同样不需要我主动地去认识更多的人。</p><p>所以在这点上我不拧巴，也不需要拧巴。</p><p>但其实在这点上我做的应该还好，我也曾试过在社交场合主动地去认识我感兴趣的人，最后的效果其实还不错。大部分当时就得到了回应，后续还成为了不错的朋友。</p><p>在社交场合，适当地主动认识自己感兴趣的人，应该是我的主基调，因此我选较为认同。</p><p>ANS: 1, 1</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-you-prefer-to-completely-finish-one-project-before-starting-another">7. You prefer to completely finish one project before starting another<a class="hash-link" href="#7-you-prefer-to-completely-finish-one-project-before-starting-another" title="标题的直接链接">​</a></h3><p>我更倾向于在完成一个项目之后再开启另一个？</p><p>JP题。是的。</p><p>我记得我在大学的某个大课堂上，对着学弟学妹们公开说我是一个比较喜欢多线程的人，比如同时聊天同时忙着学习等。</p><p>但事实上，我后来意识到，其实不是这样的。</p><p>我反思我若能同时进行某些东西，它们一般是比较平凡的、不需要太多脑力的。</p><p>但这其实已经与我这几年的真实工作场景有所区别，目前我的很多项目压力还是较大的、有不可预期的失败风险，因此需要我全身心的投入，比如考研和一些商业开发项目。</p><p>而经过这些项目的历练，我意识到，我其实并不擅长同时进行多个项目。具体地说，我其实并不适合项目管理那种职业角色，我现在很喜欢目前的开发工作，那种全程从0到1、完全掌握自己的进度，最终把东西完美结项的感觉是我非常享受的。</p><p>因此，这道题，我目前是很同意的，因为比起多条线同时操作导致的意外风险，我更希望能一个个来，这样会更有信心一些，all-in的感觉说实话真地很不错。</p><p>之前看马斯克说他在最艰难的时候面临两家公司的取舍问题，最终他坚持了两个一起搞并且都成功了。</p><p>我不确定我是否也会面临那样的抉择，但大概率是会的；我也不确定最终是否也能那么顺利，也许也是会的。</p><p>但我内心还是希望，能一个个来的。</p><p>ANS: 2, 2</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="8-you-are-very-sentimental">8. You are very sentimental<a class="hash-link" href="#8-you-are-very-sentimental" title="标题的直接链接">​</a></h3><p>我是否多愁善感？</p><p>TF题。是的。</p><p>我是一个典型的巨蟹座，多愁善感。（当然这也与我很多比较坎坷的人生经历有关）</p><p>我自己虽然不信星座，但是巨蟹的多愁善感倒是逐渐刻进了我的基因，并且接受了这种设定。</p><p>根据<a href="https://www.zhihu.com/question/19621312" target="_blank" rel="noopener noreferrer">星座合理性在哪里？ - 知乎</a>，整理星座有效性的背后理论如下：</p><ol><li>巴纳姆效应：人倾向于相信一个笼统的、抽象的人格描述，并认为适合自己</li><li>证实性偏见：人倾向于寻找支持预设观点的证据，并忽略相反证据</li><li>罗森塔尔效应：心理暗示让人按照暗示的方向去实现自己</li></ol><p>我的理解是星座就是个潘多拉魔盒，在你不了解之前，你觉得自己是多面性的、有无限发展潜能的。而当你接触之后，你首先会接受该星座的某些预设成见，并逐步相信，按照这个去发展自己，而同时，身边也有越来越多的人加入这个队伍，并进一步巩固这个理论的科学性。</p><p>于是，这个理论，便持久地在这个世界上运转了，除非有猛烈的文章去抨击它，致使所有人都觉得这个理论的荒谬。然而，大家普遍又没有去推翻这个机制的动机，因为星座本身，是中性的、无害的，与其所有人都完全清醒地活着，不如多一个可以找乐子、并且确实有很多被证实的先例的理论，用以发展社交。</p><p>同时根据MBTI，相信星座的可能更多的是N型人格，情侣或者朋友之间如果恰好都相信星座，可以多一条维系情感的纽带，属于同一磁场的人；当然基于星座再衍生出来的配对理论，情侣之间如果恰好处于不那么准的一对的话，据我的直觉与经验，他们也会选择无视。</p><p>从这个角度上来说，相信星座的人把星座当做自己工具箱中的一个有利工具，他们会在这个工具合适的时候拿出来用，不合适的时候就放在那。</p><p>基于以上，我也不打算对我多愁善感的性格多有什么其他的想法，顺其自然即可。</p><p>ANS: 3, 2</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="9-you-like-to-use-organizing-tools-like-schedules-and-lists">9. You like to use organizing tools like schedules and lists<a class="hash-link" href="#9-you-like-to-use-organizing-tools-like-schedules-and-lists" title="标题的直接链接">​</a></h3><p>我喜欢使用计划表、列表等组织工具？</p><p>JP题。是的。</p><p>很显然，是否有使用计划工具的偏好与习惯，是能体现一个人的自律性。而近几年烂大街推崇的自律，又是每个人都无法绕开的一个命题。</p><p>但很可惜的是，我们喜欢与拥有计划工具，却并不意味着我们就能贯彻执行。</p><p>从我自己出发，我在大学里的时候说实话，计划性不强，因为其实每天都有很多事要做，立即要做，而非有一个长远的目标。</p><p>关于这点，有一位学长对我的分析特别到位，他说我更喜欢做那些紧急但不重要的事（例如比赛），而非那些不紧急但重要的事（例如考研）。</p><p>确实如此，我绝大多数比赛的结果都较为乐观，但在考研上确实付出了较为沉重的代价。这是值得反思的。</p><p>不过考研也确实锻炼了我的计划能力，我曾经给自己定制了极其充实的日程表，也确实严格执行了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650561197857-3298ddc49b513140b522a5321953f7d8b34c63cde6e72a8ee204d47e6f931c57.png" alt="picture 10" class="img_ev3q">  </p><p>在那之后，又经过了某些高强度项目的淬炼，对计划（尤其是TODO）之类的管理更加重视，但随着数目的增长也确实越来越难以管理。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_mbti-1650561373371-a78bfa618506879b11a26d0582069974dfad3db3d9994e0f93bd16138298813f.png" alt="picture 11" class="img_ev3q">  </p><p>但不管怎样，承认自己的脑子不如一些计划工具好用，我将尽量使用与坚持使用计划工具管理自己。</p><p>ANS: 3, 3</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="10-even-a-small-mistake-can-cause-you-to-doubt-your-overall-abilities-and-knowledge">10. Even a small mistake can cause you to doubt your overall abilities and knowledge<a class="hash-link" href="#10-even-a-small-mistake-can-cause-you-to-doubt-your-overall-abilities-and-knowledge" title="标题的直接链接">​</a></h3><p>我会因为一个小错误而自我怀疑自己的整体能力吗？</p><p>可能是TP题。不会。</p><p>错误是在所难免的，关键是错在哪一层，以及错到哪一层。</p><p>这让我不禁想起机器学习的原理，即不断地从误差中完善自身，以减少最终的误差。</p><p>我们接受了十多年的教育，对我们所学习的理论、人文知识有着充足的信心，不大可能轻易地动摇对我们自身能力系统的信任基础。</p><p>但容易崩溃的场景确实存在，并且很难避免。</p><p>我的看法是，保持开诚互、敏捷反应、终身学习！</p><p>ANS: -3, -3</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="11-you-feel-comfortable-just-walking-up-to-someone-you-find-interesting-and-striking-up-a-conversation">11. You feel comfortable just walking up to someone you find interesting and striking up a conversation<a class="hash-link" href="#11-you-feel-comfortable-just-walking-up-to-someone-you-find-interesting-and-striking-up-a-conversation" title="标题的直接链接">​</a></h3><p>我是自来熟吗？</p><p>EI题。是的。</p><p>尽管大多数时候我其实并不够自信，同时也因为没有正式学习过一些社交礼仪、技巧相关的经历，所以其实类似自来熟的能力，我是不怎么具备的。</p><p>但我联想到我的过往，我确实会愿意去主动与我感兴趣的人交流，比如讲座过后去追问老师一些问题甚至所要联系方式，以及曾经当着女朋友面去问别的女孩微信以体现自己的社牛（这是后来反思做过的最傻逼的事情之一）。</p><p>因此，这道题还是偏同意为主。未来并不打算变得更加主动，也不打算变得相反，维持目前这个级别的社交意愿与能力即可。</p><p>ANS: 1, 1</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="12-you-are-not-too-interested-in-discussing-various-interpretations-and-analyses-of-creative-works">12. You are not too interested in discussing various interpretations and analyses of creative works<a class="hash-link" href="#12-you-are-not-too-interested-in-discussing-various-interpretations-and-analyses-of-creative-works" title="标题的直接链接">​</a></h3><p>我是否对开发性的、分析性的创意工作的交流不太感兴趣？</p><p>TF题。否。</p><p>我还是比较喜欢开放性的话题的。</p><p>而且众所周知，一部电影（例如误杀）/一本书（例如红楼梦），留给大家的是一个开放性的结尾，会让人觉得很意味深长。</p><p>也许会有人更加喜欢确定的、被安排好的结局（大概真地存在吧！），但我一定是投开放票的（如果有的话）。</p><p>而在实际工作中，我们往往需要具备全局统筹的能力，照顾安排各方的想法意见等，例如对于上海疫情到底是封城好还是放开好等，我是相对比较喜欢去研究这些问题。（参见： <a href="https://www.youtube.com/watch?v=Y4HqXP47lPQ" target="_blank" rel="noopener noreferrer">《正義：一場思辨之旅》之電車問題 (雙語字幕) - YouTube</a>）</p><p>但这也有一定的缺点，那就是讨论的越激烈越容易迷失，花费很多时间但其实大多数情况下不能得出一个实际可操作的解，例如我曾经和基友通宵讨论“灵魂伴侣是否存在”……</p><p>ANS: -2, -2</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="13-you-are-more-inclined-to-follow-your-head-than-your-heart">13. You are more inclined to follow your head than your heart<a class="hash-link" href="#13-you-are-more-inclined-to-follow-your-head-than-your-heart" title="标题的直接链接">​</a></h3><p>我更愿意听从我的理智而非内心？</p><p>TF题。否。</p><p>这道题，其实……怎么说呢，应该说是一个经典的问题了，听从理智，亦或顺从内心。</p><p>在回答这个问题之前，我觉得我们得首先做个较为明确的定义，即什么是理智什么是内心。</p><p>我个人认为理智就是更关注外界的条件如何，而内心则更关注自己能做到什么地步。</p><p>而当我们讨论到底是顺从理智还是顺从内心时，可能更多的是在考虑：面临客观的条件，我们在多大程度上愿意发挥主观能动性？</p><p>很多电影都喜欢植入这样的理念：主人公在关键的时候，听从了自己的内心，经历了非凡的考验，最终得到一个圆满的结果的。比如《毕业生》里男主的理智告诉自己和罗宾逊夫人是不可能的，但还是听从了内心，大胆地去尝试。</p><p>很有意思的是，当我们产生某些情愫时，好像心脏部分确实有更大的反应，我不是很懂心理学与生理学，但似乎这些反应确实导致了我们将“心”和“脑”分成两部分去独立看待，一部分叫感性，一部分叫理性。然而近几年“上头”或者“下头”的网络词又不胫而走，似乎开始模糊理智和内心之间的界线。</p><p>我的观点，我觉得强制把心和脑分开去讨论，可能是有点偷懒的。无论做什么决定，其实都是经过我们思考的。就拿表白来说，我不认为鼓起勇气表白属于顺心，反之顺脑；我可能更倾向于认为前者只是更有勇气、风险偏好较高，后者相反而已。</p><p>理智与内心可能并非对立的，更多的时候，它们两，我觉得，是综合的，即最终合起来进入大脑的决策，而非要么进入理智的门、要么进入内心的门，好像我们的身体中有两个决策机构一样。</p><p>比如21年我决定去骑行川藏线，那几乎就是一晚上做完的决定，其实从理智层面我知道会有很大的风险，我在尚未认识到足够多的风险之前，就直接光速上阵了，后续路上我重摔过两次，还在在羊湖的山顶差点冻死，因此比起理智与审慎，我确实更倾向于坚持内心想做的事，未来大概率也不会变。</p><p>我宁可后悔而不想留有遗憾。</p><p>未来我其实希望自己更理智一些，不过估计做不到，那就略微从-3提到-2吧。</p><p>ANS: -3, -2</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="14-you-usually-prefer-just-doing-what-you-feel-like-at-any-given-moment-instead-of-planning-a-particular-daily-routine">14. You usually prefer just doing what you feel like at any given moment instead of planning a particular daily routine<a class="hash-link" href="#14-you-usually-prefer-just-doing-what-you-feel-like-at-any-given-moment-instead-of-planning-a-particular-daily-routine" title="标题的直接链接">​</a></h3><p>比起循规蹈矩，我更喜欢基于当时的感觉做自己想做的事？</p><p>JP题。是的。</p><p>循规蹈矩、按流程办事，很适合执行人员风格。</p><p>但我逐渐地意识到，按照既定计划做事而无视其他临时的冲动，当且仅当这个既定的计划是有效的、是我愿意去执行的，才行。</p><p>但很多时候，我们发现我们不得不去做一些我们当时不愿意去乖乖执行的事。</p><p>这些事中，有些我们后悔了，比如学生时代的眼保健操、正楷书法等，不重视、不愿意去好好地练，未来都吃到了不同程度的苦头。</p><p>无可否认的是，即使站在当下这个时间点，再去审视从前，以及现在，会发现很多情况下，我们还是公然地在自己的既定计划上“为非作歹”：不够自律，思想飘忽，并且绝大多数这些本可以用于工作的时间和精力投入到其他地方后，并没有给自己带来多少的增益。</p><p>很难说这些思想的自由流动，是否真正构建了灵魂的自由，我多多少少难以说服自己说：不要再乱想了，先把手头任务完成再说吧！</p><p>不过，我还是希望尽量吧。</p><p>ANS: 3, 2</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="15-you-rarely-worry-about-whether-you-make-a-good-impression-on-people-you-meet">15. You rarely worry about whether you make a good impression on people you meet<a class="hash-link" href="#15-you-rarely-worry-about-whether-you-make-a-good-impression-on-people-you-meet" title="标题的直接链接">​</a></h3><p>我很少担心自己给别人留下的印象好不好？</p><p>EI题。是的。</p><p>其实一般来说，我们但不担心给别人留下坏印象，主要取决于对方在自己心中重不重要（包括情感方面或者利益方面）。</p><p>不过抛开上者不谈，我也确实曾经因为某些事，了解到某些人对我的负面评价，自那之后，我深刻地明白这个世界想让所有人都满意是不可能的。</p><p>哪怕是雷锋，好人至此，都被一群小人所记恨呢。</p><p>现在我就倾向于做好自己，走自己的路，让别人去说；当然，适当了解一下别人的看法，有助于自己的进一步提高。</p><p>ANS: 2, 2</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="16-you-enjoy-participating-in-group-activities">16. You enjoy participating in group activities<a class="hash-link" href="#16-you-enjoy-participating-in-group-activities" title="标题的直接链接">​</a></h3><p>我喜欢参与集体活动？</p><p>EI题。否。</p><p>不是很喜欢，更加喜欢独立做些东西，发挥自己的主导作用而非螺丝钉作用。</p><p>不过如果有很好的朋友在里面，倒是很乐意一起。</p><p>ANS: -2, -2</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="17-you-like-books-and-movies-that-make-you-come-up-with-your-own-interpretation-of-the-ending">17. You like books and movies that make you come up with your own interpretation of the ending<a class="hash-link" href="#17-you-like-books-and-movies-that-make-you-come-up-with-your-own-interpretation-of-the-ending" title="标题的直接链接">​</a></h3><p>我喜欢开放性结尾的书籍和电影？</p><p>TF题。是。</p><p>接近第12题。</p><p>ANS: 2, 2</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="18-your-happiness-comes-more-from-helping-others-accomplish-things-than-your-own-accomplishments">18. Your happiness comes more from helping others accomplish things than your own accomplishments<a class="hash-link" href="#18-your-happiness-comes-more-from-helping-others-accomplish-things-than-your-own-accomplishments" title="标题的直接链接">​</a></h3><p>我的快乐更多地来自于帮助别人，而非来自于自己？</p><p>EI题。否。</p><p>我其实一直都是一个挺乐意帮助别人的人。</p><p>在大学期间，真地抱着去改变一些东西的想法，去办社团、开展编程教学等。</p><p>当然，这中间，有没有掺杂一些表现欲，肯定还是有的。</p><p>但是后来，我发现，从客观角度来说，这样的时间、精力成本太高了，简而言之就是：一个人可以走的很快，一群人走的很远。</p><p>但问题是，话虽这么说，这个“一群人”却往往不是那么牢固的，今天是这群人，明天就是那群人，这是很多问题的一些根源。</p><p>这个想法，非我一人。</p><p>我有一位学长，在我们社团也是出了名的乐于助人。很遗憾的是，后来他读研后告诉我，他已经不那么热衷于改变身边的人了（主要是硕士阶段的同学思维已经快成型，不热衷于听别人的想法与建议了）。</p><p>我从他语气中读出的那种失望，至今仍印象深刻。</p><p>我希望能更多地去帮助确实需要帮助、并且对彼此成长都有益的人（比如今年创了个行业交流群，独乐乐不如众乐乐），而非盲目地、非选择性地来者不拒。</p><p>但总体来说，我还是倾向于自己完成一些东西，这样更有成就感，这么想的原因也可能是因为认识到了自己羽翼确实不够丰满。</p><p>也许有朝一日，可以完全不需要在乎自己的目前水平，而致力于投身于从别人的成功那里获取快乐，尽管不知道这种转变有没有足够的必要。</p><p>ANS: -1, -1</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="19-you-are-interested-in-so-many-things-that-you-find-it-difficult-to-choose-what-to-try-next">19. You are interested in so many things that you find it difficult to choose what to try next<a class="hash-link" href="#19-you-are-interested-in-so-many-things-that-you-find-it-difficult-to-choose-what-to-try-next" title="标题的直接链接">​</a></h3><p>我的兴趣实在过于广泛以至于经常在选择上犯难？</p><p>TF题。绝对是的！</p><p>这题我有绝对的发言权，毕竟我是那么深入地同时研究金融与计算机过，从我大二开始，我就在要不要投入到计算机行业这个问题上十分纠结。</p><p>大三在投行实习时，我老板跟我聊我的未来规划的问题，她直截了当地说总有一天我是要必须做出选择的：金融亦或计算机，而非两个同时学。</p><p>也许是命中注定，后来，可能是因为我过于明确地表达我有考研的意愿，我最终在华兴投行的hr面试中被拒绝。</p><p>再之后，我领导开发了很多初中期公司的商业项目，深知自己非全身心投入到某个具体领域中去炮炼成长不可，因此便再也不考虑金融行业的择业方向了。</p><p>我相信，金融与计算机的择业问题，仅仅还是我人生生涯中的第一个较大的选择问题。以我的性格，未来还将继续饱受折磨。</p><p>ANS: 3, 3</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="20-you-are-prone-to-worrying-that-things-will-take-a-turn-for-the-worse">20. You are prone to worrying that things will take a turn for the worse<a class="hash-link" href="#20-you-are-prone-to-worrying-that-things-will-take-a-turn-for-the-worse" title="标题的直接链接">​</a></h3><p>你很容易担心事情会往坏的方向去发展？</p><p>SN题。否。</p><p>没啥可担心的，兵来将挡水来土掩，能乐观绝不悲观（但会做好最悲观的打算）。</p><p>ANS: -3, -3</p><hr><p>【待续！】</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="21-you-avoid-leadership-roles-in-group-settings">21. You avoid leadership roles in group settings<a class="hash-link" href="#21-you-avoid-leadership-roles-in-group-settings" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="22-you-are-definitely-not-an-artistic-type-of-person">22. You are definitely not an artistic type of person<a class="hash-link" href="#22-you-are-definitely-not-an-artistic-type-of-person" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="23-you-think-the-world-would-be-a-better-place-if-people-relied-more-on-rationality-and-less-on-their-feelings">23. You think the world would be a better place if people relied more on rationality and less on their feelings<a class="hash-link" href="#23-you-think-the-world-would-be-a-better-place-if-people-relied-more-on-rationality-and-less-on-their-feelings" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="24-you-prefer-to-do-your-chores-before-allowing-yourself-to-relax">24. You prefer to do your chores before allowing yourself to relax<a class="hash-link" href="#24-you-prefer-to-do-your-chores-before-allowing-yourself-to-relax" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="25-you-enjoy-watching-people-argue">25. You enjoy watching people argue<a class="hash-link" href="#25-you-enjoy-watching-people-argue" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="26-you-tend-to-avoid-drawing-attention-to-yourself">26. You tend to avoid drawing attention to yourself<a class="hash-link" href="#26-you-tend-to-avoid-drawing-attention-to-yourself" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="27-your-mood-can-change-very-quickly">27. Your mood can change very quickly<a class="hash-link" href="#27-your-mood-can-change-very-quickly" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="28-you-lose-patience-with-people-who-are-not-as-efficient-as-you">28. You lose patience with people who are not as efficient as you<a class="hash-link" href="#28-you-lose-patience-with-people-who-are-not-as-efficient-as-you" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="29-you-often-end-up-doing-things-at-the-last-possible-moment">29. You often end up doing things at the last possible moment<a class="hash-link" href="#29-you-often-end-up-doing-things-at-the-last-possible-moment" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="30-you-have-always-been-fascinated-by-the-question-of-what-if-anything-happens-after-death">30. You have always been fascinated by the question of what, if anything, happens after death<a class="hash-link" href="#30-you-have-always-been-fascinated-by-the-question-of-what-if-anything-happens-after-death" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="31-you-usually-prefer-to-be-around-others-rather-than-on-your-own">31. You usually prefer to be around others rather than on your own<a class="hash-link" href="#31-you-usually-prefer-to-be-around-others-rather-than-on-your-own" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="32-you-become-bored-or-lose-interest-when-the-discussion-gets-highly-theoretical">32. You become bored or lose interest when the discussion gets highly theoretical<a class="hash-link" href="#32-you-become-bored-or-lose-interest-when-the-discussion-gets-highly-theoretical" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="33-you-find-it-easy-to-empathize-with-a-person-whose-experiences-are-very-different-from-yours">33. You find it easy to empathize with a person whose experiences are very different from yours<a class="hash-link" href="#33-you-find-it-easy-to-empathize-with-a-person-whose-experiences-are-very-different-from-yours" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="34-you-usually-postpone-finalizing-decisions-for-as-long-as-possible">34. You usually postpone finalizing decisions for as long as possible<a class="hash-link" href="#34-you-usually-postpone-finalizing-decisions-for-as-long-as-possible" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="35-you-rarely-second-guess-the-choices-that-you-have-made">35. You rarely second-guess the choices that you have made<a class="hash-link" href="#35-you-rarely-second-guess-the-choices-that-you-have-made" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="36-after-a-long-and-exhausting-week-a-lively-social-event-is-just-what-you-need">36. After a long and exhausting week, a lively social event is just what you need<a class="hash-link" href="#36-after-a-long-and-exhausting-week-a-lively-social-event-is-just-what-you-need" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="37-you-enjoy-going-to-art-museums">37. You enjoy going to art museums<a class="hash-link" href="#37-you-enjoy-going-to-art-museums" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="38-you-often-have-a-hard-time-understanding-other-peoples-feelings">38. You often have a hard time understanding other people’s feelings<a class="hash-link" href="#38-you-often-have-a-hard-time-understanding-other-peoples-feelings" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="39-you-like-to-have-a-to-do-list-for-each-day">39. You like to have a to-do list for each day<a class="hash-link" href="#39-you-like-to-have-a-to-do-list-for-each-day" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="40-you-rarely-feel-insecure">40. You rarely feel insecure<a class="hash-link" href="#40-you-rarely-feel-insecure" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="41-you-avoid-making-phone-calls">41. You avoid making phone calls<a class="hash-link" href="#41-you-avoid-making-phone-calls" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="42-you-often-spend-a-lot-of-time-trying-to-understand-views-that-are-very-different-from-your-own">42. You often spend a lot of time trying to understand views that are very different from your own<a class="hash-link" href="#42-you-often-spend-a-lot-of-time-trying-to-understand-views-that-are-very-different-from-your-own" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="43-in-your-social-circle-you-are-often-the-one-who-contacts-your-friends-and-initiates-activities">43. In your social circle, you are often the one who contacts your friends and initiates activities<a class="hash-link" href="#43-in-your-social-circle-you-are-often-the-one-who-contacts-your-friends-and-initiates-activities" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="44-if-your-plans-are-interrupted-your-top-priority-is-to-get-back-on-track-as-soon-as-possible">44. If your plans are interrupted, your top priority is to get back on track as soon as possible<a class="hash-link" href="#44-if-your-plans-are-interrupted-your-top-priority-is-to-get-back-on-track-as-soon-as-possible" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="45-you-are-still-bothered-by-mistakes-that-you-made-a-long-time-ago">45. You are still bothered by mistakes that you made a long time ago<a class="hash-link" href="#45-you-are-still-bothered-by-mistakes-that-you-made-a-long-time-ago" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="46-you-rarely-contemplate-the-reasons-for-human-existence-or-the-meaning-of-life">46. You rarely contemplate the reasons for human existence or the meaning of life<a class="hash-link" href="#46-you-rarely-contemplate-the-reasons-for-human-existence-or-the-meaning-of-life" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="47-your-emotions-control-you-more-than-you-control-them">47. Your emotions control you more than you control them<a class="hash-link" href="#47-your-emotions-control-you-more-than-you-control-them" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="48-you-take-great-care-not-to-make-people-look-bad-even-when-it-is-completely-their-fault">48. You take great care not to make people look bad, even when it is completely their fault<a class="hash-link" href="#48-you-take-great-care-not-to-make-people-look-bad-even-when-it-is-completely-their-fault" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="49-your-personal-work-style-is-closer-to-spontaneous-bursts-of-energy-than-organized-and-consistent-efforts">49. Your personal work style is closer to spontaneous bursts of energy than organized and consistent efforts<a class="hash-link" href="#49-your-personal-work-style-is-closer-to-spontaneous-bursts-of-energy-than-organized-and-consistent-efforts" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="50-when-someone-thinks-highly-of-you-you-wonder-how-long-it-will-take-them-to-feel-disappointed-in-you">50. When someone thinks highly of you, you wonder how long it will take them to feel disappointed in you<a class="hash-link" href="#50-when-someone-thinks-highly-of-you-you-wonder-how-long-it-will-take-them-to-feel-disappointed-in-you" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="51-you-would-love-a-job-that-requires-you-to-work-alone-most-of-the-time">51. You would love a job that requires you to work alone most of the time<a class="hash-link" href="#51-you-would-love-a-job-that-requires-you-to-work-alone-most-of-the-time" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="52-you-believe-that-pondering-abstract-philosophical-questions-is-a-waste-of-time">52. You believe that pondering abstract philosophical questions is a waste of time<a class="hash-link" href="#52-you-believe-that-pondering-abstract-philosophical-questions-is-a-waste-of-time" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="53-you-feel-more-drawn-to-places-with-busy-bustling-atmospheres-than-quiet-intimate-places">53. You feel more drawn to places with busy, bustling atmospheres than quiet, intimate places<a class="hash-link" href="#53-you-feel-more-drawn-to-places-with-busy-bustling-atmospheres-than-quiet-intimate-places" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="54-you-know-at-first-glance-how-someone-is-feeling">54. You know at first glance how someone is feeling<a class="hash-link" href="#54-you-know-at-first-glance-how-someone-is-feeling" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="55-you-often-feel-overwhelmed">55. You often feel overwhelmed<a class="hash-link" href="#55-you-often-feel-overwhelmed" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="56-you-complete-things-methodically-without-skipping-over-any-steps">56. You complete things methodically without skipping over any steps<a class="hash-link" href="#56-you-complete-things-methodically-without-skipping-over-any-steps" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="57-you-are-very-intrigued-by-things-labeled-as-controversial">57. You are very intrigued by things labeled as controversial<a class="hash-link" href="#57-you-are-very-intrigued-by-things-labeled-as-controversial" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="58-you-would-pass-along-a-good-opportunity-if-you-thought-someone-else-needed-it-more">58. You would pass along a good opportunity if you thought someone else needed it more<a class="hash-link" href="#58-you-would-pass-along-a-good-opportunity-if-you-thought-someone-else-needed-it-more" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="59-you-struggle-with-deadlines">59. You struggle with deadlines<a class="hash-link" href="#59-you-struggle-with-deadlines" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="60-you-feel-confident-that-things-will-work-out-for-you">60. You feel confident that things will work out for you<a class="hash-link" href="#60-you-feel-confident-that-things-will-work-out-for-you" title="标题的直接链接">​</a></h3>]]></content:encoded>
            <category>札记</category>
            <category>人生</category>
            <category>性格</category>
            <category>MBTI</category>
        </item>
        <item>
            <title><![CDATA[札记 | 愿逝者安息生者坚强，你我迎风奔跑向阳而生]]></title>
            <link>https://markshawn2020.github.io/blog/2022/03/27/archive/prose-321-air-crash</link>
            <guid>/2022/03/27/archive/prose-321-air-crash</guid>
            <pubDate>Sun, 27 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[三月二十一日，于某些人，某些家庭，是一个无法面对的日子。]]></description>
            <content:encoded><![CDATA[<p>三月二十一日，于某些人，某些家庭，是一个无法面对的日子。</p><p>这一天，于我，同样难以承受。</p><p>那天前夜，我困倦地倒趴床上不慎入眠，凌晨三点醒来后才拾掇进入被窝，之后五点、七点又醒，像往日一样洗漱后坐在椅子上吃着面包，稍坐直时突发左背剧疼，不能动弹，紧接着脖子就几乎不能转到。势头十分猛烈，前所未有。</p><p>我料想可能是休息不足，或者欠佳，于是回到床上艰难地躺下，企图希望能有好转。</p><p>然而，命运总是这样的无情：当你发现某些疾病有显著的爆发症状时，往往为时已晚。</p><p>这次临时休息历经半小时后，并无任何好转，而我近乎无法起床了，仿佛左肩胛骨处有一根骨头已被抽走，无法肌肉用力。</p><p>我连忙查询相关原因，左背疼痛大致有两种，肌肉痛与心肌痛。由于我按压左背并无明显的压痛感差异，所以不属于肌肉痛，那就属于后者心肌痛，即由心机梗塞突发导致的连带的左背疼痛。</p><p>了解至此，我不禁胆战心惊，立即准备前往附近的医院，最近的是3公里外的一家中医院。</p><p>医生首先想的是确定是否心脏问题，于是开单做心电图检测与心肌酶谱七项血检。</p><p>一小时后拿到报告，心电图似乎显示一切正常。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/image-20220327142103975.png" alt="image-20220327142103975" class="img_ev3q"></p><p>中午挣扎着吃外卖（半跪着在医院的椅子上吃完的，因为脖子没法动）时拿到了血检报告，似乎也是一切正常……</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/image-20220327142206665.png" alt="image-20220327142206665" class="img_ev3q"></p><p>于是等到下午一点半医生上班后看完报告，认定是软组织挫伤问题，在征求我中西药意见时见我对是否能开中药拿不定主意后开了西药，氟比洛芬凝胶贴膏用于外敷，塞来昔布胶囊用于内服。</p><p>我其实是比较抗拒这个诊断结果的，毕竟从一个医学门外汉的角度看，也许确是软组织的问题，但挫伤，尤其这个“挫”字可能禁不起推敲。</p><p>但总之，既然医生都这么诊了，我也没有什么理由再去辩驳，按医生的建议好好调休一周就是，于是打道回府了。</p><p>回到家后先服了药，打算再躺床上休息会。</p><p>然而真正的噩梦才刚刚开始：下午四五点的时候醒来，发现完全起不来了！</p><p>上半身几乎瘫痪，手一抬起来背就巨疼，一小时内先后数次尝试翻身跪起，结果都以惨叫告终。</p><p>后来打开手机一看，飞机失事了。</p><p>我才真正意识到，原来我们离死亡、瘫痪、意外是如此的近。</p><p>时间一点点消逝，我望着天花板十分绝望，手机电量也开始告急，充电线就在旁边的床前柜上，但因为脖子无法动弹手也无法任意操纵，充电也成了不可能任务。</p><p>那一刻，人生中第一次想喊救护车。</p><p>但为了避免引起小区骚动，我还是打消了这个念头。</p><p>大概两小时后，天色渐渐暗了下来，我尝试着通过胸肌腹肌和大腿直直地坐起来，就仿佛模拟我当时如何躺下去的那样。</p><p>幸运的是，大概一分钟后，我成功了！我坐起来了！这样我就可以给手机充电、点外卖、取快递，我至少可以像个机器人一样慢慢地移动了！</p><p>我们还是要抱着对生的希望的吧，不是吗？比起东航的他们，我已经好太多，我至少还有选择。</p><p>而有些人，别无选择。</p><p>晚上，我听从了好朋友的现身建议，去做了一场按摩，就在楼下的中医按摩店，按摩小哥第一反应就是我受凉了，中途也很仔细地给我按摩左背，全部按完后还让我试试脖子能不能转，并针对性地固定住我胳膊然后砖头又鼓捣了几下，我说实话，还是有效果的，明显比做按摩前舒服多了，起床几乎无压力，就是脖子不能往右转超过15度。</p><p>三天过去后，身体又好了些！觉得确实是积劳成疾+受凉导致的，因此从那天开始计划积极锻炼！</p><p>可以看到，确实跑的很慢，尽管去年骑行过西藏，减重20斤，然而半年过去，现在的身体实际素质还是进一步堪忧了。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/image-20220327151039794.png" alt="image-20220327151039794" class="img_ev3q"></p><p>六天过去后，脖子已经基本能正常转动，直到最大角度时才会感觉到左背肌肉拉扯疼痛，而左背正常情况下也只是隐隐作痛而已了。</p><p>随着东航事件最终的收官定论，我觉得也是时候到了一个可以总结的时间点，我们要真地开始认真对待自己的身体、生活与工作了。</p><p>毕竟，你真地不知道明天与意外谁先到。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/13.44.46.png" alt="Screen Shot 2022-03-18 at 13.44.46" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/13.44.50.png" alt="Screen Shot 2022-03-18 at 13.44.50" class="img_ev3q"></p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/AlwaysLikeThis.jpeg" alt="AlwaysLikeThis" class="img_ev3q"></p><p>愿逝者安息，愿生者坚强。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/image-20220327151705196.png" alt="image-20220327151705196" class="img_ev3q"></p><p>愿你我始终能迎风奔跑，向阳而生。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.13.png" alt="Screen Shot 2022-03-17 at 16.52.13" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.17.png" alt="Screen Shot 2022-03-17 at 16.52.17" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.19.png" alt="Screen Shot 2022-03-17 at 16.52.19" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.22.png" alt="Screen Shot 2022-03-17 at 16.52.22" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.25.png" alt="Screen Shot 2022-03-17 at 16.52.25" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.29.png" alt="Screen Shot 2022-03-17 at 16.52.29" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.31.png" alt="Screen Shot 2022-03-17 at 16.52.31" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.33.png" alt="Screen Shot 2022-03-17 at 16.52.33" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.36.png" alt="Screen Shot 2022-03-17 at 16.52.36" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/16.52.39.png" alt="Screen Shot 2022-03-17 at 16.52.39" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/14.21.19.png" alt="Screen Shot 2022-03-18 at 14.21.19" class="img_ev3q">
<img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_our-lives-1648367989625-73b343bb9fcc4dfa3af82f109848af3d16e37733e4c73427d232a34fc899f550.png" alt="picture 57" class="img_ev3q"></p>]]></content:encoded>
            <category>札记</category>
            <category>养身</category>
        </item>
        <item>
            <title><![CDATA[编程 | 北京租房系统设计、研究与经验 0.1.0]]></title>
            <link>https://markshawn2020.github.io/blog/2022/03/09/archive/dev-douban-renting</link>
            <guid>/2022/03/09/archive/dev-douban-renting</guid>
            <pubDate>Wed, 09 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[通过一天使用程序化手段获取两万多套房源转租信息，继而再通过程序化粗筛成两百多套，紧接着人工细筛出十几套，最后两天内实地考察九套。]]></description>
            <content:encoded><![CDATA[<blockquote><p>通过一天使用程序化手段获取两万多套房源转租信息，继而再通过程序化粗筛成两百多套，紧接着人工细筛出十几套，最后两天内实地考察九套。</p><p>在北京快速的、低成本的找房，我是如何做到的，我又有什么经验心得与启示，这是本文所要阐述的。</p></blockquote><ol><li>个人背景概要</li><li>租房方案设计<ol><li>个人需求分析</li><li>公寓 vs 民宅</li><li>线上 vs 线下<ol><li>纯线下方案</li><li>纯线上方案</li><li>线上转线下方案</li></ol></li><li>线上平台选择</li><li>总体设计</li></ol></li><li>租房前期准备<ol><li>了解行政区域规划</li><li>了解地铁线路规划</li><li>了解周遭小区分布</li><li>小区的选择依据</li></ol></li><li>豆瓣小组租房条目的数据获取<ol><li>豆瓣小组租房信息获取的目标设计</li><li>豆瓣小组API方案之分析与准备</li><li>豆瓣小组API方案之设计与实现</li><li>豆瓣小组爬虫方案之设计与实现</li></ol></li><li>豆瓣小组租房条目的数据分析<ol><li>筛选条件分析</li><li>高德API之申请Key配置</li><li>高德API调用之地理编码与逆地理编码</li><li>高德API调用之公线路规划与步行规划</li><li>高德API封装设计与实现</li><li>基于pandas进行筛选</li></ol></li><li>人工筛选环节<ol><li>表格迭代标注法</li><li>线上联系也有一些困难</li></ol></li><li>线下跑房环节<ol><li>时间与路线规划</li><li>跑房（1/10）: 望京附近，3000</li><li>跑房（2/10）：3-3<em>1</em>陆翔佳园_3200</li><li>跑房（3/10）：3-3<em>2</em>珠江绿洲_3800</li><li>跑房（4/10）：3-3<em>3</em>周井大院_2900</li><li>跑房（5/10）：3-3<em>4</em>珠江帝景_3500</li><li>跑房（6/10）：3-4<em>1</em>劲松七区_3000</li><li>跑房（7/10）：3-4<em>2</em>惠生园_3300</li><li>跑房（8/10）：3-4<em>3</em>沿海赛洛城_2200</li><li>跑房（9/10）：3-4<em>4</em>百子湾家园_2500</li><li>跑房（10/10）：3-4<em>5</em>垂杨柳百里_3500</li></ol></li><li>投票环节</li><li>info<ol><li>version: 0.1.0</li><li>version: 0.0.4</li><li>version: 0.0.3</li><li>version: 0.0.2</li><li>version: 0.0.1</li></ol></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="个人背景概要">个人背景概要<a class="hash-link" href="#个人背景概要" title="标题的直接链接">​</a></h2><p>大学实习基本都是在上海，租过远到嘉定每天来回四小时的自如、租过虹口差点要不回钱的蛋壳，租过和别人同睡一张床第二天赶紧溜走连押金都不想要的复旦老破小，租过闵大荒开始闹到威胁后续被窗外幼儿园治愈的公寓式开间，也为把项目做好租过浦东近万的酒店。</p><p>所以租房，尤其是在一线租房，确实是个头疼的问题。</p><p>现在，作为一名北漂狗，是时候认真研究一下了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="租房方案设计">租房方案设计<a class="hash-link" href="#租房方案设计" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="个人需求分析">个人需求分析<a class="hash-link" href="#个人需求分析" title="标题的直接链接">​</a></h3><p>在每个人讨论租房这个问题之前，第一个就是个人需求的剖析。</p><p>就我接触下来，99%的人对价格还是相对敏感的，在此基础之上， 有些人更重视通勤时间（比如我），有些人更重视独卫的便利性（比如某互联网男生），有些人更重视卫生条件（某金融业女生）。</p><p>而预算方面也会因为因人而异，有预算2000的，3000的，4000的，甚至6000的，等等。</p><p>因此从需求、预算角度，每个人所适合的策略就不太一样。</p><p><strong>本文主要介绍的是汇总租房帖然后逐步筛选的方案，理论上适合一切找房群体，同时更适合希望较低成本找房的朋友</strong>。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="公寓-vs-民宅">公寓 vs 民宅<a class="hash-link" href="#公寓-vs-民宅" title="标题的直接链接">​</a></h3><p>我过往的经历，应该来说，住公寓与酒店比较多，现在的年轻人应该大多都是这样。</p><p>公寓也并非不好，尤其是身边同学或者朋友一起住青年公寓那种，就特有氛围。</p><p>但如果是长租，以下问题就不能忽视：</p><ol><li>首先是价格方面，同面积情况下，公寓普遍租金更高，另外商水商电大概是民水民电费用的三倍左右，比如夏天可能开着空调，民水民电的民宅花150，但公寓就可能是450，当然这个估算可能不准确，也因人而异</li><li>公寓由于自建等原因，隔音效果普遍不是很好，如果喜欢安静的一定要注意这一点</li><li>公寓往往缺少家的感觉</li></ol><p>如果你能容忍或者确认以上几点，那就很适合选住公寓，因为公寓的配套设施一般更完善，比如自习室、健身房、大厅，甚至食堂等等。</p><p>总之，考虑到我的个人经历与接下来的规划，我就没有考虑公寓了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="线上-vs-线下">线上 vs 线下<a class="hash-link" href="#线上-vs-线下" title="标题的直接链接">​</a></h3><p>租房大致分纯线上、线上转线下与纯线下三种方式。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="纯线下方案">纯线下方案<a class="hash-link" href="#纯线下方案" title="标题的直接链接">​</a></h4><p>首先讲一下纯线下，如果你是经济非常紧张、对居住环境不是很重视，同时社交能力较强（或长的比较友好），希望以最低成本租房的，根据一些文章指出，你可以线下走街串巷，多和低收入人群（保安、清洁工等等）聊一聊，他们通常能给你非常具有性价比的推荐。</p><p>我虽然没有通过这种方式找房，但我确实曾经在拉萨坐人力拉车时和车夫聊过，他就住在大昭寺附近，一个月印象中好像是300（也有可能是600）的房子，总之，是很低了，即使我们住青旅，也要三四十一天，一个月下来也是近千的。</p><p>其实吧，我觉得纯线下的最主要条件，还是你要能来事，理论上不单单是光和低收入人群聊，你有能耐的话，也可以和包租婆聊，说不定更能找到非常具有吸引力的房源，对不~</p><p>但对于北漂狗来说，纯线下方案并不是那么容易操作。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="纯线上方案">纯线上方案<a class="hash-link" href="#纯线上方案" title="标题的直接链接">​</a></h4><p>接着是纯线上方案，这个方案，应该是很多学生党比较喜欢的方式，照片视频一看，或者根据平台品牌，一下就入了。</p><p>我便是这么走过来的。我甚至是线上看好后，直接拖着箱子再去看房的，这绝对是大忌！</p><p>当然这也不是不行，比如嫌麻烦与不缺钱，就可以无脑 all in 自如（公寓相关的分析接下来章节会说），至少能保证下限。</p><p>但如果你想选民宅的话，纯线上的最大挑战，是要有足够的鉴别能力。比如某中介在朋友圈发了某套房的房源信息，一般是位置加文字加图片，你需要第一时间能够识别出信息的真实度如何，另外，同步查询这个小区的相关信息：小区建成于什么年代、附近的设施情况如何等等。</p><p>而在你未曾亲自线下跑楼之前，你其实对这些都没什么太大概念，比如什么是筒子楼、什么叫隔断、什么是团结户等等。</p><p>不过一旦你对这些概念逐步熟悉之后，看房，尤其是看中介与平台的线上房源，心中就会相对有数了，也就是说，至少不太容易出现预期差太多的情况了。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="线上转线下方案">线上转线下方案<a class="hash-link" href="#线上转线下方案" title="标题的直接链接">​</a></h4><p>相对来说，先在线上看够足够多的房源，再精挑几个去线下调研，应该是最好的。</p><p>这里，有两点，第一点就是尽量以正常通勤工具去看房，你不能因为远或者啥的去打车看房，毕竟你是来租房通勤用的，你必须还原你的真实使用场景去体会这是不是你想要的，所以从我的感受来看，离地铁超过1公里的房我就不会要了，走路实在需要太久。</p><p>第二点，就是怎么说呢，并不需要刻意排斥中介。</p><p>是，中介这个职业，总让人爱恨交加，尤其是碰到就为了多坑点你钱的，我也碰到过，并且不少。但别人也确实给你提供了一定帮助，或者说，insight。</p><p>你得明白整个租房市场是怎么回事，在一线城市，绝大多数租房都是相对饱和的，好的、性价比高的房子确实很抢手，比如在国贸上班的金融白领们租房一般就是围绕这一块，相应的就会有中介专门负责这几块小区的生意，一旦有一个房间空出来就会立马挂出来，然后数个中介就能找到数个客户对该房源感兴趣。</p><p>如果你排斥中介，拒绝接受中介，你怎么能获得这些房源信息？并不是所有人都会在豆瓣、咸鱼发帖转租什么的，所以中介仍旧是找房的一个重要途径，关键是看你怎么用。</p><p>我的看法是，不要只follow一个中介，你可以多加几个中介，综合他们的insight，最终逐渐形成你的租房目标。但所谓的多加，也不是随便加，一定是你目标区域内的中介才是有效的，因此如何加到你目标区域内尽可能多的中介，依旧需要我们后续所用到的技术。</p><p>再总结一下，不需要排斥中介，但也不要随意加中介，如果碰到目标区域内的中介，不妨加了多和他们聊聊，可以更快地帮你熟悉目标区域。最重要的是，不要拖着箱子，然后坦诚地、大方地线下去走走，实地看看。说不定想去看的某套是不符合期望的，但其他套却很吸引你，这也是可能的。</p><p>当然，中介有风险，后面也会讲一些中介的平常套路。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="线上平台选择">线上平台选择<a class="hash-link" href="#线上平台选择" title="标题的直接链接">​</a></h3><p>现在其实有很多租房的平台，比如微信、豆瓣小组、咸鱼、小红书、贝壳找房、链家、58、安居客、自如、泊寓等等。</p><p>其中，个人房源主要集中在微信、豆瓣小组、咸鱼、58等平台上，贝壳找房我试了试房源基本对接的自如的。这其中，58和安居客据说假房源特别多，所以也未在我选择之列。咸鱼和小红书是我后来才知道的，但不在本次找房所使用工具之类。</p><p>本次找房主要使用的是微信和豆瓣小组，其实主要是豆瓣小组，微信的租房群也是通过豆瓣才找到的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="总体设计">总体设计<a class="hash-link" href="#总体设计" title="标题的直接链接">​</a></h3><div class="language-mermaid codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-mermaid codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">flowchart TB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">subgraph day1[Day 1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">direction TB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    subgraph platforms[租房平台]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        douban[豆瓣小组-北京租房]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --&gt; wechat[微信群聊-北京租房]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    douban</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 爬虫 --&gt; input[2w+近期租房条目数据]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    wechat -- 表格 --&gt; input</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    input -- 清洗 --&gt; washed[100+符合基本条件的租房条目数据]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 一一标记确认 --&gt; marked[10+候选租房目标]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">subgraph day2[Day 2-3]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    marked</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 微信逐个联系 --&gt; connected[&lt;10个线下考察目标]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 线下考察 --&gt; favorite[1-3个最终候选]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -- 抉择 --&gt; final[1个最终目标]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="租房前期准备">租房前期准备<a class="hash-link" href="#租房前期准备" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="了解行政区域规划">了解行政区域规划<a class="hash-link" href="#了解行政区域规划" title="标题的直接链接">​</a></h3><p>访问 <a href="https://www.zhihu.com/question/26731387" target="_blank" rel="noopener noreferrer">有没有一种电子地图，可显示详细的行政区域边界 ？ - 知乎</a> 可以很方便地查看行政区域规划地图，例如北京的：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646042680293-b001d7afd4943a6e57041a22a615e5db3bba163a70866a5c2b8e22154ce68c91.png" alt="picture 1" class="img_ev3q">  </p><p>我也是第一次看行政区域地图，一一审查他们的区号发现还挺有规律，核心第一圈东西城区01和02，接着第二圈从朝阳开始顺时针——朝阳（05）、丰台（06）、石景山（07）、海淀（08），接着第三圈从房山开始逆时针——房山（11）、通州（12）、顺义（13）、昌平（14），最后第四圈有点杂乱但整体依旧是逆时针：大兴（15）、怀柔（16）、平谷（17）、密云（18）、延庆（19）。</p><p>了解行政区划的目的，主要是分清自己大概会租什么位置的房子，因为现在大多数租房软件都会提供基于行政区划与地铁等多种筛选方式，也许地铁比行政区域更重要一些，但提前了解一下行政区域也会有一个比较重要的区位概念。</p><p>至少，我了解下来，断定，我大概会在朝阳与丰台这两个区之间做选择，这是比较重要的信息。也就是说，后续看到转租帖，不是这两个区的基本都可以pass了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="了解地铁线路规划">了解地铁线路规划<a class="hash-link" href="#了解地铁线路规划" title="标题的直接链接">​</a></h3><p>从我的角度，行政区域对自己的实际参考意义并不大，作为北漂狗，最重要的依据还是地铁，谁能把握住地铁的脉络，谁就能把握住性价比的尾巴。</p><p>所以首先找一张地铁线路图，这个随便一搜就能找到，比如这是百度地图里的北京地铁图：<a href="https://map.baidu.com/@12964228,4821466,13z" target="_blank" rel="noopener noreferrer">北京市地铁图 - 百度地图</a></p><p>由于公司在四惠南边，所以我从四惠站出发，沿各个方向延伸七站左右，其中遇到换乘加算一站。（七站大概是半小时）</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646439758370-c9709e7459acccd134efbdcd75ae097f557ce607223c072ea906e13f7d56c31c.png" alt="picture 1" class="img_ev3q">  </p><p>如此来看，其实我的可选范围还是挺多的，整个北京东南方向的一大块都包括了。</p><p>但为了控制成本，我特意标记了地铁外环的几个拐角，直觉上这里价格会略低些：</p><ol><li>百子湾，位于7号线拐角，同时也是离公司最近的侯选处，可以步行上班</li><li>北工大西门，位于14号线拐角，这里的最大优势是可以直达望京</li><li>分钟寺与成寿寺，位于10号线上，这两个地方是某北漂朋友推荐的地儿，确实便宜</li><li>青年路，6号线，正好在环外，旁边就是朝阳公园</li><li>通州北苑，低处通州区，价格更低，旁边还有万达广场</li></ol><p>这几个锚定的区域都需要重点观察。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="了解周遭小区分布">了解周遭小区分布<a class="hash-link" href="#了解周遭小区分布" title="标题的直接链接">​</a></h3><p>我们可以在 <a href="https://map.lianjia.com/map/110000/ESF" target="_blank" rel="noopener noreferrer">北京地图找房<em>北京小区地图</em>北京房产地图(北京链家)</a> 简单看到大部分小区的分布情况，例如定位到我司附近的百子湾小区：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646616950694-d0638ca5546f123f967191de4f05b4dc2150e859c4a739c13f751e8bc4c05ec5.png" alt="picture 2" class="img_ev3q">  </p><p>再点击一次可以看到具体到每个小区的情况，下面部分有一大块的空白看样子是商区（不确定）。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646616997536-91182e25417bd9bb8aedf65b1a78970868219ee4c5d7b84c93ed4469bbbaabb6.png" alt="picture 3" class="img_ev3q">  </p><p>由于我司位于源创空间大厦，离周围的地铁都比较远，步行距离接近2公里（通勤时间可以以步行的10分钟/公里计算），因此光是从最近的地铁站步行到公司都要花20分钟，所以在租房时要考虑这个问题。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646620679319-1651e3b2677652a26cd35557358018cb66cf2487a19d110410f4f89fb0ba5b3c.png" alt="picture 5" class="img_ev3q">  </p><p>具体地说，如果我的通勤时间要控制在半小时以内，那么大概率远距离的长地铁方案就要GG了。（长地铁方案：选择离公司较远、离地铁较近、具有较高性价比租房的方案）比如以我司以及周围的三/四个地铁站为中心，附近有数个小区（高德地图，链家看起来太费劲了，且不全）：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646623707128-38cbad4291bfbf319eb81efa360e5cfb2d716cb4d1fd4bd8187a44dab56d3a12.png" alt="picture 6" class="img_ev3q">  </p><p>这些小区中，最优先考虑的应该是在四惠东、四惠、大郊亭、百子湾（逆时针）这几个地铁站之间的小区：金海国际、金都杭城、沿海赛洛城和百子湾家园。其中金海国际可能地铁位置最优（仅次于九龙山附近的珠江帝景）但最贵（二手房价格6w+），沿海赛洛城性价比最高（离地铁次近，二手房价格4w+），金都杭城与百子湾家园离地铁更远。</p><p>其次就是四惠河北部的惠民园、东恒时代、十里堡等。</p><p>最后是其他地区，例如大郊亭左边的后现代城、百子湾下面的光华新城、百子湾右边的燕宝保湾家园、四惠东右下角的西店村等。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="小区的选择依据">小区的选择依据<a class="hash-link" href="#小区的选择依据" title="标题的直接链接">​</a></h3><p>个人认为，无论预算是否充沛，最终是否直接选择离公司最近的小区，适当地过一遍周遭小区还是比较重要的，因为你选择这里的概率会比较大。</p><p>但并非必须选项，因为我们往往会考虑地铁沿线更远的区域，尤其是在我们把通勤时间放宽到一小时、公司本身离地铁也很近、最后一公里选择骑车而非步行等前提下。</p><p>但这样，我们就需要看<a href="#%E4%BA%86%E8%A7%A3%E5%9C%B0%E9%93%81%E7%BA%BF%E8%B7%AF%E8%A7%84%E5%88%92">了解地铁线路规划</a>中所圈点的更多地铁站旁边的更多小区，工作量指数级上升。</p><p>因此，关于其他小区的通勤距离这部分，我倾向于通过程序计算，找到后再单独看~</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="豆瓣小组租房条目的数据获取">豆瓣小组租房条目的数据获取<a class="hash-link" href="#豆瓣小组租房条目的数据获取" title="标题的直接链接">​</a></h2><p>基于我们在<a href="#%E5%B9%B3%E5%8F%B0%E9%80%89%E6%8B%A9">平台选择</a>中的分析，豆瓣小组是本文的重点考察对象（后续可能会考虑再加入闲鱼，据说个人房源信息也不错）。</p><p>另外，至少有两种获取豆瓣小组租房信息的方式，一种是基于网络流传的API，一种是基于我们自己的爬虫。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="豆瓣小组租房信息获取的目标设计">豆瓣小组租房信息获取的目标设计<a class="hash-link" href="#豆瓣小组租房信息获取的目标设计" title="标题的直接链接">​</a></h3><ol><li>支持搜索小组名以获得所有相关的小组<ol><li>例如：“北京租房”</li><li>豆瓣支持小组名字相同，所以其实会有很多个同名小组</li><li>为了信息的完整性，我们最好捕捉所有符合要求的小组，然后一一进行处理</li></ol></li><li>支持基于小组名（实际是id）获得该小组下的所有话题</li><li>基于话题的标题，进行地名提取与位置确认，进行转租筛选</li><li>支持基于话题再获得话题下的图片与文字<ol><li>如果有了图片，是很方便可以做一些可视化网站的，势必会比较方便</li><li>另外也可以做筛选，你说对方要把房子租出去，结果图都不晒一张，这合适吗，这不合适，这能要吗，这肯定不能要</li><li>尽管势必会有大量照骗党，杀猪磨盘，但是也不能因为这个而畏惧呢</li></ol></li><li>其他</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="豆瓣小组api方案之分析与准备">豆瓣小组API方案之分析与准备<a class="hash-link" href="#豆瓣小组api方案之分析与准备" title="标题的直接链接">​</a></h3><p>之前就听说国内电影体系都是靠豆瓣的api，因此首先就是先谷歌一下“豆瓣api”，结果发现果然有 <a href="https://www.doubanapi.com/" target="_blank" rel="noopener noreferrer">豆瓣 Api V2（测试版） | doubanapi</a>，注意这两个 api_key，我一开始表示怀疑，后来发现竟然真能用……</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">0df993c66c0c636e29ecbb5344252a4a </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0b2bdeda43b5688921839c8ecb20399b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646069015501-f3babe3e1f58f4114ac50bf658a3da52d79e200b28b72ced5c3076d1fe45edd5.png" alt="picture 6" class="img_ev3q">  </p><p>但这个网页其实没有提供豆瓣小组的api，于是我们继续搜索豆瓣小组是否有api的信息 <a href="https://www.zhihu.com/question/19889922" target="_blank" rel="noopener noreferrer">豆瓣小组是否提供API？ - 知乎</a>：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646069095482-cd7bde3bddd77cf5f4c62e6e81840d8fb51af0ffafb4d482264517946f766c0d.png" alt="picture 8" class="img_ev3q">  </p><p>有几个有趣的回答，第一个给出了api地址与形式，并且附送了一个链接：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646069147214-a4f1aa82861ed7aaecfc5ab9288b7fecb49b93b375fc6f684769dd5983c4b856.png" alt="picture 9" class="img_ev3q">  </p><p>不过这个所谓的”出处“链接到很有意思，是2012年的，最关键的是，打开后一闪而过，倒也没那么快，大概一秒钟之后跳转到了新的页面，看最后一个网址就知道，是被重定位了。</p><p>刚刚是手快，截了一下，但是光截图看不到后面的内容，而想中途拉动又不可能。</p><p>这个时候，抓包神器的作用就体现了，所有网页加载都有记录，直接把html文件导出，再在本地打开，就发现全出来了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646069414627-ac205b0b2a3e63c2d70881af9db7713beaf7a6acbc183a13ff3bfc6e73b575d3.png" alt="picture 13" class="img_ev3q">  </p><p>最有意思的是，这个帖子似乎是有两个“小黑客”在尝试破译豆瓣的接口，好吧，也就是我正在做的事了。</p><p>读下来饶有味道：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646069515981-f924e7f446421c41878794949b567c207dab0d410a2e8f57dc20317bc26ca0e0.png" alt="picture 14" class="img_ev3q">  </p><p>不过他们所描述的获取access_token的形式，我也不清楚豆瓣是怎么想的，可能他们同时有两套接口吧，一套oauth2，一套api_key。总之，我们目前应该是不需要access_token的，直接用api_key就可以，并且是固定的。</p><p>比如按照上面的截图，获取豆瓣小组里话题列表的api是<code>https://api.douban.com/v2/group/${GROUP_NAME}/topics</code>，例如：<code>https://api.douban.com/v2/group/husttgeek/topics</code>，这个时候如果我们在浏览器中直接打开这个网址，会遇到缺少api_key的警告：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646069782706-7895041f12fbe4b18f9ee659be5f9a4fe6ae923807f0c070d73c32550a3abf33.png" alt="picture 15" class="img_ev3q">  </p><p>这不，我们一开始搜的豆瓣api就有用了吗，把那个api，比如<code>0df993c66c0c636e29ecbb5344252a4a</code>复制过来，拼接到网址上去，重新访问，结果就有了：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646069859534-e798528b3ca706fde7d6b4c1e0736d259c35d77969cd40a7810b6bdee936a845.png" alt="picture 16" class="img_ev3q">  </p><p>得来全不费工夫！</p><p>至此，其实我们的思路已经大致确定了，不过那个知乎帖子下面还有两个git项目，其中一个是监控小组的，倒是确有一点意义，可供闲暇参考，分别罗列如下：</p><ul><li><a href="https://github.com/yaodi833/rental_house_douban" target="_blank" rel="noopener noreferrer">yaodi833/rental_house_douban: 本项目基于（非公开）豆瓣api，实时监控多个豆瓣租房小组发布租房信息，并支持小组订制，关键词订制，邮件推送等功能</a></li><li><a href="https://gist.github.com/iamsk/1bc0760dfeeeb950f18e" target="_blank" rel="noopener noreferrer">doubangroupapi</a></li></ul><p>基于以上分析，可见，豆瓣的api还是比较稳定可用的，否则该失效早失效了。</p><p>不过有些东西还差一点。其中，我们目前只知道第二点（罗列话题）与第四点（获取话题内容）应该是有了现成的api，而第一点（搜索小组）则没有，需要我们自己破解。另外第三点是我们后续的算法部分，与豆瓣api无关，故暂且可以先不谈。</p><blockquote><p>豆瓣小组API方案之如何获取搜索小组的API</p></blockquote><p>按照直觉，我们可以通过对比正常访问的网页地址与已经明确了的api之间的关系，得到 $f(x) = y$，然后再把这个 $f$ 作用到正常搜索网页的网址上去。</p><p>我们先试试。</p><p>但是很快我发现搜索接口是比较独立的，是一个集中式的接口，和那些分别对应的不太一样。</p><p>紧接着我又意识到，其实这么多小组，取前几个就已经比较够了。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646074421380-f0780837200fe37fca1e9afb372a7bca1320e805c7dd6730ccd6eed4add691a0.png" alt="picture 17" class="img_ev3q">  </p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function getGroups() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    curl https://www.douban.com/search\?q\=$1 2&gt; /dev/null \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | grep -E "小组.*&lt;a href" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | gsed -E "s/.*group%2F(.*?)%2F.*/\1/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这样我们就得到了豆瓣小组的前几个小组的id，例如：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646074500899-e2a15145ced09f9749a69989d26e2156bf8958d2d5f78adbdd550f752fd5cc08.png" alt="picture 18" class="img_ev3q">  </p><p>这样，我们的第一步就也痛了，于是乎，第一步获取小组id列表，第二步获取小组内的主题，第四步获取小组主题内容，这几步都没有技术上的问题了，接下来就是写程序，以及加上第三步算法部分。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="豆瓣小组api方案之设计与实现">豆瓣小组API方案之设计与实现<a class="hash-link" href="#豆瓣小组api方案之设计与实现" title="标题的直接链接">​</a></h3><p>可以直接访问 <code>https://api.douban.com/v2/group/beijingzufang/topics?apikey=0df993c66c0c636e29ecbb5344252a4a</code> 获取demo结果：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646644258095-3634cb35cb1b70e95cb77450a2e48ea9636d06dbcf5789fdb02cdbe5c19567fc.png" alt="picture 2" class="img_ev3q">  </p><p>基于这个返回结果，可设计数据结构如下：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Author</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TypedDict</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    is_suicide</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    avatar</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># url</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    uid</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    alt</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># url</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># UserType</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    large_avatar</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># url</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Dimension</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TypedDict</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    width</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    height</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Photo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TypedDict</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    size</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Dimension</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    alt</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># url</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    layout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    topic_id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    seq_id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    author_id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    title</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    creation_date</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># datetime</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">DoubanApiTopic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TypedDict</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    is_private</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    locked</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    liked</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    like_count</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    comment_count</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    created</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># datetime</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    updated</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># datetime</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    title</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    alt</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># url</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    share_url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># url</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    screenshot_title</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    screenshot_url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># url</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    screenshot_type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    content</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    author</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Author</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    photos</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> List</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Photo</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">DoubanApiTopicResultSuccess</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TypedDict</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    请求成功时的结构体</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    count</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 0 - 100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    start</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># default: 0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    total</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    topics</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> List</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">DoubanApiTopic</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">DoubanApiTopicResultFailure</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TypedDict</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    当请求失败时，就会返回这个结构体</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msg</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># "access_error"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    code</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 403</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    request</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    localized_message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>有了apikey可以直接调用api，获取json结果，然后解析，因此本过程省略，以下主要记录一下核心续爬代码：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">start </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_get_topics_of_group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">group</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> start</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> limit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"code"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">403</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        finished_reason </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f"此请求已触及该apikey&lt;</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">self</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">_apikey</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">&gt;限制"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> item </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"topics"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">yield</span><span class="token plain"> DoubanApiTopic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">**</span><span class="token plain">item</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    start </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> limit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"start"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"count"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"total"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        finished_reason </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"不容易，所有数据已全部提取完毕"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"finished, reason: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> finished_reason</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="豆瓣小组爬虫方案之设计与实现">豆瓣小组爬虫方案之设计与实现<a class="hash-link" href="#豆瓣小组爬虫方案之设计与实现" title="标题的直接链接">​</a></h3><p>豆瓣的前端页面并不复杂，就是一个传统的table结构，按序解析即可。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646637351707-b2675d6892f4102387b6588f435516597ca8711072a5e22543218683452c6c05.png" alt="picture 1" class="img_ev3q">  </p><p>豆瓣小组的特定小组内条目的字段主要有：<code>讨论 | 作者 | 回应 | 最后回应</code>四个基本字段，相应的在程序设计中我编码成了六个字段：<code>post_title | post_url | author_name | author_url | response_count | response_latest_time</code>。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646635247259-62e1f827aaf997bd418f03538e9fe955b1fd5f371ab15ccbe1e47eeb05999b8e.png" alt="picture 7" class="img_ev3q">  </p><p>有一个问题，是关于多个小组的，由于豆瓣小组针对某一话题会有多个不同的小组，甚至名字相同（但id唯一），这就导致需要我们对每个小组分别进行数据提取。有一种办法可以避免这样，那就是集中采集 <a href="https://www.douban.com/group/" target="_blank" rel="noopener noreferrer">我的小组讨论</a>页面。</p><p>比如，我所有的小组都是关于租房的，一共有三个小组：<code>北京租房 | 北京无中介租房 | 北京租房房东联盟（中介勿扰）</code>，因此这个页面就是这些小组里所有最新的帖子情况。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646635533016-b6ae0771f901dd12faed61e6d68875d1deb95c60645d5ccc84f7dda033394837.png" alt="picture 8" class="img_ev3q">  </p><p>但这种办法的缺点有二，一个是你要主动过滤非租房相关的小组，另一个就是不支持提供发帖者相关的信息，这在筛选上，缺失了一个比较有用的维度（不过其实我并没有使用这个维度）。  </p><p>于是，基于特定小组的话题列表的字段设计如下：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Topic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TypedDict</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response_latest_time</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> datetime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    post_title</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    post_url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    author_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    author_url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response_count</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">TopicColumns </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"response_latest_time"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"post_title"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"post_url"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"author_name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"author_url"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"response_count"</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>直接使用python的爬虫基操（<code>requests + beautifulsoup4</code>）即可，核心解析代码如下：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rows </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> soup</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"#content .article tr"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> row </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> rows</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    post_title </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> row</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select_one</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"td:nth-of-type(1) a"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"title"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    post_url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> row</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select_one</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"td:nth-of-type(1) a"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"href"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    author_url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> row</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select_one</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"td:nth-of-type(2) a"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"href"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    author_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> row</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select_one</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"td:nth-of-type(2) a"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">text</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response_count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">row</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select_one</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"td:nth-of-type(3)"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">text </span><span class="token keyword" style="color:#00009f">or</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    datetime_str </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> row</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select_one</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"td:nth-of-type(4)"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">text</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">match</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"20"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> datetime_str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># test if it's year of 20XX</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        datetime_str </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f"</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">datetime</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">now</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">(</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">)</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">.</span><span class="token string-interpolation interpolation">year</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">datetime_str</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response_latest_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> datetime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">strptime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">datetime_str</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"%Y-%m-%d %H:%M"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">yield</span><span class="token plain"> Topic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">post_title</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">post_title</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> post_url</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">post_url</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> author_url</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">author_url</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                author_name</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">author_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> response_count</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">response_count</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                response_latest_time</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">response_latest_time</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="豆瓣小组租房条目的数据分析">豆瓣小组租房条目的数据分析<a class="hash-link" href="#豆瓣小组租房条目的数据分析" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="筛选条件分析">筛选条件分析<a class="hash-link" href="#筛选条件分析" title="标题的直接链接">​</a></h3><p>在获取到豆瓣租房的目标条目之后，第一步要做的就是程序化筛选。</p><p>目前使用的可供筛选的组合条件如下：</p><ul><li>（推荐）发布日期在近十日之内（好房子一般都会较快被租出，因此过长还未租出的房子不值得一看，N目前可设置为7或者10，是一个比较合理的值）</li><li>（推荐）如果是男生求租，标题中带“女生”、“限女”等字样的一般不予考虑，并且此类房间不在少数</li><li>（参考）基于一些简单规则提取标题中的价格信息，例如“3000”或者“3千”等，如果匹配上，便使用预设的价格区间进行筛选</li><li>（参考）对评论数进行筛选，评论数一定程度上代表着房源的质量，或发帖者的积极性（有些发帖者会自己给自己顶帖，说明不是中介），因此筛选评论数大于0是非常有意义的，但需要谨慎，因为有很多帖子评论数为0但房源确实是有效的</li><li>（参考）继续下爬发帖者的个人信息，鉴定其豆瓣的活跃度，以筛选出非中介的发帖者，但这个就涉及到二级页面的爬取，是一个比较大的开销，需要平衡是否有必要</li><li>（参考）由于帖子的标题比较个性化，小区名、地铁线路信息、行政区域信息等的曝光度均不同，因此基于正向筛选有可能会误杀一些帖子（例如以标题中存在朝阳二字筛选帖子，就有可能把只写了朝阳内部小区名字的帖子给误过滤掉），与此相比反向筛选比较有效（例如如果标题中出现了大兴二字，一般就肯定不是朝阳区域的房源）</li><li>（推荐）本项目最有意思的一点是做了智能测距筛选，具体做法就是将豆瓣标题信息喂给高德的区位编码api得到经纬度，再结合目标公司经纬度使用高德的线路规划api算出通勤时间，然后再进行筛选，该解决方案应该是目前网络上独一份，实际使用下来，也许有误杀，但很有效。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="高德api之申请key配置">高德API之申请Key配置<a class="hash-link" href="#高德api之申请key配置" title="标题的直接链接">​</a></h3><p>访问 <code>https://console.amap.com/dev/user/permission/authenticate/person</code> 基于支付宝实名认证申请key：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646230621370-8e2266b9ff7e8ae36a3ea31057a1e1ced330b6dec2dd177fc03103ef979b4c41.png" alt="picture 1" class="img_ev3q">  </p><p>很快，认证成功：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646230728166-e6eac393225fbb258d38f3bd15ec765cdc5c21d207d055e3e4b4be8af345347e.png" alt="picture 2" class="img_ev3q">  </p><p>创建一个key:</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646236116312-8c6441396a6cf4bbbb00be0cb9a0bc1b1a6404dd3bea04ea196ccef0ded3888f.png" alt="picture 4" class="img_ev3q">  </p><p>获得key：<code>33e2719dbfXXXXXXXX1b2e6786052</code></p><p>最后再看一下服务配额：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_douban-group-api-1646230812661-489a0477c092e063fb341624a4dcdd16a23746e3b9d336e1bc81564ae095e8db.png" alt="picture 3" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="高德api调用之地理编码与逆地理编码">高德API调用之地理编码与逆地理编码<a class="hash-link" href="#高德api调用之地理编码与逆地理编码" title="标题的直接链接">​</a></h3><p>参考 <a href="https://lbs.amap.com/api/webservice/guide/api/georegeo#geo" target="_blank" rel="noopener noreferrer">地理/逆地理编码-API文档-开发指南-Web服务 API | 高德地图API</a> 可以知道，高德地理编码就是将地址文本转成经纬度。而后续的比如说查询两个点之间的通勤距离都是基于经纬度的，因此地理编码api非常重要。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646663384858-3009c4fcd2cc161deb9d658141155664cf851d0516e307136276acf599deb7b0.png" alt="picture 3" class="img_ev3q">  </p><p>重点参数是 <code>address</code>，即输入的地址。尽管api介绍说是一个结构化地址信息，但实际经过我的测试，一个非结构化的但包含地址的句子也是可以的，高德比较智能，会提取出它认为最有可能的地址，这个非常有用！因为允许我们将豆瓣帖子标题直接喂进地理编码而不需要预先提取出地理信息，这让我原先设想的基于jieba分词并多次调用高德api进行测试的复杂、低效、高耗方案变得不再需要！</p><p>第二个重要参数是<code>city</code>，我们只需要指定为<code>北京</code>，这样便免去了全国搜索，速度更快准确度更高。</p><p>第三个重要参数是<code>batch</code>，这个允许我们在一次api调用里同时返回多个关键字的搜索结果，这或许可以大幅降低我们的api开销，因为高德api有额度限制（但我不确定最终计算时，是以单词算，还是N次算，我暂时没用）</p><hr><p>同样，参考 <a href="https://lbs.amap.com/api/webservice/guide/api/georegeo#regeo" target="_blank" rel="noopener noreferrer">地理/逆地理编码-API文档-开发指南-Web服务 API | 高德地图API</a> 我们可以知道逆地理编码就是从经纬度得到结构化地址。</p><p>但值得注意的是，地理编码与逆地理编码之间的输入输出并不完全互逆，因为输入的地理信息也许是非标准化的地址，但输出的逆地理编码信息一定是高德内部标准化的。</p><p>这个api，可以用，也可以不用。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="高德api调用之公线路规划与步行规划">高德API调用之公线路规划与步行规划<a class="hash-link" href="#高德api调用之公线路规划与步行规划" title="标题的直接链接">​</a></h3><p>在同城通勤线路规划中，我们主要用公交地铁线路规划（长距离），或者步行规划（短距离）。</p><p>参考 <a href="https://lbs.amap.com/api/webservice/guide/api/direction#bus" target="_blank" rel="noopener noreferrer">路径规划-API文档-开发指南-Web服务 API|高德地图API</a> 可以知道公交路径规划的实际含义是<code>transit/integrated</code>，也就是综合了各类公共（火车、公交、地铁）交通方式的通勤方案。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646664403794-18935acd99bfc9137a34d5e208c8f25f12d681b528371e7a58e4b01164ca63f0.png" alt="picture 4" class="img_ev3q">  </p><p>因此，这个api就是我们在手机高德地图里最常用的导航方案之一，基于公交、地铁、步行的灵活规划。其中<code>origin</code>和<code>destination</code>是出发地和目的地的经纬度，这个可以通过我们之前说的地理编码api获得，city依旧和之前的city保持一致即可（比如：北京）。值得注意的是<code>strategy</code>参数，我个人倾向于使用<code>3：最少步行模式</code>，也许也会有人倾向于使用<code>1：最经济模式</code> 或者 <code>0：最快捷模式</code>，这个因人而异。</p><p>而我们最关心的输出则是里面的<code>duration</code>字段，它是我们通勤方案所需要的秒数，我们将基于这个进行地点筛选。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646666336508-39ff1c9464c7afd16b7973b6c4cbc8ae6f2e6fc9a1d63ffa62a2eb2e37a23b2a.png" alt="picture 5" class="img_ev3q">  </p><hr><p>但仅通过公交线路规划是不够的，因为如果出发地和目的地距离很近（例如不超过一站），则会没有结果，此时就需要使用步行规划接口。</p><p>参考 <a href="https://lbs.amap.com/api/webservice/guide/api/direction#walk" target="_blank" rel="noopener noreferrer">路径规划-API文档-开发指南-Web服务 API|高德地图API</a> ，我们只需要输入起始地和目的地的经纬度即可。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646666508845-8a7fae2f2f3c84f2da90243b3897cc1a7a43042a02a7176ad315776659a725c0.png" alt="picture 6" class="img_ev3q">  </p><p>结果里依旧只需要提取<code>duration</code>字段，单位还是秒。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646666555658-15a4764c18044c987c8b7e3b1fcefef6caee19597b5cf68516de5a8034b36a8f.png" alt="picture 7" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="高德api封装设计与实现">高德API封装设计与实现<a class="hash-link" href="#高德api封装设计与实现" title="标题的直接链接">​</a></h3><p>理清我们需要的输入与输出。</p><p>我们通过豆瓣的API或者爬虫可以获得N条租房帖条目，其中包括标题，但是不包括具体地址，我们需要通过标题知道这个帖子是否符合自己的通勤目标。</p><ol><li>将标题直接喂入高德地理编码api，得到经纬度A1</li><li>将经纬度A1与提前算好的目的地（公司）的经纬度A2同时喂进公交路径规划<ol><li>如果公交路径规划有结果，则选取第一条；否则再将A1、A2喂进步行路径规划</li><li>如果步行路径规划有结果，则选第一条；否则报错、丢弃（推荐）或者人工审查</li></ol></li><li>基于算好的通勤时间进行筛选，例如控制在30分钟以内或者60分钟以内，因人而异</li></ol><p>由于每个高德api都需要key，因此可以使用<code>requests.Session</code>直接预先设置好固定的key参数。</p><p>设计如下：</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">KEY </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"XXXXXXXXXXX"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CITY </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"北京"</span><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 地理编码更快</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">STRATEGY </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 步行距离最短方案</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 配置全局字典，减少高德调用</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ADDR_NAME2LOC_DICT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 地理编码全局字典</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DURATION_DICT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic"># 计算两个经纬度之间的距离，统一用"-"拼接成字符串，方便序列化</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 初始化</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Session</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">params</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"key"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> KEY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 调用地理编码api</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_addr_loc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">addr_name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    使用全局字典减少高德api调用</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> addr_name </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> ADDR_NAME2LOC_DICT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'https://restapi.amap.com/v3/geocode/geo'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"city"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> CITY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"address"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> address</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'count'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> count</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic"># 不报错，但是赋值为空</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ADDR_NAME2LOC_DICT</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">addr_name</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">None</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ADDR_NAME2LOC_DICT</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">addr_name</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"geocodes"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"location"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> ADDR_NAME2LOC_DICT</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">addr_name</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 调用步行路径规划api</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_get_walking_duration</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">from_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to_loc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'https://restapi.amap.com/v3/direction/walking'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                   params</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                       </span><span class="token string" style="color:#e3116c">"origin"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> from_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                       </span><span class="token string" style="color:#e3116c">"destination"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> to_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"count"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> count </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 用一个不可能的值表示没有找到任何规划</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">float</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"route"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"paths"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"duration"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># minutes  </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 调用公交路径规划api</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_get_transit_duration</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">from_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to_loc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'https://restapi.amap.com/v3/direction/walking'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        params</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"origin"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> from_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"destination"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> to_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"strategy"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 0：最快捷模式, 1：最经济模式, 2：最少换乘模式, 3：最少步行模式, 5：不乘地铁模式</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"city"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> CITY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"count"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> count </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 如果没有公交路径，就使用步行路径</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> _get_walking_duration</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">from_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to_loc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">float</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"route"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"transits"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"duration"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># minutes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_duration</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">from_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to_loc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    使用全局字典减少高德api调用</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f"</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">from_loc</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">to_loc</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> key </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> DURATION_DICT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        DURATION_DICT</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _get_transit_duration</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">from_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to_loc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> DURATION_DICT</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"__main__"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    测试demo</span><br></span><span class="token-line" style="color:#393A34"><span class="token triple-quoted-string string" style="color:#e3116c">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    from_addr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"天坛公园"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    to_addr   </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"天安门广场"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    from_loc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> get_addr_loc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">from_addr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    to_loc   </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> get_addr_loc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">to_addr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    duration </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> get_duration</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">from_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> to_loc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"from_addr"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> from_addr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"from_loc"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> from_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"to_addr"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> to_addr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"to_loc"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> to_loc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"duration"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> duration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="基于pandas进行筛选">基于pandas进行筛选<a class="hash-link" href="#基于pandas进行筛选" title="标题的直接链接">​</a></h3><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> pandas </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> pd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> gaode </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> get_coords_from_addr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> get_transit_duration_between_coords</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    get_addr_name_from_coords</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TARGET_ADDRESS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token builtin">globals</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">utils </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> dump_dict</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DATA_FROM_DOUBAN_DIR </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"data_from_douban"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FILENAME </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'2022-03-02-zhufang.csv'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filepath </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">DATA_FROM_DOUBAN_DIR</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> FILENAME</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"reading file from: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> filepath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">df </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read_csv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filepath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># convert response_latest_time format into datetime</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">response_latest_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_datetime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">response_latest_time</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># filter datetime</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">df </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">query</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"'2022-02-25' &lt; response_latest_time"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># filter personal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">df </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">post_title</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">lambda</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"女生"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> s </span><span class="token keyword" style="color:#00009f">and</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"个人"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> s </span><span class="token keyword" style="color:#00009f">or</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"直租"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> s </span><span class="token keyword" style="color:#00009f">or</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"转租"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"shape: "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># get coords from title</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"getting coords from title"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">try</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    df</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'addr_coords'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">post_title</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">get_coords_from_addr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">finally</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dump_dict</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># get addr from coords</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"getting addr name from coords"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">try</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    df</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"addr_name"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"addr_coords"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">get_addr_name_from_coords</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">finally</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dump_dict</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># get duration between coords</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"getting distance from coords"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">try</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    df</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"transit_minutes"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"addr_coords"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">lambda</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> get_transit_duration_between_coords</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> get_coords_from_addr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TARGET_ADDRESS</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">finally</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dump_dict</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># filter duration</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"filter duration"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">df </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">query</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"transit_minutes &lt; 60"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># sort</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'sort'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">df </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sort_values</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">by</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"transit_minutes"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ascending</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># dump</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"dump"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">df</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">to_csv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filepath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">".csv"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"_filter.csv"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"utf-8"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">df</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>结果如下，注意右边的三列<code>addr_coords | addr_name | transit_minutes</code>，就是我们基于程序计算出来的通勤相关数据：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646678956572-83aed2a3ecc8f6bb14055492003109ec2080830b354fabf54d76a91ba877bd00.png" alt="picture 8" class="img_ev3q">  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="人工筛选环节">人工筛选环节<a class="hash-link" href="#人工筛选环节" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="表格迭代标注法">表格迭代标注法<a class="hash-link" href="#表格迭代标注法" title="标题的直接链接">​</a></h3><p>我个人初步的预算其实是2000-3000、通勤在一小时内、最好能有个独卫，后续证明这在大北京确实是一个相当困难的目标。</p><p>所以后续为了能有合适的标的，把预算上升到了4000。</p><p>在经过我的程序化简单筛选后（基于明显不符合自己要求的标题、日期，以及基于标题与高德求解的路径耗时），两张1w+的表格均被晒成了不足100个。</p><p>紧接着，我将逐一打开这些链接，进一步确定是否尝试联系或者直接pass，并进行标记：<code>-</code>表示pass，<code>+</code>表示有意愿。</p><p>例如，这是“北京租房”小组的表格经过手动标注后按照choice列降序的结果：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646726767185-88d0b9e7e4790687cbbf2f2a6a9368728ca195d7369b6c77b449d73a57f6ff64.png" alt="picture 9" class="img_ev3q">  </p><p>在处理“北京无中介租房”小组时，觉得单纯的加与减的级别控制还不太够，所以又使用了<code>+ | ++ | +++</code>三种级别，加号越多表示越想要，从而排序。而这些加号前面的<code>-</code>号，则表示后续在线联系或者线下考察后决定拒绝或者放弃。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646726999168-01d44eca006d3e7ca282d70a8cb76a7d681b77b1a9b2a45b4fb97f8e5ca77276.png" alt="picture 10" class="img_ev3q">  </p><p>因此标注、再标注，这是一个循环迭代的过程，最终我们将只会有很少甚至没有符合目标期望的房源。亦或者，我们将选用最后一个被排除的房源。</p><p>这有点像相亲，硬性条件不达标我们一定会pass，可容忍的缺点我们尝试去磨合，宁缺毋滥。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="线上联系也有一些困难">线上联系也有一些困难<a class="hash-link" href="#线上联系也有一些困难" title="标题的直接链接">​</a></h3><p>因为豆瓣其实不是一个主打即时社交的平台，很多朋友只是在这里发个帖子，然后就可能……人都找不到了， 或者好几天才回。</p><p>在我的目标候选房源中，有一个超小的单身独卫房，非常廉价，但却始终联系不上： <a href="https://www.douban.com/group/topic/261047442/?_i=62974230uaXoRO" target="_blank" rel="noopener noreferrer">6号线青年路 次卧转租—无隔断 独立卫生间 独立阳台 6号线青年路 次卧转租—无隔断 独立卫生间 独立阳台</a></p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646727973605-f7e07f6c93ee80ae944c877722d1ce688d18242edf52e4a8597e5311c32f61d9.png" alt="picture 11" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646727993779-1a8c7a3e89a723fe1e013399fe0c42bbbd4053acefa71e1ea17238d236383448.png" alt="picture 12" class="img_ev3q">  </p><p>但也许是很快就租出去了吧？反正，豆瓣私信一直联系不上。</p><p>所以，错过了见识一下目前认知里最小的独卫房的机会。</p><p>其他的基本联系上了，但有些确实比较慢。</p><p>通过线上联系直接被pass的主要分三种吧，发现是中介、限女生、价格过高等。</p><p>也有一些非常热情的朋友（小姐姐居多），聊天、谈房的感觉还是很愉悦的，所以转租确实比冷冰冰的中介体验感要好很多，你更大概率能感觉到真实、安心。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="线下跑房环节">线下跑房环节<a class="hash-link" href="#线下跑房环节" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="时间与路线规划">时间与路线规划<a class="hash-link" href="#时间与路线规划" title="标题的直接链接">​</a></h3><p>再经过一两个小时的手动筛选与一一联系之后，就基本决定了线下跑房的计划。</p><p>基于豆瓣租房的筛选，我两天内一共跑了九套房，其中第一天晚上原定五套实看四套，第二天下午原定四套实看五套。</p><p>当时还挺天真，每两套之间计划只用半小时，结果发现严重不够，最后还鸽了几个……</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646733639926-a1dc3ab4dacead50365079b9c1be3c22ea480862b978ff0d3bee9762b41ee8cb.png" alt="picture 13" class="img_ev3q">  </p><p>第二天吸取教训，把每套房控制在了一小时的间隔：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646733824670-2066610fc106663cd5f2fb5821b0a98df72743c52a53180a1451908df1b9f6c5.png" alt="picture 14" class="img_ev3q">  </p><p>以及路线方面：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646733878429-bb6209a0e6373d216a3fe35736356a6bcbcdb3254c2655273a474e34cff91ac2.png" alt="picture 15" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房110-望京附近3000">跑房（1/10）: 望京附近，3000<a class="hash-link" href="#跑房110-望京附近3000" title="标题的直接链接">​</a></h3><p>第一个房是在望京附近，因为我们甲方爸爸在那，我可能较长一段时间都在那。</p><p>当时也是第一次使用豆瓣租房找房，于是找了一所，是个小姐姐，某天晚上过去看了一下。</p><p>后续觉得还是得以公司为中心比较好，所以之后开始使用程序手段进行豆瓣小组租房信息爬取与筛选。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房2103-31陆翔佳园_3200">跑房（2/10）：3-3<em>1</em>陆翔佳园_3200<a class="hash-link" href="#跑房2103-31陆翔佳园_3200" title="标题的直接链接">​</a></h3><p>三月三号晚上整体的跑房策略，就是一路向东，第一个房是在百子湾附近，是一个中介，谈的是金海国际，初步价格是在3200-3500。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646735935957-362e48d3bd873cdcc856122bbcbc548d0af445ff1da3523964a440eaef02ea83.png" alt="picture 16" class="img_ev3q">  </p><p>我看着房子还算不错，另外也check了地图，是离大郊亭地铁站（这个地铁站位置还行，比百子湾更近中心一点，左边一站就是14号线上的九龙山）最近的一个小区。</p><p>然而，当我到了之后，有两个中介，好像一位是另一位的上级，我跟着另一位坐上了小电驴……路上问我的价位预期和要求……</p><p>我千辛万苦筛选的豆瓣租房，还是从中介的一辆小电驴，开始出发了……</p><p>然而，我们最后还是没有去金海国际，因为如果想要金海国际的独卫，预算至少估计要4000起，我说我最多只愿意开到3500，于是我们到了一个小区：陆翔佳园。</p><p>【视频：3-3<em>1</em>陆翔佳园_3200.mp4】</p><p>这个小区的开价是3500，有独卫，空间也不小，朝南，有飘窗，听说是部委房。我特意还去看了一下其他次卧的公共洗手间，非常狭窄，说实话觉得“他们”真地很不容易。</p><p>中介一直劝说我不用看客厅走廊别人的卫生间什么的，因为我住在主卧，但走廊什么的都很挤很暗，因此觉得还是难以让我满意。</p><p>另外，还有一个把我怵到了的地方，就是独卫里竟然还有个大石墩子。中介说可能是用于坐的，房东的，搬也搬不走。我当时竟然还脑补了maybe是一个小浴桶……但后续却始终想不明白……</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646737156337-a1e512119b3d4cbdcb0abce22e4499e2bba278bb577d3b0e426ff036ec46d50d.png" alt="picture 17" class="img_ev3q">  </p><p>和这个令人想不明白的石墩墩同处一室的还有一个高级马桶，是所有房中最高级的，有点像外滩外企的马桶，emm，也忘记看是啥牌子了……</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房3103-32珠江绿洲_3800">跑房（3/10）：3-3<em>2</em>珠江绿洲_3800<a class="hash-link" href="#跑房3103-32珠江绿洲_3800" title="标题的直接链接">​</a></h3><p>看完第一个陆翔佳园的房子其实已经7点40多了印象中， 于是原定于7点半的慈云寺的房子就肯定早已经被鸽了，事实上，最后即使租完房也没去成，彻彻底底地鸽了……</p><p>因此直接奔赴预定8点钟传媒大学附近珠江绿洲的房源，不过看起来是一路向东， 其实并没有那么简单……饶了一个大圈呢：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646755819160-19479abe2a639272ae78addccc932d891f19bce62b217873cf1dcae7f78c0d60.png" alt="picture 18" class="img_ev3q">  </p><p>珠江绿洲这个房源让我很放心，因为是个人，并且是刚毕业的两个小姐姐，非常热情，早早地在小区门口等待我。交流下来，非常地纯粹、坦诚，而且有趣地是她们竟然也是（准）程序员，一个做前端，一个做数据分析。</p><p>珠江绿洲给我的感觉怎么说呢，房间很大，是主卧，并且有独卫，据小姐姐反馈，原先她们是住三个人的……现在是住两个，并且有两张床……显然，对于我来说，一方面有点多余，另一方面则有点奢侈了。</p><p>【视频：3-3<em>2</em>珠江绿洲_3800.mp4】</p><p>我也开始动摇对独卫的执着，房源未必没有，但独卫的主要适用对象真不是我这种单身狗……而且价格实在太贵了，有3800……是所有我看的房源中最贵的，并且离公司更远，也离市中心更远。</p><p>不过这个小区倒是很繁华，一楼的各种店铺一应俱全，游乐场、小公园的什么的都有，说实话，很宜居。</p><p>由于两位小姐姐其实已经找到了新的合租房，并且不在这里，所以我看完后就一起下楼了，一直亲送我到天桥附近，这份真诚让我很是感动，我也是真地很想接手她们的房源以免刚毕业的她们承受不菲的违约费用。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房4103-33周井大院_2900">跑房（4/10）：3-3<em>3</em>周井大院_2900<a class="hash-link" href="#跑房4103-33周井大院_2900" title="标题的直接链接">​</a></h3><p>从珠江路景出来后，继续往东，奔赴周井大院，下了地铁后还要走大概1.5公里……</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646756354749-459044fa0477642f9d914944bad4ee836f95a78c9819e8aa9a423d0bb9177a56.png" alt="picture 19" class="img_ev3q">  </p><p>这个房是两室一厅一卫，内部空间还是挺大的，小屋也被布置的比较温馨，地面还铺了条毯子。租客是一位在北京工作八年多的小姐姐，做餐饮行业，不知道是原来在大兴现在要去望京还是原来在望京现在要去大兴于是想转租出去。</p><p>【视频：3-3<em>3</em>周井大院_2900.mp4】</p><p>我仔细问了小姐姐平常她的交通工具是什么，毕竟离地铁比较远，她说自己是骑小电驴到地铁的，我便恍然大悟了。</p><p>不过有一说一，对于长租的人来说，离地铁远一点，配个小电驴，确实能显著提升生活体验，拥有近乎最高的性价比。</p><p>不过这个房除了区位较偏、地铁较远、小区较老（没有电梯）外还有个问题，原先帖子里说的是隔壁是有个很nice的小哥哥，现在被告知是一对情侣。除此之外，我觉得还行。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房5103-34珠江帝景_3500">跑房（5/10）：3-3<em>4</em>珠江帝景_3500<a class="hash-link" href="#跑房5103-34珠江帝景_3500" title="标题的直接链接">​</a></h3><p>接下来就是当晚最后一间房了，位于九龙山附近的珠江帝景。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646756511567-fa68bd26a7de703442cb9107f378812e2decbc602e8c25d61ff357e92537cf87.png" alt="picture 20" class="img_ev3q">  </p><p>理论上来说，这个房的地理位置应该是最好的，因为九龙山这里连通14、7号线，到达望京只需50分钟，到达四惠的公司只要3.5公里，比较适合骑车，地铁路线里只有大郊亭到百子湾段是重合的。</p><p>珠江帝景也是中介推荐房，两个人把我领了上去。</p><p>【视频：3-3<em>4</em>珠江帝景_3500.mp4】</p><p>看了一圈下来，空间肯定没有珠江绿洲的大，但其实有的一拼，不过珠江帝景对于我来说，这个阳台的造型与风景更加的有范，比较中我意，但没有独卫则是它的硬伤，否则3500的价格在这个地段、这个小区，那是相当值得。</p><p>但让我感到不是很舒服的两点之一，珠江帝景这个房是转租，在豆瓣帖上写的很清楚不要中介费和服务费，但是在问中介费用时却仍在算，说给个500什么的，我说帖子上不是这么写的，中介立即反应说是嘛，这块晚点确认一下，然后又聊了几句之后我再次确认费用核算时，中介已经没有提中介费相关问题，你细评。</p><p>第二点是关于服务费的，因为正常转租，人比较好的或者急于转的一般都会在帖子里说服务费就让给你了不用你交了，等到期再自己和房东与中介谈，这种就是比较友好的，比如珠江绿洲的两个小姐姐就是这样做的。但这里情况就不一样，是要我继续交接下来几个月服务费的，关键是，租客非常同意这一点，说不要在意那么点钱，他自己交了一年都不讲究。租客是一个tony，也许工资确实比我高？但我觉得我就是很在意这个问题，中介凭什么能收两次服务费，除非，是转给“你”的吧。</p><p>不过说来也巧，过了几天后我刷到了一个动画视频，里面的房型竟然几乎和珠江帝景一样！让我哭笑不得。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646757175331-7eddac638f1b4110912d1a32f334b43e4112505667211f27767cec1670beda00.png" alt="picture 21" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房6103-41劲松七区_3000">跑房（6/10）：3-4<em>1</em>劲松七区_3000<a class="hash-link" href="#跑房6103-41劲松七区_3000" title="标题的直接链接">​</a></h3><p>第二天，吸取昨天的教训，放弃独卫的要求，从而尝试更多高性价比与高质量的房源。</p><p>从中午一点起，第一个房源是位于二环的劲松七区，价格3000。</p><p>当天风超级大，出门时打电话都听不大清的那种。而在劲松七区内还看到一条被拴住的小狗，非常可怜。</p><p>【视频：大风中的小狗】</p><p>这个小区没有电梯，款式较老，有一个小学，感觉像学区房。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646759356077-ee8948e1bb0b902624d92c0d035e876b3ab249324021e64c6019284cc48b8089.png" alt="picture 22" class="img_ev3q">  </p><p>“受命”转租的是一位非常nice的小姐姐，待转租的是她的一位已经结婚准备回去生孩子的室友。另一位室友也是女生，做行政工作。</p><p>房间在六楼，从地铁走过来一点几公里还要再爬六楼着实还是有一点辛苦。</p><p>好在小姐姐很热情，消除了我很多的顾虑，我想的是如果租这个房至少能有一个非常好的室友关系，因为这位室友是做财务的，和我本科专业很有联系。</p><p>【视频：3-4<em>1</em>劲松七区_3000.mp4】</p><p>但最大的问题是，这个房子需要三月底才能搬，这对于我来说，并不太可行，因为这几天为了租房一直在住酒店，我需要尽快搞定租房问题。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房7103-42惠生园_3300">跑房（7/10）：3-4<em>2</em>惠生园_3300<a class="hash-link" href="#跑房7103-42惠生园_3300" title="标题的直接链接">​</a></h3><p>紧接着就是惠生园，我预留了两小时，正好能赶上。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646760068701-a4e3d80f9d7d21ca18d4d1620e0b2a285aa9918a657be930231932b012b94f16.png" alt="picture 23" class="img_ev3q">  </p><p>其实从地图上看，惠生园已经离地铁很近了，但我依旧走了较长时间，所以，一点几公里的步行，可能才是人生常态……</p><p>带我看房的是租户的室友，一位刚辞职可能准备创业的很斯文的男生，房间里还有一台大打印机。租户是位女生，房间很明亮。</p><p>【视频：3-4<em>2</em>惠生园_3300.mp4】</p><p>我能够接受房子价格高于3000，但我不能接受高于3000还没有独卫……另一方面，它似乎离地铁与公司有点远。</p><p>但事实上，这也有可能是出于路线偏差。在来看这个房前因为已经走了很长的路（包括去劲松七区、走错地铁、走到惠生园等），看这个房之后又走了很长的路（2-4公里）到公司附近得了另一套房，所以强化了惠生园走路很远的印象，然而事实上可能并不是，不过惠生园到公司确实不近，并且没法做地铁。</p><p>又查了下地图，好像只要两公里，可能当时走绕了……</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646804776040-338f544c70d3599e48ad4bfd90021c2641f9dde09acca9cad3aa95363b276bce.png" alt="picture 24" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房8103-43沿海赛洛城_2200">跑房（8/10）：3-4<em>3</em>沿海赛洛城_2200<a class="hash-link" href="#跑房8103-43沿海赛洛城_2200" title="标题的直接链接">​</a></h3><p>下一站是沿海赛洛城，就在公司南边1.2公里，是一个中介介绍，只要2200很便宜的房子。</p><p>实际上惠生园到公司与沿海赛洛城到公司距离差不多，两者到地铁距离也差不多，惠生园接近1号线，沿海赛洛城接近7号线（也可以往上去1号线），所以惠生园应该来说地理位置更好一些，但沿海赛洛城去公司不需要经过快速路，相对比较安全。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646804990842-99ab1be20299a833b54627c41b174f1ce625702af781d63bc91fe0b2be2b4f71.png" alt="picture 25" class="img_ev3q">  </p><p>房客是一个看起来很精致、大方的女孩，经问住了两年了，这次是到期搬走而不像其他的转租一样是中途搬走（因此需要重新交中介费与服务费等）。</p><p>【视频：3-4<em>3</em>沿海赛洛城_2200.mp4】</p><p>也许是受这女孩感染，查看了她的房后，觉得这个房间虽小，却也能够容纳很多人的生活与梦想，有种很温馨的感觉。</p><p>但让我觉得比较遗憾的是，这个窗户太小，并且是朝东的……</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房9103-44百子湾家园_2500">跑房（9/10）：3-4<em>4</em>百子湾家园_2500<a class="hash-link" href="#跑房9103-44百子湾家园_2500" title="标题的直接链接">​</a></h3><p>看完上个房后，中介说还有一个房，更大一些，要2500，我看现在离下一个房还有点时间，所以也答应去看了。</p><p>【视频：3-4<em>4</em>百子湾家园_2500.mp4】</p><p>这个房确实就比2200的更明亮许多了，窗户很大，但是厨房比较脏，洗手间的水龙头竟然还打不开，这让我很不能接受。也许是正在维修什么的，但毕竟我今天是来“查房”，第一印象不好那后续就更麻烦了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="跑房10103-45垂杨柳百里_3500">跑房（10/10）：3-4<em>5</em>垂杨柳百里_3500<a class="hash-link" href="#跑房10103-45垂杨柳百里_3500" title="标题的直接链接">​</a></h3><p>看的最后一套房是一个很奇葩的户型：团结户，我也过来见见世面。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_hire-house-research-1646806309702-f56180da34c2a4773bcddb09896f13e275eabd23d460a8fd4e15fede6b331cce.png" alt="picture 26" class="img_ev3q">  </p><p>接待我的是一个中介，屋子还坐着一个，好像也是中介，地道的北京人。</p><p>【视频：3-4<em>5</em>垂杨柳百里_3500.mp4】</p><p>这个房是个老房子了，据说墙体十分结实，后来过来一个89岁高龄的老爷爷，跟我们说住这已经五十多年了，唐山大地震那会对面70年代的“新”楼都裂缝了，这个房一点事都没有，还是十二人十二天盖一层楼搞定的……听的我直愣。</p><p>【照片：老爷爷】</p><p>老爷爷问了这个房的价格，中介来之前说是3500，然后今早房东说要加价100，所以是3600，老爷爷听完说那还好，一楼的那个房厨房面积比这小一半前两年还要3800……</p><p>由于这是我看的最后一套房了，所以聊了很久，中介也很会看人，见我已经从原来的室内站到门口了，说让我进来再坐会再聊聊，聊我的工作和家乡地，还讲了点南京的段子，还是挺有意思的。北京人就是实诚，有话就说，也能说会道，这个我还挺欣赏的。</p><p>以上就是全部跑房相关内容的记录了，更多问题可以私聊我。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="投票环节">投票环节<a class="hash-link" href="#投票环节" title="标题的直接链接">​</a></h2><p>如果是您，您会选择哪一所房源：</p><p>【投票：房源】</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="info">info<a class="hash-link" href="#info" title="标题的直接链接">​</a></h2><ul><li>author: 南川</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="version-010">version: 0.1.0<a class="hash-link" href="#version-010" title="标题的直接链接">​</a></h3><ul><li>date: 2022-03-09</li><li>content: <ol><li>完成全部代码封测，并开源，项目地址： <a href="https://github.com/mark-applications/data-science_douban-houses" target="_blank" rel="noopener noreferrer">mark-applications/data-science_douban-houses</a></li><li>使用该项目为身边某位正为租房而发愁的朋友无偿提供帮助</li></ol></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="version-004">version: 0.0.4<a class="hash-link" href="#version-004" title="标题的直接链接">​</a></h3><ul><li>date: 2022-03-08</li><li>content: 增加人工筛选与线下跑房环节</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="version-003">version: 0.0.3<a class="hash-link" href="#version-003" title="标题的直接链接">​</a></h3><ul><li>date: 2022-03-07</li><li>content: 完成高德API部分</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="version-002">version: 0.0.2<a class="hash-link" href="#version-002" title="标题的直接链接">​</a></h3><ul><li>date: 2022-03-05</li><li>content: 完成豆瓣小组api部分</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="version-001">version: 0.0.1<a class="hash-link" href="#version-001" title="标题的直接链接">​</a></h3><ul><li>date: 2022-02-28</li><li>content: 完成租房方案设计部分</li></ul>]]></content:encoded>
            <category>开发笔记</category>
            <category>租房</category>
            <category>豆瓣</category>
        </item>
        <item>
            <title><![CDATA[推广 | 贝壳新业务VR全职开发招募]]></title>
            <link>https://markshawn2020.github.io/blog/2022/02/21/archive/ad-beike-hiring</link>
            <guid>/2022/02/21/archive/ad-beike-hiring</guid>
            <pubDate>Mon, 21 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[工作职责]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="工作职责">工作职责<a class="hash-link" href="#工作职责" title="标题的直接链接">​</a></h2><ol><li>负责贝壳VR实景项目海外业务的设计与开发工作</li><li>参与贝壳VR实景项目海外业务的架构设计与性能优化</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工作地点base-北京">工作地点：base 北京<a class="hash-link" href="#工作地点base-北京" title="标题的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工作福利">工作福利<a class="hash-link" href="#工作福利" title="标题的直接链接">​</a></h2><p>包三餐，16薪</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="任职要求">任职要求<a class="hash-link" href="#任职要求" title="标题的直接链接">​</a></h2><ol><li>统招本科及以上学历</li><li>熟练掌握以下一种或几种技术：<ul><li>一到三年web系统设计开发经验，熟悉常用设计模式</li><li>优秀的数据库设计优化能力，熟悉一种数据库应用，精通mysql者优先</li><li>熟悉linux，能熟练使用一门或几门以下语言：C/C++/shell/python/java/javascript等</li></ul></li><li>扎实的计算机基础，熟悉数据结构，有较强的算法设计能力</li><li>学习能力强，有较好的沟通能力，能迅速融入团队</li><li>较强的逻辑思维能力，具有较强产品意识</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="联系方式">联系方式<a class="hash-link" href="#联系方式" title="标题的直接链接">​</a></h2><ul><li>联系电话：18995654993</li><li>邮箱：<a href="mailto:xiangchaoran001@ke.com" target="_blank" rel="noopener noreferrer">xiangchaoran001@ke.com</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="公司简介">公司简介<a class="hash-link" href="#公司简介" title="标题的直接链接">​</a></h2><blockquote><p>贝壳起于链家，但不同于链家网的垂直自营模式，其使命是缔造平台。</p><p>2020年8月，贝壳以1000亿元人民币市值位列《苏州高新区·2020胡润全球独角兽榜》第14。</p><p>2020年8月13日，贝壳找房在纽交所正式挂牌上市，IPO发行定价为20美元/ADS，股票代码“BEKE”，成为中国居住服务平台第一股。上市当天，贝壳股价上涨87.2%，收于37.44美元，公司市值达到了421.95亿美元。9月25日—10月30日，贝壳找房携全国众多房企倾力打造的“全民新房节”将登陆全国60多个城市。 </p><p>2020年12月12日，由人民日报社指导、人民网主办的“2020人民企业社会责任高峰论坛暨第十五届人民企业社会责任奖颁奖典礼”在北京举行。贝壳找房“线上贷签”获“年度案例奖”。</p><p>2021年4月9日，贝壳找房推出签约服务中心，通过专属签约服务场景、培养专业签约经理，并深度联动整合资金存管、线上贷签等多项服务，为用户和行业带来安全、高效、优质体验的新一代签约服务。全国铺设超300家 已营业超100家。</p></blockquote><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_beike-hr-1645444261146-f9b6279e34887f5354ed2c1ed052596605f73d23a99c8bf6accbd5cb1d8314aa.png" alt="每个月的生日会" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_beike-hr-1645444282112-51b06f859a8b9ba416238eba8ffe68ba12feec6f8e709969369b9424ec6edcb1.png" alt="技术分享研讨会" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_beike-hr-1645444299855-fff9d2e2e18d38a61d82613ad54632c74dc1c23c55226c8cf2359a4af8f239d9.png" alt="办公区域" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_beike-hr-1645444181393-d555e335181ba87a0993166ca18c597e061b8fed6d8d96816d4c59cd99722784.png" alt="办公大厦" class="img_ev3q"></p>]]></content:encoded>
            <category>推广</category>
            <category>VR</category>
        </item>
        <item>
            <title><![CDATA[札记 | 2022，活着]]></title>
            <link>https://markshawn2020.github.io/blog/2022/02/03/archive/prose-living</link>
            <guid>/2022/02/03/archive/prose-living</guid>
            <pubDate>Thu, 03 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[1. 行动的力量：不要让遗憾永远都只是遗憾]]></description>
            <content:encoded><![CDATA[<ol><li><a href="#%E8%A1%8C%E5%8A%A8%E7%9A%84%E5%8A%9B%E9%87%8F%E4%B8%8D%E8%A6%81%E8%AE%A9%E9%81%97%E6%86%BE%E6%B0%B8%E8%BF%9C%E9%83%BD%E5%8F%AA%E6%98%AF%E9%81%97%E6%86%BE">行动的力量：不要让遗憾永远都只是遗憾</a></li><li><a href="#%E5%B9%B3%E5%87%A1%E7%9A%84%E7%AD%94%E6%A1%88%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%B4%BB%E7%9D%80">平凡的答案：我们为什么要活着</a></li><li><a href="#%E6%8E%A7%E7%86%B5%E7%9A%84%E8%89%BA%E6%9C%AF%E6%88%91%E4%BB%AC%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E5%9C%B0%E6%B4%BB%E7%9D%80">控熵的艺术：我们如何更好地活着</a></li><li><a href="#%E5%BD%93%E4%B8%8B%E7%9A%84%E4%BB%B7%E5%80%BC%E6%97%A2%E7%84%B6%E6%88%91%E4%BB%AC%E5%8F%AF%E8%83%BD%E6%B0%B8%E8%BF%9C%E4%B9%9F%E5%87%86%E5%A4%87%E4%B8%8D%E5%A5%BD">当下的价值：既然我们可能永远也准备不好</a></li><li><a href="#%E6%84%9F%E8%B0%A2%E7%9A%84%E6%84%8F%E4%B9%89%E5%A4%A7%E5%A3%B0%E5%91%8A%E8%AF%89%E4%BD%A0%E4%BB%AC%E5%85%B6%E5%AE%9E%E6%88%91%E5%BE%88%E5%9C%A8%E4%B9%8E">感谢的意义：大声告诉你们其实我很在乎</a></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="行动的力量不要让遗憾永远都只是遗憾">行动的力量：不要让遗憾永远都只是遗憾<a class="hash-link" href="#行动的力量不要让遗憾永远都只是遗憾" title="标题的直接链接">​</a></h2><p>离新年过去已经有几天了。</p><p>我总想说点什么，为自己，也为我的朋友们。</p><p>好吧，诚实点，主要是为自己。</p><p>因为总觉得，如果不说点什么，那么很快地，我在这个时间点上所经历的这几年的思考都将淹没于无尽的黑暗之中。</p><p>我本来是很想写一点宏大的东西的，但是后来发现，难度过大，遂放弃。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-live-1643890813684-ce983f95f534572c4415ad7e19a8eb15675cc754b3dcbb98e4b41561ed32d599.png" alt="picture 12" class="img_ev3q">  </p><p>所以，选些容易的罢。</p><p>还记得我最遗憾的是，在我所负责的某个社团交接之际，与所负责的某个商业项目收尾之际，未能及时地给他们一份总结，我原以为自己会记得，我相信我总有一刻会有时间、心情恰好地去做，却毫无疑问地离那份履约越来越远，成为最终的“坏账”。</p><p>这是我所背负的一些愧疚，一些可能影响不是那么大，但一生都会觉得有些愧疚的东西，因为关于有始有终，我们本可以做到，但我们没有。</p><p>我不想这样。</p><p>至少，我不想以后都这样。</p><p>既然意识到了有始有终的价值，我决定，我一定要写点东西出来。</p><p>这关乎我内心的一份尊严。</p><p>所以，我正在尝试。</p><p>非如此不可。</p><p>非如此不可。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="平凡的答案我们为什么要活着">平凡的答案：我们为什么要活着<a class="hash-link" href="#平凡的答案我们为什么要活着" title="标题的直接链接">​</a></h2><p>一个人并非时时刻刻都喜欢与擅长思考。</p><p>于我，旅行时、沐浴时、深夜望着街道或是星空时、绝望时，会。</p><p>所以从微观上，因了今天的小雨，我独自骑车去核酸路上，经过一处菜市场，大爷大妈一个个笔直地林立在场棚下，靠近马路处是一个烟火桶，噼里啪啦静静燃放着。</p><p>那一刻，很美。</p><p>是平凡生活的美。</p><p>我很想举起相机记录下这一时刻，但那样旋即就破坏了整个街道的氛围，多有不识趣之味，便立即作罢了，只同样静静地记录在心中。</p><p>继而流淌到“纸”上。</p><p>幸而，我是确有一些照片的，关于这类。</p><p>二零二一年八月三日，晌午，我和驴友从雅安进发新沟，80公里，海拔540到1200，烈日炎炎。</p><p>我一路惊叹，雅安竟然有这么多“背篓客”，年轻的、年迈的、男的、女的，他们就那样背着箩筐，然后走去似乎很远的地方。</p><p>而路上，最让我们印象深刻的就是这位老婆婆。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643880199274-0b6e6793b343c6ff66e8c963fcd3de2bf45a99904df2d2ef4344c3595a97b7a6.png" alt="picture 1" class="img_ev3q">  </p><p>那时我们正好是下坡，迎面一步一步不紧不慢的老婆婆一下吸引了我们注意力，在热情地打了招呼后，体力勉强能够支撑的老婆婆向我们友好地伸了伸手，没有其他言语。</p><p>其实不仅仅是她。</p><p>八月十日硬闯尼玛贡神山，山脚遭遇暴雨，我和驴友不得不被迫就近找了一户人家恳请落脚。舍主是一位虔诚的老婆婆，手里的念珠不停地转着，看得出来年龄已经相当大了，卧着不能动弹。</p><p>你知道我最心酸的是什么吗？</p><p>是床的另一边的柜台上放着的苹果，已经都腐烂了。</p><p>可即便如此，她仍旧是那样努力地生活着。</p><p>她床边便是一张窗子，能看到外面的马路，此时此刻，我只想着，也许她的可能比我还大的孩子们，该归来团聚了吧。</p><p>时间催人紧，我们不方便久留。于是很快又上路了。</p><p>又历经约莫一个小时的攀爬，我们于黄昏之际抵达了尼玛贡神山观景台，风雨已摧残地我们狼狈不堪，驴友妥协地住下了。</p><p>可倔强的我没有。</p><p>我不知道再给我一次机会，我会不会还那样选择：即便夜幕降临，大雨滂沱，也要翻越卡子拉山4700米黑夜的恐惧，只为完成既定的计划。</p><p>夜晚八点半，终于在渺无人烟、云雾缭绕的地方见到了一户人家，我走近询问离山顶还有多久，接见我的是一位十几岁利落的小姑娘，她那不容置疑的语气让我相信，这里便已经是山顶。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643880846639-dff8003e02e4bb44a13d0ef052c2852a034eea6bc82dbc94317ccd7a9387044a.png" alt="picture 2" class="img_ev3q">  </p><p>那一刻，我暗暗感动到什么是天道酬勤，只要方向正确，一定会有抵达终点的那一刻。我们也许往往迟到，但我们绝不会不到。</p><p>时至今日，我偶尔也会想起她，在这四千七百米的最高峰上，每天都会想些什么。</p><p>你若问我平凡的意义，我想，大概就是，不卑不亢，内心坚定地活着，哪怕背负沉疴，哪怕无人问津，哪怕与世间最稀薄的空气为伴。</p><p>比起他们，我们是不是已经幸福很多。</p><p>也许不。</p><p>但有一点我是如此肯定，我们都要努力地活着。</p><p>这是我最想说的。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643882392412-86f45454e5e2a744efd7ab9d5b12dffdec0aae56b4c252ffe2fe1b54338dd7c0.png" alt="picture 3" class="img_ev3q">  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="控熵的艺术我们如何更好地活着">控熵的艺术：我们如何更好地活着<a class="hash-link" href="#控熵的艺术我们如何更好地活着" title="标题的直接链接">​</a></h2><p>在活着成为共识之后，我们方能进一步讨论一下，如何活着，如何更好地活着。</p><p>显然，如何活着，这个问题是没有意义的，作为碳基生物，能呼吸，有心率，便是活着，而这一切，都是后台程序，是自动运行，不受主观控制的。</p><p>我们需要思考的是，如何XXX地活着，之所以不直接得出“如何更好地活着”，是因为，我们有必要思考一下“如何更坏地活着”。</p><p>因为有一种方法论叫反向操作法，比如说如果某个女明星基金经理每年都亏，那我们反向跟她操作即可。</p><p>确实，是有人提出如何更坏地活着的，然后我们会发现，每个反向操作都不容易，例如经常晚睡（我们正是这么做的）、奢侈消费（正合我们意）、沉迷游戏（老带劲了）……</p><p>你发现了吗，每个人都几乎知道如何活的更好与更坏，结果，很少有人能真正活好。</p><p>反向操作并不是万能的解药，因为我们无法喊醒一个装睡的人。</p><p>我也无法给出一个人如何更好地活着的终极解决方案，毕竟变好的标准几乎是相同的，但变坏几乎每个人都有自己的不同。</p><p>我想从我的专业领域给出一点自己的体会，那就是：控熵。</p><p>为啥程序的世界，总能精准地运行，抛开外部与底层复杂的设计不谈，有一点尤其值得我注意：“栈”。</p><p>一个正常与复杂的程序，时时刻刻都会处理海量的输入与输出，在其初始化的时候可能仅仅是几个函数与几个线程，随之却会爆炸式增长，但最终会平息下来，这是一个好的程序。</p><p>所以评价程序的核心在于首先理解程序是如何管理“爆炸式增长”的复杂性的，答案就在“栈”，以及一切与“栈”相关的概念、内容、范式。</p><p>我们的人生其实就是一个庞大的程序，这里不展开讨论是否有上帝的存在，因为即便你知道自己的人生是被上帝设计且运行的， 难道你就要毁弃重开吗。</p><p>即便你想，终究是没有重开选项的。</p><p>我们每天遇到的新的人，听到的新的故事，面对的新的难题，处理的新的琐事，一笔一墨，都是自己的人生，凡所经历，都成了我们的过往。</p><p>但这个过程，不无超脱的解药。</p><p>很长一段时间，我都企图从AI理论那里学来什么预测人生的诡计，现在我已经决然放弃了。</p><p>我们要花多久才能意识到，很多预测都是徒劳的，很多预期是不可预期的，但如何应对是永恒的，我们需要建立一套能处理任何困难的程序：控熵。</p><p>你知道一个人在什么时候会崩溃，然后“重开”了吗。</p><p>是因为整个系统的熵急剧增高，无法破局了。</p><p>比如一位博士生选择自杀，在论文中了顶会之后。</p><p>比如一位程序员选择自杀，在被对象逼迫威胁后。</p><p>很多时候一个人是这么走向灭亡的：</p><blockquote><p>有一个看起来很甜的罐子，他打开，尝了两口。</p><p>接着再打开，又尝了两口。</p><p>最后喝到了一口毒药。</p><p>他懊悔不已，可是那几口甜药已经下肚，无法赎回了。</p></blockquote><p>如果他会控熵的艺术，他至少可以采取两种策略。</p><p>第一种，先喝了两口甜药，然后结清所需的代价，他将不欠瓶子什么。于是再喝两口，再结清。最后喝到一口毒药，他便有了讨价还价的筹码。</p><p>第二种，在打开罐子之前他已经备份好了整个系统，喝了五口药后，立即回滚。熵便清零了。</p><p>程序的核心是每个函数只负责自己的那部分是正确的，错误将提交到上级，整个程序的错误将有一个专门的异常处理程序处理。</p><p>例如在安卓系统中，每个程序一旦产生了异常，将会被runtime主程序直接杀死然后重启，而不会选择费力地去修复。</p><p>在我学习程序的这几年，这些理念是如此根深蒂固地影响了我，让我时刻保持关注自己的“熵值”：我的“程序栈”里目前正在处理哪些东西，处理的优先顺序是什么，现在是否合适再加入什么。</p><p>所以从我自己来说，很感谢这几年的风雨豪迈，无数的挑战与压力教会了我宠辱不惊的扫除力、修复力和定力，让我能够清晰地意识到我的大脑是一片足够强大的CPU，让我在遭遇战时能够第一时间问到：</p><ol><li>这个问题需要什么背景。</li><li>这个问题需要什么路线。</li><li>这个问题需要什么支持。</li></ol><p>而非：我能不能解决这个问题？</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643890352374-e4dfdd72fe3424d9711ed865a61471d1015994c99152cb0fec0cc7701b21ff7b.png" alt="picture 10" class="img_ev3q">  </p><p>虽然从悲观角度，人永远不可能像程序一样精准地活着；从感性角度，人有时候就需要一些“信仰之跃”。就像战争年代，有信仰的人不少，但活下来的不多。</p><p>所以，我也仅仅只能从我的一些感受中，给出一点点参考建议：时刻关注自己的状态与过程，控制自己的熵值，这样即便泰山崩于前亦能面不改色。</p><p>毕竟人这一辈子，生死而已，浮寄于天地之间，能醒着活，便不醉着过。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="当下的价值既然我们可能永远也准备不好">当下的价值：既然我们可能永远也准备不好<a class="hash-link" href="#当下的价值既然我们可能永远也准备不好" title="标题的直接链接">​</a></h2><p>很多时候，无非只是想做成一件事。</p><p>可我们始终会碰到做不好的时候。</p><p>一年，甚至又一年，都原地踏步的感受，我想，有人会明白。</p><p>我们总希求上天能多给我们一些时间。</p><p>等项目结束了，等考研结束了，等这个月过去了，我们把主动权交给等。</p><p>我们很多时候，似乎能做的只有等。</p><p>但这并不是全部。</p><p>尽管我现在已经不喝鸡汤了，但我强烈建议没有喝过的可以喝一喝， <a href="https://www.youtube.com/user/TheMiro0r" target="_blank" rel="noopener noreferrer">Mateusz M - YouTube</a> 曾经给我过许多力量。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643885837007-29710d96335fe725ad03b83e6e0f78f142576ebe389afac97481b3df489226f6.png" alt="picture 4" class="img_ev3q">  </p><p>印象最深刻地一句话便是：“<strong>你永远也不会准备好</strong>”。</p><p>难道不是吗？</p><p>PPT永远是最后一刻还在奋力修改着。</p><p>程序在最后交付的时候还会有bug。</p><p>约会过去了三天还会思考那天的帽子是否不合适。</p><p>……</p><p>生活，有时是会这样的。</p><p>但即便真地遇到了“可预期的失败”，那又如何呢。无非大哭一场，无非在深夜里买醉，无非连续三个月躲在虚拟世界。</p><p>之前一位“八年抗战”的研友问我，如果我站在他角度，我会选择怎么做，随便找个人结婚？或是继续透支考研？</p><p>我说，不，我给不了你答案。你只告诉了我你的现状，这是一个点的信息，我无法根据这个点给你建议。</p><p>我们需要花多长时间才能明白，过去墨迹已干，能把握的只有现在与将来。</p><p>为什么有些人明明七十岁了，眼里还能有如孩子般的光；而有些人才二三十岁，却觉得人生一片黑暗。</p><p>我知道一定会有人跳出来说，那是因为前者没有经历过后者所经历过的事，你没有资格去指责后者。</p><p>是。</p><p>所以我确实没有资格说任何别人的事，包括这位研友。</p><p>所以我只能对自己说：</p><p>天不救兮，唯有自救。</p><p>每一朵花开，都会划过时间的寂寞，静待花开。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643890404455-08a2ccdbdc96ee2261b9af68a83f44bf1ccbcd680ec40a9fdc69b0e25803498d.png" alt="picture 11" class="img_ev3q">  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="感谢的意义大声告诉你们其实我很在乎">感谢的意义：大声告诉你们其实我很在乎<a class="hash-link" href="#感谢的意义大声告诉你们其实我很在乎" title="标题的直接链接">​</a></h2><p>不知不觉，又胡诌了一顿文字，我向来不是很擅长表达，很多时候，也没有多少表达的意义，但我依旧还是努力去表达些什么，与我而言，这也是我生活的一部分。</p><p>所以，是时候到了表达我最不擅长的一部分了，关于感谢。</p><p>我理解中的感谢，也许未必是不落俗套的，但一定是发自内心的，我也确实很想感谢一些人。</p><p>我知道，感谢是不能乱感谢的，否则会让被感谢之人面里无光，所以我忖量很久，考虑到我其实是一个毛病如此多的烂人，也许仅在某一些领域小有一些收获，所以我希望能将我自己抽离分解，针对这些分别感谢。</p><p>第一，考虑到这几年来，我一直坚持原创公众号，个人认为还是比较值得肯定的，所以首先感谢所有关注我公众号的朋友们，尤其是考研自习室那段时间，让我又结交了几个一起奋斗的好朋友，他们鲜净可爱，带给我很多力量。</p><p>第二，我也没指望通过公众号去赚钱，我知道某些公众号随便一发文章，打赏都能上万了， 贫富差距很大，但我确实不在乎这个，做技术的人一般都比较务实，但还是很感谢一些朋友经常能够慨然相助，混点馒头钱，是对我莫大的鼓励。</p><p>第三，尽管我菜到一篇论文也没发过，并且已经离校很久了，但还是特别感谢金融学院郑登元老师曾经给过我学术上的指导和为人上的表率。郑老师是我们台湾的好朋友，孤身一人在南京，办公室经常秉烛工作到深夜一两点，每个学生临走时郑老师都会亲送到走廊，在“学风日下”的当代，让我感受到建国年代学者为学的风范，让我觉得学术不再是那么高不可攀的一件事，随手建模严谨分析成为基操，一步步影响我成长为一个理性人，感谢！</p><p>第四，很感谢一路走过来一直支持我的一些朋友，尽管生活所迫，山海所隔，我们都不能有一丝机会可以畅快饮酒。人生往往是这样的，正因如此，我们每个人才会眼里有光，内心有火，我们每个人看似如此孤独，但我们永不寂寞。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643889012854-fb7e134015e0fb01160fbb5bf20371f54d5f76651f8d951be705e28db665724c.png" alt="picture 5" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643889502670-2b1b673307cb825b0906c95c5a9207c0e81beb157cd872b28b3c1f45b020c48b.png" alt="picture 6" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643889738162-ae69059cbbe34f016550856bac5199afb4206ce3373299c77d4207e99423163c.png" alt="picture 7" class="img_ev3q">  </p><p>感谢是感谢不完的，即便是和你正争锋相对的“敌人”，也有很多值得感谢的地方，因为他们让你成长更快，同时他们也一定有你可以学习的地方。</p><p>唯有以永远热忱的赤子之心，面对这个世界，才不枉走此一生。能微笑，绝不愤怒；能愤怒，绝不妥协；能妥协，绝不后退；能后退，绝不止步不前！</p><p><strong>2022，活着！</strong></p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643890122980-a4b87be76eee2e543aa193eb29bc70312b47788f3bce5554ed60964776382e89.png" alt="picture 8" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_2022-what-we-have-done-right-1643890133230-c1aed5ae60f421539ee304ecca3609a49edd3d61ffca44f703bff3abbfc6b407.png" alt="picture 9" class="img_ev3q">  </p><p>谨以来自五千二百米对八千八百米的仰望，祝我所有的朋友们，新年快乐，勇往直前！And the most most most important: MAY PEACE WITH YOU.</p>]]></content:encoded>
            <category>札记</category>
        </item>
        <item>
            <title><![CDATA[编程 | Linux 笔记]]></title>
            <link>https://markshawn2020.github.io/blog/2022/02/02/archive/dev-linux</link>
            <guid>/2022/02/02/archive/dev-linux</guid>
            <pubDate>Wed, 02 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[很久以前，自打我刚开始学计算机，就有一个认知：精通linux的人都是大神。]]></description>
            <content:encoded><![CDATA[<blockquote><p>很久以前，自打我刚开始学计算机，就有一个认知：精通linux的人都是大神。</p><p>但，我是不需要学的。</p><p>很长一段时间，我都是这么认为的。</p><p>直到这两年，我选择了Mac作为自己的主力开发工具，两年的摸爬滚打，尤其是始于对<code>iTerm + zsh + oh-my-zsh</code>颜值的惊艳，到现在能够在mac、ubuntu、centos、windows等各大操作系统之间自如切换，并逐渐意识到命令行系统对于现代操作系统的重要性，命令行熟练度对于提升工作效率的重要性，我知道，我已经走向了一条与计算机越来越近的不归路。</p><p>而这一切中间的桥梁，正是linux，于我而言，不认识不掌握linux，不可谓入了程序的真正世界。</p><p>因此，本系列第一篇，献给linux，一方面是致敬我心中曾经那触不可及的信仰，另一方面也是为了能重新认识它，对它说一句它可能真正想听的："hello linux, I'm mark"。</p><p>因为每一个linux的学习者最后都会发现，linux并不神秘，而linux真正启迪人的，是它的设计哲学，与对你工作流的重塑。</p><p>在此，我斗胆把python之禅搬于此，因为在我心中，它于linux，是心有灵犀，同样适用：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_core-notes-of-linux-1643723806431-00b5b858aa9372ebc4b9dfc37178554d0d0d4eb62c854edb6cd2385e15333e07.png" alt="picture 16" class="img_ev3q">  </p></blockquote><ul><li><a href="#%E9%A6%96%E5%85%88linux%E6%98%AF%E4%BB%80%E4%B9%88">首先，linux是什么</a></li><li><a href="#%E5%85%B6%E6%AC%A1%E5%A6%82%E4%BD%95%E6%8B%A5%E6%9C%89%E4%B8%80%E5%8F%B0linux">其次，如何拥有一台linux</a></li><li><a href="#%E6%8E%A5%E7%9D%80%E5%A6%82%E4%BD%95%E7%99%BB%E5%BD%95linux">接着，如何登录linux</a></li><li><a href="#%E6%9C%80%E5%90%8E%E5%A6%82%E4%BD%95%E6%8E%8C%E6%8E%A7linux%E4%BB%A5%E4%B8%8B%E7%BB%99%E5%87%BA%E4%B8%80%E9%83%A8%E5%88%86%E7%BB%8F%E9%AA%8C%E7%AC%94%E8%AE%B0">最后，如何掌控Linux，以下给出一部分经验笔记</a></li><li><a href="#-------------------------------------">-------------------------------------</a></li><li><a href="#best-practice-ubuntu-initialization">BEST-PRACTICE: ubuntu initialization</a><ul><li><a href="#step-0-install">step 0. install</a></li><li><a href="#step-1-config-apt-source">step 1. config apt source</a><ul><li><a href="#1-change-apt-source">1. change apt source</a></li><li><a href="#2-update-apt">2. update apt</a></li></ul></li><li><a href="#step-2-config-git">step 2. config git</a></li><li><a href="#step-3-config-terminal">step 3. config terminal</a></li><li><a href="#step-4-config-language">step 4. config language</a><ul><li><a href="#resolution-1-config-chinese-input-source-via-ibus">resolution 1: config chinese input source via ibus</a></li><li><a href="#fixme-resolution-2-config-chinese-input-source-via-sougou">FIXME: resolution 2: config chinese input source via sougou</a></li><li><a href="#how-to-switch-language-input-source">how to switch language input source</a></li><li><a href="#how-to-change-language-to-english">how to change language to english</a></li></ul></li><li><a href="#improve-a-script-to-init-ubuntu-may-not-work">IMPROVE: a script to init ubuntu (may not work)</a></li></ul></li><li><a href="#best-practice-linux-connection-ssh">BEST-PRACTICE: linux connection (<code>ssh</code>)</a><ul><li><a href="#ssh-no-secretpassword">ssh no secret/password</a></li><li><a href="#ssh-keep-connection-alive">ssh keep connection alive</a></li></ul></li><li><a href="#best-practice-linux-env-management">BEST-PRACTICE: linux env management</a><ul><li><a href="#how-to-change-apt-source">how to change apt source</a><ul><li><a href="#resolution-1-manual-change-from-the-app-of-softwares--updates">resolution 1: manual change from the App of <code>Softwares &amp; Updates</code></a></li><li><a href="#resolution-2-modify-the-configuration-manually-from-the-terminal">resolution 2: modify the configuration manually from the terminal</a></li></ul></li><li><a href="#how-to-know-whats-the-os-platform">how to know what's the os platform</a></li><li><a href="#how-to-configure-python-environment">how to configure python environment</a></li><li><a href="#white_check_mark-cannot-use-sudo-apt-get-install-xxx-to-install-packages">✅ cannot use <code>sudo apt-get install xxx</code> to install packages</a></li></ul></li><li><a href="#best-practice-linux-file-system-management">BEST-PRACTICE: linux file system management</a><ul><li><a href="#mkdir-if-not-exist">mkdir if not exist</a></li><li><a href="#ls-and-delete-files">ls and delete files</a></li><li><a href="#fastest-delete-file">fastest delete file</a></li><li><a href="#how-to-show-absolute-path-of-file-from-relative">how to show absolute path of file from relative</a></li><li><a href="#how-to-copy-file-into-clipboard">how to copy file into clipboard</a><ul><li><a href="#its-easy-to-copy-a-text-file">it's easy to copy a text file</a></li><li><a href="#but-it-cannot-be-done-for-a-binary-file">but it cannot be done for a binary file</a></li></ul></li><li><a href="#how-to-show-file-size">how to show file size</a></li><li><a href="#how-to-compare-between-files-diff--vimdiff">how to compare between files (<code>diff</code> &amp; <code>vimdiff</code>)</a><ul><li><a href="#resolution-1-diff-f1-f2">resolution 1: <code>diff F1 F2</code></a></li><li><a href="#resolution-2-diff--y-f1-f2-or-sdiff-f1-f2">resolution 2: <code>diff -y F1 F2</code> or <code>sdiff F1 F2</code></a></li><li><a href="#resolution-3-vimdiff-f1-f2">resolution 3: <code>vimdiff F1 F2</code></a></li><li><a href="#todo-resolution-4-git-diff">TODO: resolution 4: git diff</a></li></ul></li><li><a href="#fixme-how-to-copymove-directory-files-correctly-to-soft-links-under-target-directory-without-affecting-git">FIXME: how to copy/move directory files correctly to soft links under target directory without affecting git?</a></li></ul></li><li><a href="#best-practice-linux-disk-management">BEST-PRACTICE: linux disk management</a><ul><li><a href="#ncdu-disk-space-tui"><code>ncdu</code>, disk space tui</a></li><li><a href="#baobab-disk-space-gui"><code>baobab</code>, disk space gui</a><ul><li><a href="#install-problem">install problem</a></li><li><a href="#effects">effects</a></li></ul></li></ul></li><li><a href="#best-practice-linux-shells-management">BEST-PRACTICE: linux shells management</a><ul><li><a href="#list-all-the-shells">list all the shells</a></li><li><a href="#background-sh-is-different-with-bash">background: <code>sh</code> is different with <code>bash</code></a></li><li><a href="#see-whats-the-current-shell">see what's the current Shell</a></li><li><a href="#switch-shell">switch shell</a></li><li><a href="#set-zsh-as-the-default-terminal-need-re-login">set zsh as the default terminal (need re-login)</a></li></ul></li><li><a href="#best-practice-linux-terminal-management">BEST-PRACTICE: linux terminal management</a><ul><li><a href="#white_check_mark-the-terminal-cannot-up-down-after-editing">✅ the terminal cannot up down after editing</a></li><li><a href="#todo-bind-option--arrow-to-jump-word-in-zsh-on-ubuntu-vmware-on-macos">TODO: bind <code>option + arrow</code> to jump word in zsh on ubuntu vmware on MacOS</a></li></ul></li><li><a href="#best-practice-linux-commands-management">BEST-PRACTICE: linux commands management</a><ul><li><a href="#how-to-auto-input-in-command">how to auto input in command</a><ul><li><a href="#auto-input-password-for-sudo-commands">auto input password for sudo commands</a></li><li><a href="#auto-yes-for-some-command-yes--">auto yes for some command (<code>yes | </code>)</a></li><li><a href="#auto-yes-for-apt-installing-packages--y">auto yes for <code>apt</code> installing packages (<code>-y</code>)</a></li></ul></li><li><a href="#how-to-search-commands-by-prefix-history-search-backwardforward">how to search commands by prefix (<code>history-search-backward/forward</code>)</a></li><li><a href="#how-to-repeat-command">how to repeat command</a></li><li><a href="#how-to-use-variable-as-multi-args">how to use variable as multi args</a></li><li><a href="#how-to-set-an-alias">how to set an alias</a><ul><li><a href="#resolution-1-in-terminal">resolution 1: in terminal</a></li><li><a href="#resolution-2-write-into-bash_aliases">resolution 2: write into <code>~/.bash_aliases</code></a></li><li><a href="#sparkles-resolution-3-use-bash_aliases-with-zsh">✨ resolution 3: use <code>.bash_aliases</code> with <code>zsh</code></a></li><li><a href="#unalias">unalias</a></li></ul></li><li><a href="#how-to-compare-between-outputs-from-two-commands">how to compare between outputs from two commands</a></li></ul></li><li><a href="#best-practice-linux-accounts-management">BEST-PRACTICE: linux accounts management</a><ul><li><a href="#how-to-create-user">how to create user</a></li><li><a href="#how-to-log-out">how to log out</a><ul><li><a href="#resolution-1-1110-and-above">resolution 1 (11.10 and above)</a></li><li><a href="#resolution-2">resolution 2</a></li></ul></li><li><a href="#set-a-shorter-password-for-ubuntu">set a shorter password for ubuntu</a></li></ul></li><li><a href="#best-practice-linux-net-management">BEST-PRACTICE: linux net management</a><ul><li><a href="#how-to-know-my-public-ip-address">how to know my public ip address</a></li><li><a href="#how-to-monitor-network-traffic">how to monitor network traffic</a></li><li><a href="#fixme-check-proxy">FIXME: check proxy</a></li></ul></li><li><a href="#best-practice-linux-datetime-management">BEST-PRACTICE: linux date/time management</a><ul><li><a href="#how-to-format-date-in-terminal">how to format date in terminal</a></li><li><a href="#how-to-change-timezone-and-time">how to change timezone (and time)</a><ul><li><a href="#resolution-1-conclusion-directly-export">resolution 1 (conclusion): directly export</a></li><li><a href="#resolution-2-detail-choose-following-directions">resolution 2 (detail): choose following directions</a></li></ul></li></ul></li><li><a href="#best-practice-linux-system-management">BEST-PRACTICE: linux system management</a><ul><li><a href="#white_check_mark-a-stop-job-is-running-for-session-c2-of-user--1min-30s">✅ <code>A stop job is running for Session c2 of user ... (1min 30s)</code></a></li></ul></li><li><a href="#-----------------------------------">-----------------------------------</a></li><li><a href="#best-practice-linux-common-commands">BEST-PRACTICE: linux common commands</a><ul><li><a href="#commandtar">command:tar</a></li><li><a href="#commandperl">command:perl</a><ul><li><a href="#how-to-use-perl-to-replace-multi-lines">how to use perl to replace multi-lines</a></li></ul></li><li><a href="#commandfind">command:find</a><ul><li><a href="#how-to-ignore-case">how to ignore case</a></li><li><a href="#how-to-specify-search-type">how to specify search type</a></li><li><a href="#how-to-exclude-dir">how to exclude dir</a></li><li><a href="#todo-how-to-find-file-with-time-used">TODO: how to find file with time used</a></li><li><a href="#tip-find-efficiency-comparison">tip: find efficiency comparison</a></li></ul></li><li><a href="#commandgrep">command:grep</a><ul><li><a href="#how-to-exclude-dir---exclude-dirdir">how to exclude dir (<code>--exclude-dir=dir</code>)</a></li><li><a href="#how-to-limit-depth--maxdepth">how to limit depth (<code>-maxdepth</code>)</a></li><li><a href="#tip-grep-by-lines-context-is-much-faster-than-grep-by-words-context-and-even-better-for-output">tip: grep by lines context is MUCH FASTER than grep by words context, and even better for output</a></li><li><a href="#tip-grep-by-negative-captured-group-needs-to-use-ggrep">tip: grep by negative captured group needs to use <code>ggrep</code></a></li></ul></li><li><a href="#commandtree">command:tree</a><ul><li><a href="#how-to-display-chinese--n">how to display chinese (<code>-N</code>)</a></li><li><a href="#how-to-exclude-dir-i">how to exclude dir(<code>-I</code>)</a></li></ul></li><li><a href="#commandhead">command:head</a><ul><li><a href="#head-basic-usage">head basic usage</a></li><li><a href="#how-to-exclude-the-last-k-rows">how to exclude the last k rows</a></li><li><a href="#discuss-use-head-or-sed">discuss: use <code>head</code> or <code>sed</code></a></li></ul></li><li><a href="#commandtop">command:top</a></li><li><a href="#commandcat">command:cat</a><ul><li><a href="#how-to-write-raw-string-into-file-using-cat">how to write raw string into file using <code>cat</code></a></li><li><a href="#usage-how-to-know-whats-the-bash-string">usage: how to know what's the bash string</a></li></ul></li><li><a href="#commandunzip">command:Unzip</a><ul><li><a href="#how-to-unzip-to-specific-directory">how to unzip to specific directory</a></li></ul></li><li><a href="#commandkill">command:kill</a></li><li><a href="#commandscp">command:scp</a></li><li><a href="#commandlsof">command:lsof</a></li><li><a href="#commandufw">command:ufw</a></li><li><a href="#commandtime">command:time</a></li><li><a href="#commandtr">command:tr</a></li><li><a href="#commandcd">command:cd</a><ul><li><a href="#usage-a-superb-scene-using-cd-">usage: a superb scene using <code>cd .</code></a></li></ul></li><li><a href="#commandsed">command:sed</a><ul><li><a href="#how-to-print-only-matched-lines">how to print only matched lines</a></li><li><a href="#sparkles-how-to-increment-version-number">✨ how to increment version number</a></li><li><a href="#how-to-match-digits-0-9-or-digit">how to match digits (<code>[0-9]</code> or <code>:digit:</code>)</a></li><li><a href="#how-to-insert-text-before-first-line-of-file">how to insert text before first line of file</a></li></ul></li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="首先linux是什么">首先，linux是什么<a class="hash-link" href="#首先linux是什么" title="标题的直接链接">​</a></h2><p>作为南川的核心开发笔记（从实际工作经验中提炼出来的笔记），我无意过多展开一些基本的背景介绍，因此也不会花时间去讲述linux和unix和mac之间的关系，这些读者们都可以很方便地在互联网找到答案。</p><p>我只简单地如下描述，目前用于个人使用的电脑系统，主要分为windows和mac。</p><p>windows的最大优点，是价格相对平民，生态丰富，交互习惯最符合人类直觉。</p><p>mac的最大优点，是审美一流，做工一流，触控板和屏幕天花板的存在，然后于我而言最大的优点，是其unix系统，可以允许我像linux一样方便地使用命令行。</p><p>所以，我在使用了五年的windows后，毅然投入了mac的怀抱，而其中的目的之一，就是为了更好地掌握linux。</p><p>（当然，纯粹使用linux我是不会接受的，我还是觉得追求审美也是生活中很重要的一部分，于是乎，<del>我现在已经极其极其不想看到任何windows的界面</del>）</p><p>说了这么多，还是没说linux是什么。</p><p>没错，就应该这样，这篇是核心开发笔记，非核心的，可以出门右转某乎，比如：</p><ul><li><a href="https://www.zhihu.com/question/434914458/answer/1664277013" target="_blank" rel="noopener noreferrer">(19 封私信 / 67 条消息) 作为开发者，你更喜欢用macOS、Linux还是Windows操作系统？为什么？ - 知乎</a></li><li><a href="https://www.zhihu.com/question/24261540/answer/80418621" target="_blank" rel="noopener noreferrer">(19 封私信 / 67 条消息) Linux 各大发行版有什么特色？ - 知乎</a></li></ul><p>PS: 以上链接，我都没有看过，只是随手一搜。😄</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其次如何拥有一台linux">其次，如何拥有一台linux<a class="hash-link" href="#其次如何拥有一台linux" title="标题的直接链接">​</a></h2><p>有很多种方法。</p><p>如果你是windows 10+用户，最方便的方法，是基于内置的<code>wsl</code>系统，不知道是什么？出门右转。</p><p>至于内置的<code>wsl</code>会不会有什么限制和性能损耗？这个我也不知道，我不用，如果你知道，欢迎留言，我还挺想知道的，只要你愿意留我就愿意听，并且可能会影响我接下来的认知。</p><p>但我不会因为这个出门右转，我已经为了给大家示范如何出门右转，已经出门一次了，寒冬腊月，怪冷的。</p><p>这是其一。</p><p>其二，装一个双系统。</p><p>我一直想装个双系统，并且尝试到了最后一步，因为工作需要。当时我给我的mac装ubuntu的双系统，结果到了安装界面，鼠标和键盘没有响应，查了查好像我的版本mac 2020 pro的鼠标和键盘不走usb，而是总线？</p><p>不清楚，后续我可能会继续尝试装个双系统，目前我用的是虚拟机。</p><p>PS：友情提示，小白不要轻易尝试双系统，容易留下不学无术后悔的泪。</p><p>其三，装一个虚拟机，比如<code>vmware</code>或者<code>virtual box</code>。两个都尝试下来，个人比较喜欢<code>vmware</code>。</p><p>至于怎么装，怎么配置，出门右转，或者等我后续系列，会有虚拟机/双系统专刊的，应该（如果不懒的话）。</p><p>我目前的虚拟机（内部运行的ubuntu，可以同时运行多个操作系统）界面如下：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_core-notes-of-linux-1643725375163-c76c9d50a6632d532665d3bbbffb45379f7a72060170528ffbba377ad4a0d461.png" alt="picture 17" class="img_ev3q">  </p><p>其四，阿里云/腾讯云/华为云/亚马逊云……租一个linux服务器或者操作系统等。这是业界搭建后端必备。我之前一直用的阿里云/腾讯云，因为以前做全栈多一些。</p><p>目前市面上，服务端应该用centos比较多，客户端应该用ubuntu比较多，主要原因可能是centos默认没有界面，程序较为稳定；ubuntu的界面很好看，比较适合个人鼓捣。</p><p>我目前使用的ubuntu界面如下：</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_core-notes-of-linux-1643725414611-b8cc4126f345748e9f692843738ed6d80aa61c82103b1321308468c70443c356.png" alt="picture 18" class="img_ev3q">  </p><p>这里值得注意的是，有一些企业可能购置了类似于windows server之类的服务端，这种本质上还是windows系统，不是linux系统，只不过一直跑在公司网络上。</p><p>所以当我们谈到服务器的时候，可能并不一定是linux系统，这是值得注意的。</p><p>我为啥知道这玩意呢，因为之前碰到一个项目是这样的，我本来写好的linux的后端，想着直接移到目标公司网上，结果一看，windows server，把我给整不会了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="接着如何登录linux">接着，如何登录linux<a class="hash-link" href="#接着如何登录linux" title="标题的直接链接">​</a></h2><p>理论上，登录这个动作，不应该是个问题，但那仅限于是登录自己的本地的每天都用的电脑。</p><p>linux一般都是在服务端的，一般涉及到远程访问，所以通用做法是用<code>ssh</code>。</p><p>基本的ssh用法出门右转即可，本文只记录如何免密登录ssh。</p><p>因为ssh默认每次都会输入密码，很不畅快。更严重的是，如果涉及到写批运行脚本，则密码输入会成为脚本杀手，至少会让脚本更难理解，出错概率更高。</p><p>很简单，第一步，先<code>ssh USERNAME@SERVER</code>，其中<code>USERNAME</code>和<code>SERVER</code>是目标服务器的用户名和IP地址（或者域名，如果有的话）。</p><p>一般，默认的<code>USERNAME</code>是<code>root</code>，密码也是<code>root</code>，虽然这很不推荐，不安全，但对于新手却是很友好。</p><p>尽管我的密码更简单，简单到你会拍案惊奇。</p><p>当你第一次<code>ssh</code>之后，会在本机的当前用户文件夹下（mac和linux都是<code>~</code>文件夹，windows是<code>C:\\Users\\XXX</code>）生成一个<code>.ssh/id_rsa.pub</code>，这是公钥。</p><p>这个文件的内容，涉及到了rsa算法等密码学相关内容，不展开。而你要做的，就是把里面的文本复制，粘贴到目标服务器的<code>~/.ssh/authorization_keys</code>文件内（如果文件不存在，则新建；如果文件已有内容，则另起一行，补在后面即可）。</p><p>以下给出一键脚本：</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">USERNAME="xxx"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SERVER="xxxxx"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">file="id_rsa.pub"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp ~/.ssh/$file $USERNAME@$SERVER:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ssh $USERNAME@$SERVER</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat $file &gt;&gt; .ssh/authorized_keys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rm $file</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个脚本里的<code>scp</code>是在本地与服务器之间交换文件的意思，最后一个冒号表示当前文件夹，而<code>$USERNAME@SERVER</code>即目标服务器的用户文件夹，这就对上了。</p><p><code>cat</code>是读取所有文本内容到输出流，<code>&gt;&gt;</code>是把输出流内容添加到目标文件的末尾。</p><p><code>rm</code>是删除，这里代表传送的<code>file</code>是一个中转文件的意思，为啥要中转，你猜。</p><p>最后，为了防止<code>ssh</code>超时断开，可以在本地（客户端）的<code>ssh</code>配置文件中补一下以下配置，这样每分钟发送一次消息给服务端，服务端就不会主动清理客户端了。相信我，如果不解决这个问题，后续你会很头疼的。</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># /etc/ssh/ssh_config</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">HOST</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ServerAliveInternal 60</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="最后如何掌控linux以下给出一部分经验笔记">最后，如何掌控Linux，以下给出一部分经验笔记<a class="hash-link" href="#最后如何掌控linux以下给出一部分经验笔记" title="标题的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-------------------------------------">-------------------------------------<a class="hash-link" href="#-------------------------------------" title="标题的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-ubuntu-initialization">BEST-PRACTICE: ubuntu initialization<a class="hash-link" href="#best-practice-ubuntu-initialization" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-0-install">step 0. install<a class="hash-link" href="#step-0-install" title="标题的直接链接">​</a></h3><ul><li><a href="https://releases.ubuntu.com/18.04/" target="_blank" rel="noopener noreferrer">Ubuntu 18.04.6 LTS (Bionic Beaver)</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-config-apt-source">step 1. config apt source<a class="hash-link" href="#step-1-config-apt-source" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-change-apt-source">1. change apt source<a class="hash-link" href="#1-change-apt-source" title="标题的直接链接">​</a></h4><p>ref:</p><ul><li><a href="https://zhuanlan.zhihu.com/p/61228593" target="_blank" rel="noopener noreferrer">【Ubuntu】Ubuntu 18.04 LTS 更换国内源——解决终端下载速度慢的问题 - 知乎</a></li></ul><h5 class="anchor anchorWithStickyNavbar_LWe7" id="fastestscript-way-直接修改etcaptsourceslist">fastest/script way: 直接修改<code>/etc/apt/sources.list</code><a class="hash-link" href="#fastestscript-way-直接修改etcaptsourceslist" title="标题的直接链接">​</a></h5><p><del>其中，第一种方案虽然可行，但是有两个缺点，一个是侵入性高，所以一般都会先备份一下原文件，然后使用替换命令。</del></p><p>Update 2022-01-24：实际上所有方式底层都是通过修改apt sources.list文件配置的，所以没有什么侵入性一说，都会先做备份。</p><p>GUI版（也就是<code>softwares &amp; update</code> app里会提供测试，自动修改，改完之后触发更新操作，而这些其实可以自己用脚本完成，响应也更快！</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># backup source file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APT_SOURCES_LIST_FILE=/etc/apt/sources.list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp $APT_SOURCES_LIST_FILE $APT_SOURCES_LIST_FILE.bak</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># change source</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APT_SOURCE="http://mirrors.yun-idc.com/ubuntu/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo sed -i  "s|deb \S+|deb $APT_SOURCE|g" $APT_SOURCES_LIST_FILE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># update source</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt update</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>另一个就是，只能填入自己想填的源，但很可能不是最好的源。比如我一直以为阿里云的源很好，结果这次发现，极其地慢，我确认在<code>update</code>时走的是<code>cn.xxx</code>，但依旧只有十几k。</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="robustestrecommend-for-newbie-way-在softwares--update里修改server">robustest/recommend-for-newbie way: 在<code>softwares &amp; update</code>里修改server<a class="hash-link" href="#robustestrecommend-for-newbie-way-在softwares--update里修改server" title="标题的直接链接">​</a></h5><p>第二种办法就是在<code>softwares &amp; update</code>里自动测试最好的服务器，然后选择它。我测出来是<code>yun-idc</code>最好，但是因为我没用过，所以当时没考虑它，后来被阿里云折磨的不行了，就试了它，结果飞快，十兆每秒！</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="use-others-way-使用别人写好的-git仓库进行配置">use others way: 使用别人写好的 git仓库进行配置<a class="hash-link" href="#use-others-way-使用别人写好的-git仓库进行配置" title="标题的直接链接">​</a></h5><p>第三种办法，由于我还没配好源，所以也没git，而此时下载git又会极其地慢，所以也不考虑。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-update-apt">2. update apt<a class="hash-link" href="#2-update-apt" title="标题的直接链接">​</a></h4><p>!!!tip
If the following commands warn that files are locked, then wait for some minutes, or use <code>lsof FILE</code> to have a check, more refer to: - <a href="https://zhuanlan.zhihu.com/p/126538251" target="_blank" rel="noopener noreferrer">解决apt-get /var/lib/dpkg/lock-frontend 问题 - 知乎</a></p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt get update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt get upgrade</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-config-git">step 2. config git<a class="hash-link" href="#step-2-config-git" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt get git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git config --global user.name YOUR_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git config --global user.email YOUR_EMAIL </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-config-terminal">step 3. config terminal<a class="hash-link" href="#step-3-config-terminal" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-4-config-language">step 4. config language<a class="hash-link" href="#step-4-config-language" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-1-config-chinese-input-source-via-ibus">resolution 1: config chinese input source via ibus<a class="hash-link" href="#resolution-1-config-chinese-input-source-via-ibus" title="标题的直接链接">​</a></h4><p>ibus输入方式和搜狗输入法之间不是很兼容，如果出现两者都无法输入中文的情况，建议根据<a href="https://www.jianshu.com/p/c04a4b03d30f" target="_blank" rel="noopener noreferrer">Ubuntu 18.04LTS 安装中文输入法以及快捷键设置 - 简书</a>先卸载搜狗输入法，确认ibus是可以用的，具体就是：<code>sudo apt-get remove fcitx*</code></p><p>确认以下配置：</p><ol><li><p>设置 - 地区与语言 - 输入法，中要添加包含智能拼音：</p><img loading="lazy" alt="picture 5" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/notes-1642268594063-def6bf87b276425161475a3ce55fbb05d8bb305b913ae5b39cc6e9708a6e32ae.png" class="img_ev3q"></li><li><p>语言支持中，要启用ibus方案</p><img loading="lazy" alt="picture 7" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/notes-1642268691854-043dc8408c8326d13213bc92302c26f2d85b2be6a2892dbc58cf3d3349c9c8bc.png" class="img_ev3q"><p>注销账号重新登录即可。</p></li><li><p>如果注销账号还不行， 就要尝试<code>sudo reboot</code>一下。</p></li></ol><h4 class="anchor anchorWithStickyNavbar_LWe7" id="fixme-resolution-2-config-chinese-input-source-via-sougou">FIXME: resolution 2: config chinese input source via sougou<a class="hash-link" href="#fixme-resolution-2-config-chinese-input-source-via-sougou" title="标题的直接链接">​</a></h4><p>虽然按照官网走了好几遍，但始终还是没有配成这套方案，我也不知道什么原因。</p><p>而且ibus方案也必须在 fcitx 卸载之后才能正常使用。</p><p>参考官网：</p><ul><li><a href="https://pinyin.sogou.com/linux/" target="_blank" rel="noopener noreferrer">搜狗输入法 for linux</a></li></ul><p>更新：
确保：</p><ol><li><p>输入源中只有一个英文（不要有ibus的中文，否则会干扰）</p><img loading="lazy" alt="picture 8" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/notes-1642273187873-a0b1b31105b8e9fdea3ea0c576bc3e81e15cd6dec9c1dfb55a43d3a64ece559d.png" class="img_ev3q"></li><li><p>输入系统用<code>fcitx</code></p></li></ol><img loading="lazy" alt="picture 9" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/notes-1642273215269-68b870e74dbe7fecdac78268144d73dc987602eddc24098c4e10763b540eb6bb.png" class="img_ev3q"><p>再更新：
算了吧，我个人觉得搜过ubuntu的bug是真地多，一会能用一会不能用，尤其是我在调成中文版能用后又调成英文版，然后用不了了，接着再怎么调中文版都用不了了，非常蛋疼。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-switch-language-input-source">how to switch language input source<a class="hash-link" href="#how-to-switch-language-input-source" title="标题的直接链接">​</a></h4><p>The best way is to directly install the Chinese version of ubuntu, since the Chinese feature is built-in.</p><p>However, what we download directly from the official ubuntu website, may not support chinese choice natively. So it highly depends on what distribution version of ubuntu we download.</p><p>ref:</p><ul><li><a href="https://blog.csdn.net/qq_31290747/article/details/94555163" target="_blank" rel="noopener noreferrer">(20条消息) ubuntu 切换中文输入法_<em>g_y</em>的博客-CSDN博客_ubuntu切换中文输入法</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-change-language-to-english">how to change language to english<a class="hash-link" href="#how-to-change-language-to-english" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo export LANGUAGE=en_US.UTF-8 |  sudo tee -a ~/.bashrc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://askubuntu.com/questions/133318/how-do-i-change-the-language-via-a-terminal" target="_blank" rel="noopener noreferrer">command line - How do I change the language via a terminal? - Ask Ubuntu</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="improve-a-script-to-init-ubuntu-may-not-work">IMPROVE: a script to init ubuntu (may not work)<a class="hash-link" href="#improve-a-script-to-init-ubuntu-may-not-work" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">version: 0.0.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">features:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    1. disable sudo password so running commands faster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    2. disable apt password so installing packages faster </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    3. enable arrow up/down to backward/forward search prefix command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    4. auto change deb(apt) source</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    5. auto install zsh, config oh-my-zsh, set as the default shell, you may need to switch to bash when build android in case of errors, it's easy just to input `bash` in terminal</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    6. re-login to make these changes work</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># !IMPORTANT: config global variables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PASSWORD=" "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --- step 1 ---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># write password variable into bash_profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "export PASSWORD=$PASSWORD" &gt;&gt; ~/.bash_profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">source ~/.bash_profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># disable sudo password, ref: https://askubuntu.com/a/878705</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "$PASSWORD\n$USER ALL=(ALL:ALL) NOPASSWD: ALL" | sudo -S tee /etc/sudoers.d/$USER # skip confirm based on -S</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --- step 1.5 ---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># enable backward/forward prefix commands search</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo '"\e[A": history-search-backward</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"\e[B": history-search-forward' &gt;&gt; ~/.inputrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --- step 1.7 ---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># change timezone, so that time display ok</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "export TZ='Asia/Shanghai'" &gt;&gt; ~/.profile # need relogin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --- step 2 ---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># update apt and install packages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># change apt source</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APT_SOURCE="http://mirrors.yun-idc.com/ubuntu/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APT_SOURCES_LIST_FILE=/etc/apt/sources.list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo sed -i.bak -r  "s|deb \S+|deb $APT_SOURCE|g" $APT_SOURCES_LIST_FILE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "Y" | sudo apt update # need confirm but skipped since configured</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "Y" | sudo apt upgrade</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">INSTALLED_PACKAGES="vim git htop zsh terminator"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $INSTALLED_PACKAGES | xargs sudo apt install -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --- step 3 ---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># modify timezone (need relogin)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export "TZ=Asia/Shanghai'\n" &gt;&gt; ~/.profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --- step 4 ---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># configure zsh (installed in \$INSTALLED_PACKAGES) / oh-my-zsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># install oh-my-zsh (built-in backward search)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yes | sh install.sh </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --- step 5 ---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># diy zsh based on 'oh-my-zsh'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># add dynamical time display</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "setopt PROMPT_SUBST</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PROMPT='%B%F{yellow}[%D{%L:%M:%S}]%f:%F{green}\${\${(%):-%~}}%f$ %b'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">" &gt;&gt; ~/.zshrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># set zsh as the default terminal (need relogin!)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo chsh -s $(which zsh) # after configed sudo, no need to input password</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># enable zsh changes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exec zsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --- step 6 ---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># re-login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo pkill -u $USER</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-connection-ssh">BEST-PRACTICE: linux connection (<code>ssh</code>)<a class="hash-link" href="#best-practice-linux-connection-ssh" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ssh-no-secretpassword">ssh no secret/password<a class="hash-link" href="#ssh-no-secretpassword" title="标题的直接链接">​</a></h3><p>It's easy that if only you generate a <code>id_rsa.pub</code> and <code>scp</code> to your <code>~/.ssh/authorization_keys</code> then things all done.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">username="xxx"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server="xxxxx"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">file="id_rsa.pub"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scp ~/.ssh/$file $username@$server:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ssh $username@$server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat $file &gt;&gt; .ssh/authorized_keys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rm $file</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://alvinalexander.com/linux-unix/how-use-scp-without-password-backups-copy/" target="_blank" rel="noopener noreferrer">How to use the Linux ‘scp’ command without a password to make remote backups | alvinalexander.com</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ssh-keep-connection-alive">ssh keep connection alive<a class="hash-link" href="#ssh-keep-connection-alive" title="标题的直接链接">​</a></h3><p>the simplest way is to force the client to keep sending <!-- -->[a null]<!-- --> message(packet) to the server, in case that the server closed the connection beyond the time limitation, and what you need to do is just to modify 2 lines in your <code>/etc/ssh/ssh_config</code> file.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo vim /etc/ssh/ssh_config</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>change into these:</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">HOST</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ServerAliveInternal 60</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>finally, maybe you should restart your client. If you use the mac, you can:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># restart-ssh, reference: https://gist.github.com/influx6/46c39709a67f09908cc7542ca444fca2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo launchctl stop com.openssh.sshd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo launchctl start com.openssh.sshd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-env-management">BEST-PRACTICE: linux env management<a class="hash-link" href="#best-practice-linux-env-management" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-change-apt-source">how to change apt source<a class="hash-link" href="#how-to-change-apt-source" title="标题的直接链接">​</a></h3><p>ref:</p><ul><li><a href="https://askubuntu.com/questions/104695/how-do-i-change-mirrors-in-ubuntu-server-from-regional-to-main" target="_blank" rel="noopener noreferrer">command line - How do I change mirrors in Ubuntu Server from regional to main? - Ask Ubuntu</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-1-manual-change-from-the-app-of-softwares--updates">resolution 1: manual change from the App of <code>Softwares &amp; Updates</code><a class="hash-link" href="#resolution-1-manual-change-from-the-app-of-softwares--updates" title="标题的直接链接">​</a></h4><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-2-modify-the-configuration-manually-from-the-terminal">resolution 2: modify the configuration manually from the terminal<a class="hash-link" href="#resolution-2-modify-the-configuration-manually-from-the-terminal" title="标题的直接链接">​</a></h4><blockquote><p>CONCLUSION</p></blockquote><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">MIRROR_FROM="us.archive.ubuntu.com"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MIRROR_TO="mirrors.tuna.tsinghua.edu.cn"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APT_FILE="/etc/apt/sources.list"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo sed -i "s|${MIRROR_FROM}|${MIRROR_TO}|g" ${APT_FILE}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>DETAIL</p></blockquote><p>There are a few mirror servers can be used in China:</p><ul><li>mirrors.tuna.tsinghua.edu.cn</li><li>ftp.sjtu.edu.cn</li><li>mirrors.aliyun.com</li><li>mirrors.huaweicloud.com</li><li>mirrors.yun-idc.com</li><li>...</li></ul><p>The format of these mirrors may be as <code>http://${MIRROR_URL}/ubuntu/</code></p><p>And the default configuration of ubuntu servers are at <code>/etc/apt/sources.list</code>, with a copy of backup at <code>/etc/apt/sources.list.save</code>.</p><p>Here is what the <code>save</code> contents are:</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// /etc/apt/sources.list.save</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#deb cdrom:[Ubuntu 18.04.6 LTS _Bionic Beaver_ - Release amd64 (20210915)]/ bionic main restricted</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># newer versions of the distribution.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//us.archive.ubuntu.com/ubuntu/ bionic main restricted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://us.archive.ubuntu.com/ubuntu/ bionic main restricted</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## Major bug fix updates produced after the final release of the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## distribution.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//us.archive.ubuntu.com/ubuntu/ bionic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">updates main restricted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## team. Also, please note that software in universe WILL NOT receive any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## review or updates from the Ubuntu security team.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//us.archive.ubuntu.com/ubuntu/ bionic universe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://us.archive.ubuntu.com/ubuntu/ bionic universe</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//us.archive.ubuntu.com/ubuntu/ bionic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">updates universe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-updates universe</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## team, and may not be under a free licence. Please satisfy yourself as to </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## your rights to use the software. Also, please note that software in </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## multiverse WILL NOT receive any review or updates from the Ubuntu</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## security team.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//us.archive.ubuntu.com/ubuntu/ bionic multiverse</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://us.archive.ubuntu.com/ubuntu/ bionic multiverse</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//us.archive.ubuntu.com/ubuntu/ bionic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">updates multiverse</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-updates multiverse</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## N.B. software from this repository may not have been tested as</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## extensively as that contained in the main release, although it includes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## newer versions of some applications which may provide useful features.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## Also, please note that software in backports WILL NOT receive any review</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## or updates from the Ubuntu security team.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//us.archive.ubuntu.com/ubuntu/ bionic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">backports main restricted universe multiverse</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## Uncomment the following two lines to add software from Canonical's</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## 'partner' repository.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## This software is not part of Ubuntu, but is offered by Canonical and the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## respective vendors as a service to Ubuntu users.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb http://archive.canonical.com/ubuntu bionic partner</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://archive.canonical.com/ubuntu bionic partner</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//security.ubuntu.com/ubuntu bionic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">security main restricted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://security.ubuntu.com/ubuntu bionic-security main restricted</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//security.ubuntu.com/ubuntu bionic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">security universe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://security.ubuntu.com/ubuntu bionic-security universe</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deb http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//security.ubuntu.com/ubuntu bionic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">security multiverse</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deb-src http://security.ubuntu.com/ubuntu bionic-security multiverse</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-know-whats-the-os-platform">how to know what's the os platform<a class="hash-link" href="#how-to-know-whats-the-os-platform" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># mac: Darwin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">uname</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># if platform is mac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [[ $(uname) == Darwin ]];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">then XXX;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">else YYY;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/3466166/how-to-check-if-running-in-cygwin-mac-or-linux" target="_blank" rel="noopener noreferrer">bash - How to check if running in Cygwin, Mac or Linux? - Stack Overflow</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-configure-python-environment">how to configure python environment<a class="hash-link" href="#how-to-configure-python-environment" title="标题的直接链接">​</a></h3><ol><li>install the python on the server, the version of which would better correspond with the one of the local in case of
unexpected error caused by version difference</li><li>use <code>virtualenv</code> to create an env based on this python version named <code>venv_py</code> under this working directory</li><li>activate this env</li><li>use <code>pip</code> to install the <code>requirements.txt</code></li><li>run!</li></ol><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">PY_VERSION=python3.9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># install the target python version based on its version number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># if you don't use these two lines, then you would suffer from `wget blablabla...` when you checked what the hell the python repo url is </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install software-properties-common -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo add-apt-repository ppa:deadsnakes/ppa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install ${PY_VERSION}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># use `virtualenv` to create and activate a new python env fast~</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install virtualenv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virtualenv -p ${PY_VERSION} venv_py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">source venv_py/bin/activate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># install all the requirements</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># if you need to dump all the requirements of a python project used, you can use `pip freeze &gt; requirements.txt` so that a file named of `requirements.txt` would be generated under the current directory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pip install -r requirements.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># run our backend of `fastapi`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">python main.py</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-cannot-use-sudo-apt-get-install-xxx-to-install-packages">✅ cannot use <code>sudo apt-get install xxx</code> to install packages<a class="hash-link" href="#-cannot-use-sudo-apt-get-install-xxx-to-install-packages" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd /var/lib/dpkg/updates</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rm -rf ./*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get disk-upgrade # it may cost a little of time</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><p>I changed the suggestion in this article from <code>rm -r</code> to <code>rm -rf</code>, otherwise not successful.</p><ul><li><a href="https://www.codeprj.com/blog/a352621.html" target="_blank" rel="noopener noreferrer">E:dpkg was interrupted, you must manually run'dpkg配置'to correct the problem. - 码上快乐</a></li></ul><p>This discussion seems wonderful but didn't get my problem solved.</p><ul><li><a href="https://askubuntu.com/questions/410045/the-package-lists-or-status-file-could-not-be-parsed-or-opened" target="_blank" rel="noopener noreferrer">apt - "The package lists or status file could not be parsed or opened" - Ask Ubuntu</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-file-system-management">BEST-PRACTICE: linux file system management<a class="hash-link" href="#best-practice-linux-file-system-management" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="mkdir-if-not-exist">mkdir if not exist<a class="hash-link" href="#mkdir-if-not-exist" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p DIR</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://pubs.opengroup.org/onlinepubs/009695399/utilities/mkdir.html" target="_blank" rel="noopener noreferrer">mkdir</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ls-and-delete-files">ls and delete files<a class="hash-link" href="#ls-and-delete-files" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ls | grep STR | xargs rm -f</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>WARNING! Since the operation pipeline is silent,  <a href="https://stackoverflow.com/questions/20858524/delete-a-list-of-files-with-find-and-grep#:~:text=you%20are%20likely%20to%20remove%20files%20that%20you%20did%20not%20intend%20to%20remove" target="_blank" rel="noopener noreferrer">you are likely to remove files that you did not intend to remove</a>.</p><p>Hence, you'd better use <code>ls | grep STR</code> first to check whether all the files to remove meet your expectation.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fastest-delete-file">fastest delete file<a class="hash-link" href="#fastest-delete-file" title="标题的直接链接">​</a></h3><p>Don't bother checking if the file exists, just try to remove it.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rm -f PATH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew install dialog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># or</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rm PATH 2&gt; /dev/null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -name 'test'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [ "$BLEG" != xxx ]; then command; fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">Test</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/31318068/shell-script-to-remove-a-file-if-it-already-exist/31318262" target="_blank" rel="noopener noreferrer">shell script to remove a file if it already exist - Stack Overflow</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-show-absolute-path-of-file-from-relative">how to show absolute path of file from relative<a class="hash-link" href="#how-to-show-absolute-path-of-file-from-relative" title="标题的直接链接">​</a></h3><p>I cannot use <code>brew install realpath</code> like their <code>apt install realpath</code>, but I can use <code>realpath</code>, which may be pre-built-in.</p><p>Plus, later I saw that maybe realpath is a submodule of mac package, which is named as <code>findutils</code>.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">realpath FILE</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/4175264/how-to-retrieve-absolute-path-given-relative" target="_blank" rel="noopener noreferrer">bash - How to retrieve absolute path given relative - Stack Overflow</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-copy-file-into-clipboard">how to copy file into clipboard<a class="hash-link" href="#how-to-copy-file-into-clipboard" title="标题的直接链接">​</a></h3><p>core ref: <a href="https://apple.stackexchange.com/a/15327" target="_blank" rel="noopener noreferrer">https://apple.stackexchange.com/a/15327</a></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="its-easy-to-copy-a-text-file">it's easy to copy a text file<a class="hash-link" href="#its-easy-to-copy-a-text-file" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># copy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pbcopy &lt; FILE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># paste to command line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pbpaste</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># paste to a new file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pbpaste &gt; FILE2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>But attention, the <code>pbpaste</code> would cause corruption when deals with binary file.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="but-it-cannot-be-done-for-a-binary-file">but it cannot be done for a binary file<a class="hash-link" href="#but-it-cannot-be-done-for-a-binary-file" title="标题的直接链接">​</a></h4><p>Since the traditional <code>command + c | command + v</code> is just copy the reference of file into clipboard, instead of the content itself, we had no way to use <code>pbcopy</code> to copy a file, and then use <code>command + v</code> to paste at another place.</p><p>A solution is to use osascript.</p><div class="language-osascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-osascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/usr/bin/osascript</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">on run args</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  set abs_path to do shell script "/usr/local/bin/greadlink -f -- " &amp; (first item of args)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  set the clipboard to POSIX file abs_path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://apple.stackexchange.com/questions/15318/how-to-use-terminal-to-copy-a-file-to-the-clipboard" target="_blank" rel="noopener noreferrer">mac - How to use terminal to copy a file to the clipboard? - Ask Different</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-show-file-size">how to show file size<a class="hash-link" href="#how-to-show-file-size" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># -l show detail </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># -h show 'human readable size</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ls -lh FILE/DIR</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://www.tutorialrepublic.com/faq/how-to-make-ls-command-to-show-file-sizes-in-megabytes-in-ubuntu.php" target="_blank" rel="noopener noreferrer">How to Make ls Command to Show File Sizes in Megabytes in Ubuntu</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-compare-between-files-diff--vimdiff">how to compare between files (<code>diff</code> &amp; <code>vimdiff</code>)<a class="hash-link" href="#how-to-compare-between-files-diff--vimdiff" title="标题的直接链接">​</a></h3><ul><li>see: <a href="https://stackoverflow.com/questions/17195308/unix-diff-side-to-side-results" target="_blank" rel="noopener noreferrer">bash - unix diff side-to-side results? - Stack Overflow</a></li></ul><p>There is a few of <code>diff</code> commands for us to choose.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-1-diff-f1-f2">resolution 1: <code>diff F1 F2</code><a class="hash-link" href="#resolution-1-diff-f1-f2" title="标题的直接链接">​</a></h4><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-hwoto-1642517649112-cb2bf00d7a0d7d954fdc039c3862869a96a67c75fc4190101616cd5b3ad0495a.png" alt="picture 9" class="img_ev3q">  </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-2-diff--y-f1-f2-or-sdiff-f1-f2">resolution 2: <code>diff -y F1 F2</code> or <code>sdiff F1 F2</code><a class="hash-link" href="#resolution-2-diff--y-f1-f2-or-sdiff-f1-f2" title="标题的直接链接">​</a></h4><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-hwoto-1642517708938-fd8d1056dcc311fca0ff60316445a2fea77f670b4d7353cea9d6034775beb75a.png" alt="picture 10" class="img_ev3q">  </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-3-vimdiff-f1-f2">resolution 3: <code>vimdiff F1 F2</code><a class="hash-link" href="#resolution-3-vimdiff-f1-f2" title="标题的直接链接">​</a></h4><p>It's awesome! Isn't it?</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-hwoto-1642517738027-4beec462aa9bda3ff2127c563de64a20d8703edc7774603372fce03807992a96.png" alt="picture 12" class="img_ev3q">  </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="todo-resolution-4-git-diff">TODO: resolution 4: git diff<a class="hash-link" href="#todo-resolution-4-git-diff" title="标题的直接链接">​</a></h4><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fixme-how-to-copymove-directory-files-correctly-to-soft-links-under-target-directory-without-affecting-git">FIXME: how to copy/move directory files correctly to soft links under target directory without affecting git?<a class="hash-link" href="#fixme-how-to-copymove-directory-files-correctly-to-soft-links-under-target-directory-without-affecting-git" title="标题的直接链接">​</a></h3><p>example:</p><p>When I zipped one modified <code>frameworks/native</code> directory to be e.g. <code>RAW</code>, and then reset the <code>frameworks/native</code> to be the init.</p><p>Then I move all the files under <code>RAW</code> to <code>frameworks/native</code> with the command:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cp -r RAW/* TARGET/frameworks/native/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The error arose up since there are soft links under <code>frameworks/native</code>, such as <code>libs/ui</code> which is indeed <code>libs/ui -&gt; XXX/ui</code>.</p><p>However, in my zipped file of <code>RAW</code>, the links seemingly have turned to be the real files/dirs, which introduced the problem <code>directory  --&gt; non-directory</code>.</p><p>The wanted effect is copying/moving all the files under conflicted directory to where they should be.</p><p>However, the git marked those files as <code>TypeChange</code>...</p><p>ref:</p><ul><li><p><a href="https://superuser.com/questions/1395407/cp-cannot-overwrite-directory-with-non-directory/1395410" target="_blank" rel="noopener noreferrer">linux - cp: cannot overwrite directory with non-directory - Super User</a></p></li><li><p><a href="https://unix.stackexchange.com/questions/555985/cp-recursively-into-a-directory-that-symlinks-to-dirs-of-same-name-as-in-source" target="_blank" rel="noopener noreferrer">cp recursively into a directory that symlinks to dirs of same name as in source - Unix &amp; Linux Stack Exchange</a></p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-disk-management">BEST-PRACTICE: linux disk management<a class="hash-link" href="#best-practice-linux-disk-management" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ncdu-disk-space-tui"><code>ncdu</code>, disk space tui<a class="hash-link" href="#ncdu-disk-space-tui" title="标题的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="baobab-disk-space-gui"><code>baobab</code>, disk space gui<a class="hash-link" href="#baobab-disk-space-gui" title="标题的直接链接">​</a></h3><p>ref:</p><ul><li><p><a href="https://askubuntu.com/questions/73160/how-do-i-find-the-amount-of-free-space-on-my-hard-drive" target="_blank" rel="noopener noreferrer">disk usage - How do I find the amount of free space on my hard drive? - Ask Ubuntu</a></p></li><li><p><a href="https://formulae.brew.sh/formula/baobab" target="_blank" rel="noopener noreferrer">baobab — Homebrew Formulae</a></p></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="install-problem">install problem<a class="hash-link" href="#install-problem" title="标题的直接链接">​</a></h4><p>When installing <code>ncdu</code>, error ocurred: <a href="https://stackoverflow.com/questions/44678437/no-such-file-or-directory-rb-sysopen-ruby" target="_blank" rel="noopener noreferrer">No such file or directory @ rb_sysopen ruby - Stack Overflow</a></p><p>The reason is that some dependency is missing, we can first install it and then install the target.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">brew install librsvg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brew install baobab</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="effects">effects<a class="hash-link" href="#effects" title="标题的直接链接">​</a></h4><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-hwoto-1642600987157-8df330aac5a1fedd7d6c5f6d46f98256fedfcfa18b3f4f3ba05914fc06e19ac4.png" alt="picture 7" class="img_ev3q">  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-shells-management">BEST-PRACTICE: linux shells management<a class="hash-link" href="#best-practice-linux-shells-management" title="标题的直接链接">​</a></h2><p>ref:</p><p>this article is enough and recommended:</p><ul><li><p><a href="https://www.cyberciti.biz/faq/how-to-change-shell-to-bash/" target="_blank" rel="noopener noreferrer">How To Change Shell To Bash in Linux / Unix - nixCraft</a></p></li><li><p><a href="https://unix.stackexchange.com/questions/140286/how-to-find-list-of-available-shells-by-command-line" target="_blank" rel="noopener noreferrer">How to find list of available shells by command-line? - Unix &amp; Linux Stack Exchange</a></p></li><li><p><a href="https://www.cyberciti.biz/tips/how-do-i-find-out-what-shell-im-using.html" target="_blank" rel="noopener noreferrer">How do I find out what shell I am using on Linux/Unix? - nixCraft</a></p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="list-all-the-shells">list all the shells<a class="hash-link" href="#list-all-the-shells" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ cat /etc/shells # list valid login shells</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/bin/sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/bin/rbash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/bin/dash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/bin/zsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/bin/zsh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="background-sh-is-different-with-bash">background: <code>sh</code> is different with <code>bash</code><a class="hash-link" href="#background-sh-is-different-with-bash" title="标题的直接链接">​</a></h3><p>When I write <code>source</code> in shell script, and run by <code>sh xx.sh</code>, then it failed with <code>no permission</code>.</p><p>However, when I use <code>bash xx.sh</code>, then everything runs well.</p><p>Thus, the <code>sh</code> definitely doesn't equal as <code>bash</code>, and it seems that function of <code>sh</code> is the subset of <code>bash</code>.</p><p>If so, why I still need to use <code>sh</code>? Just for short?</p><img loading="lazy" alt="picture 8" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640152196813-linux-howto-84174e9e7dbb6fcc489b015f68e1c88b23fc19874bfcba40c3171f17cc8051a1.png" width="480" class="img_ev3q"><p>ref:
<a href="https://stackoverflow.com/a/48785960/9422455" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/a/48785960/9422455</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="see-whats-the-current-shell">see what's the current Shell<a class="hash-link" href="#see-whats-the-current-shell" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[1:42:41]:~$ echo $SHELL </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/bin/zsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[1:43:25]:~$ echo $0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/bin/zsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[1:43:29]:~$ ps -p $$</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   PID TTY          TIME CMD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 29657 pts/2    00:00:00 zsh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="switch-shell">switch shell<a class="hash-link" href="#switch-shell" title="标题的直接链接">​</a></h3><p>You can change your default shell using the chsh (“change shell” ) command as follows.</p><p>The syntax is:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chsh -s {shell-name-here}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chsh -s {shell-name-here} {user-name-here}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># samples</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chsh -s /bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chsh -s /bin/bash $USER</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="set-zsh-as-the-default-terminal-need-re-login">set zsh as the default terminal (need re-login)<a class="hash-link" href="#set-zsh-as-the-default-terminal-need-re-login" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">chsh -s $(which zsh)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://askubuntu.com/questions/131823/how-to-make-zsh-the-default-shell" target="_blank" rel="noopener noreferrer">https://askubuntu.com/questions/131823/how-to-make-zsh-the-default-shell</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-terminal-management">BEST-PRACTICE: linux terminal management<a class="hash-link" href="#best-practice-linux-terminal-management" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-the-terminal-cannot-up-down-after-editing">✅ the terminal cannot up down after editing<a class="hash-link" href="#-the-terminal-cannot-up-down-after-editing" title="标题的直接链接">​</a></h3><p>This is a problem confused me for a long time.</p><p>Today, I finally knows what's the hell at: <a href="https://stackoverflow.com/questions/18489216/how-to-scroll-up-and-down-in-sliced-screen-terminal" target="_blank" rel="noopener noreferrer">linux - How to scroll up and down in sliced "screen" terminal - Stack Overflow</a></p><p>Anyway, terminal is hard to learn, I just know <code>control + a</code> can help me exit the so-called copy mode.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="todo-bind-option--arrow-to-jump-word-in-zsh-on-ubuntu-vmware-on-macos">TODO: bind <code>option + arrow</code> to jump word in zsh on ubuntu vmware on MacOS<a class="hash-link" href="#todo-bind-option--arrow-to-jump-word-in-zsh-on-ubuntu-vmware-on-macos" title="标题的直接链接">​</a></h3><blockquote><p>ref</p></blockquote><ul><li>✨ <a href="https://help.ubuntu.com/stable/ubuntu-help/shell-keyboard-shortcuts.html.en" target="_blank" rel="noopener noreferrer">Useful keyboard shortcuts</a></li><li><a href="https://www.google.com/search?newwindow=1&amp;sxsrf=AOaemvJocqqP64PM0tOaO5QuVGhGgwR1kw%3A1643272448532&amp;lei=AFnyYY_8H8G4mAWLj7C4Cg&amp;q=zsh%20jump%20word&amp;ved=2ahUKEwiP_MD0wtH1AhVBHKYKHYsHDKcQsKwBKAN6BAg-EAQ&amp;biw=1629&amp;bih=945&amp;dpr=2.2" target="_blank" rel="noopener noreferrer">zsh jump word - Google Search</a></li><li><a href="https://superuser.com/questions/427163/altarrow-moving-between-words-in-zsh-and-iterm2" target="_blank" rel="noopener noreferrer">keyboard shortcuts - ALT+arrow moving between words in zsh and iTerm2 - Super User</a></li><li><a href="https://support.apple.com/en-hk/guide/terminal/trmlshtcts/mac" target="_blank" rel="noopener noreferrer">Keyboard shortcuts in Terminal on Mac - Apple Support (HK)</a></li><li><a href="https://superuser.com/questions/349439/how-to-bind-command-key-in-zsh" target="_blank" rel="noopener noreferrer">key binding - How to bind command key in zsh? - Super User</a></li><li><a href="https://gist.github.com/YumaInaura/27bb1f79881a63bed2fb9635cbaed73b" target="_blank" rel="noopener noreferrer">Zsh — Mac OS option key for bindkey</a></li><li><a href="https://www.google.com/search?q=what+key+i%27m+pressing&amp;oq=what+key+i+am&amp;aqs=chrome.1.69i57j0i10j0i22i30l8.6503j0j4&amp;sourceid=chrome&amp;ie=UTF-8" target="_blank" rel="noopener noreferrer">what key i'm pressing - Google Search</a></li><li><a href="https://en.key-test.ru/" target="_blank" rel="noopener noreferrer">"Key-Test" - keyboard test online</a></li><li><a href="https://unix.stackexchange.com/questions/58870/ctrl-left-right-arrow-keys-issue" target="_blank" rel="noopener noreferrer">zsh - Ctrl + left/right arrow keys issue - Unix &amp; Linux Stack Exchange</a></li><li><a href="https://stackoverflow.com/questions/12382499/looking-for-altleftarrowkey-solution-in-zsh" target="_blank" rel="noopener noreferrer">shell - Looking for ALT+LeftArrowKey solution in zsh - Stack Overflow</a></li><li><a href="https://unix.stackexchange.com/questions/94331/how-can-i-delete-a-word-backward-at-the-command-line-bash-and-zsh" target="_blank" rel="noopener noreferrer">keyboard shortcuts - How can I delete a word backward at the command line (bash and zsh)? - Unix &amp; Linux Stack Exchange</a></li><li><a href="https://askubuntu.com/questions/1017287/how-to-delete-words-in-the-terminal-with-ctrl-backspace-like-in-the-rest-of-ubun" target="_blank" rel="noopener noreferrer">command line - How to delete words in the terminal with Ctrl-Backspace like in the rest of Ubuntu? - Ask Ubuntu</a></li><li><a href="https://askubuntu.com/questions/162247/why-does-ctrl-left-arrow-not-skip-words" target="_blank" rel="noopener noreferrer">12.04 - Why does ctrl + left arrow not skip words? - Ask Ubuntu</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-commands-management">BEST-PRACTICE: linux commands management<a class="hash-link" href="#best-practice-linux-commands-management" title="标题的直接链接">​</a></h2><blockquote><p>⚠️</p><ol><li>be careful to use `<!-- -->`<!-- -->` in terminal / shell since it's would be treated as executable commands:<img loading="lazy" alt="picture 9" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-hwoto-1641501462043-6790c46051fa5db1246b560e795c5b1737d5e508faf7a9247b1c52e1ce4abdbc.png" class="img_ev3q">see: [(20条消息) shell基础知识-echo及单引号、反引号和双引号详解_Luckiers的博客-CSDN博客_echo单引号和双引号](https://blog.csdn.net/Luckiers/article/details/103501168)</li></ol></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-auto-input-in-command">how to auto input in command<a class="hash-link" href="#how-to-auto-input-in-command" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="auto-input-password-for-sudo-commands">auto input password for sudo commands<a class="hash-link" href="#auto-input-password-for-sudo-commands" title="标题的直接链接">​</a></h4><blockquote><p>sparkles: Use <code>sudo -S</code> to read input from stdin.</p></blockquote><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># sample</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "$PASSWORD\n$USER ALL=(ALL:ALL) NOPASSWD: ALL" | sudo -S tee /etc/sudoers.d/$USER # no password for sudo</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://superuser.com/questions/67765/sudo-with-password-in-one-command-line" target="_blank" rel="noopener noreferrer">shell - sudo with password in one command line? - Super User</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="auto-yes-for-some-command-yes--">auto yes for some command (<code>yes | </code>)<a class="hash-link" href="#auto-yes-for-some-command-yes--" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yes | COMMAND</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yes | sh ./install.sh # install oh-my-zsh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/7642674/how-do-i-script-a-yes-response-for-installing-programs/34176780" target="_blank" rel="noopener noreferrer">linux - How do I script a "yes" response for installing programs? - Stack Overflow</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="auto-yes-for-apt-installing-packages--y">auto yes for <code>apt</code> installing packages (<code>-y</code>)<a class="hash-link" href="#auto-yes-for-apt-installing-packages--y" title="标题的直接链接">​</a></h4><p>Just add a <code>-y</code> in the command.</p><p>Example:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install -y htop</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://askubuntu.com/questions/448358/apt-get-install-with-assume-yes-is-still-prompting-me-to-install-dependencies" target="_blank" rel="noopener noreferrer">apt-get install with --assume-yes is still prompting me to install dependencies - Ask Ubuntu</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-search-commands-by-prefix-history-search-backwardforward">how to search commands by prefix (<code>history-search-backward/forward</code>)<a class="hash-link" href="#how-to-search-commands-by-prefix-history-search-backwardforward" title="标题的直接链接">​</a></h3><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># ~/.inputrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Respect default shortcuts.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$include /etc/inputrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># choice 1: recommended</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">"\e[A"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> history</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">search</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">backward     </span><span class="token comment" style="color:#999988;font-style:italic"># arrow up      --&gt; backward</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">"\e[B"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> history</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">search</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">forward      </span><span class="token comment" style="color:#999988;font-style:italic"># arrow down    --&gt; forward</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># choice 2: if prefer to the page up/down</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">"\e[5~"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> history</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">search</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">backward    </span><span class="token comment" style="color:#999988;font-style:italic"># page up       --&gt; backward</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">"\e[6~"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> history</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">search</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">forward     </span><span class="token comment" style="color:#999988;font-style:italic"># page down     --&gt; forward</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>;warning: you should <strong>Close and re-open all terminals for the new behavior to become effective.</strong></p></blockquote><p>ref:</p><ul><li><p><a href="https://askubuntu.com/a/59855" target="_blank" rel="noopener noreferrer">https://askubuntu.com/a/59855</a></p></li><li><p><a href="https://unix.stackexchange.com/questions/231605/search-for-a-previous-command-with-the-prefix-i-just-typed" target="_blank" rel="noopener noreferrer">bash - Search for a previous command with the prefix I just typed - Unix &amp; Linux Stack Exchange</a></p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-repeat-command">how to repeat command<a class="hash-link" href="#how-to-repeat-command" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#  only show the last result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">watch -n X command # X: X seconds; command may need quotes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># show all the result history</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while true; do command; sleep X; done; # command may need quotes</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://askubuntu.com/questions/430382/repeat-a-command-every-x-interval-of-time-in-terminal" target="_blank" rel="noopener noreferrer">bash - Repeat a command every x interval of time in terminal? - Ask Ubuntu</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-use-variable-as-multi-args">how to use variable as multi args<a class="hash-link" href="#how-to-use-variable-as-multi-args" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># when there's only one arg as a variable, it's ok to directly use it, and the following two methods are equal</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PACKAGE_TO_INSTALL="vim"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PACKAGE_TO_INSTALL=vim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install -y $PACKAGE_TO_INSTALL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># However, if there are multi args as a variable, we need to use [`echo`](https://stackoverflow.com/a/30061925/9422455) to escape the 'hidden quotes' if I didn't understand wrongly. And also, the quotes can't be omitted, or use slashes.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PACKAGES_TO_INSTALL="vim git htop zsh terminator"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PACKAGES_TO_INSTALL=vim\ git\ htop\ zsh\ terminator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install -y $(echo $INSTALLED_PACKAGES)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Since the `echo` is not safe, another way is to use [`xargs`](https://stackoverflow.com/a/51242645/9422455), which seems more professional</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PACKAGES_TO_INSTALL="vim git htop zsh terminator"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $PACKAGE_TO_INSTALL | xargs sudo apt install -y</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><p><a href="https://stackoverflow.com/questions/9733338/shell-script-remove-first-and-last-quote-from-a-variable" target="_blank" rel="noopener noreferrer">string - Shell script - remove first and last quote (") from a variable - Stack Overflow</a></p></li><li><p><a href="https://stackoverflow.com/questions/30061682/bash-send-string-argument-as-multiple-arguments" target="_blank" rel="noopener noreferrer">bash send string argument as multiple arguments - Stack Overflow</a></p></li><li><p><a href="https://unix.stackexchange.com/questions/637496/escaping-quotes-inside-a-quoted-string" target="_blank" rel="noopener noreferrer">shell - Escaping quotes inside a quoted string - Unix &amp; Linux Stack Exchange</a></p></li><li><p><a href="http://mywiki.wooledge.org/BashFAQ/050" target="_blank" rel="noopener noreferrer">BashFAQ/050 - Greg's Wiki</a></p></li><li><p><a href="https://stackoverflow.com/questions/5819423/bash-variables-with-spaces" target="_blank" rel="noopener noreferrer">Bash variables with spaces - Stack Overflow</a></p></li><li><p><a href="https://unix.stackexchange.com/questions/327784/how-to-assign-a-string-with-multiple-spaces-to-a-variable-in-bash" target="_blank" rel="noopener noreferrer">shell script - How to assign a string with multiple spaces to a variable in bash? - Unix &amp; Linux Stack Exchange</a></p></li><li><p><a href="https://stackoverflow.com/questions/7454526/variable-containing-multiple-args-with-quotes-in-bash" target="_blank" rel="noopener noreferrer">Variable containing multiple args with quotes in Bash - Stack Overflow</a></p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-set-an-alias">how to set an alias<a class="hash-link" href="#how-to-set-an-alias" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-1-in-terminal">resolution 1: in terminal<a class="hash-link" href="#resolution-1-in-terminal" title="标题的直接链接">​</a></h4><blockquote><p>⚠️ this solution only works upon the next command, which can work immediately when executed in shell script file</p></blockquote><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># don't add any other characters after alias in order to catch bug</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">alias sed=gsed</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-2-write-into-bash_aliases">resolution 2: write into <code>~/.bash_aliases</code><a class="hash-link" href="#resolution-2-write-into-bash_aliases" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ~/.bash_aliases</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">alias update='sudo yum update'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>⚠️ this solution needs to ensure the <code>.bash_aliases</code> enabled in <code>.bashrc</code></p></blockquote><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-howto-1643117544205-afe713493b26becfe498fda953bdc5c1d098accaf07b4e4b6b5e117b4d3671a1.png" alt="picture 47" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-resolution-3-use-bash_aliases-with-zsh">✨ resolution 3: use <code>.bash_aliases</code> with <code>zsh</code><a class="hash-link" href="#-resolution-3-use-bash_aliases-with-zsh" title="标题的直接链接">​</a></h4><p>Just add one line in <code>~/.zshrc</code>:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ~/.zshrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">source ~/.bash_aliases</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://www.cyberciti.biz/faq/create-permanent-bash-alias-linux-unix/" target="_blank" rel="noopener noreferrer">How to create a permanent Bash alias on Linux/Unix - nixCraft</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="unalias">unalias<a class="hash-link" href="#unalias" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># sample</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unalias logout</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://www.tecmint.com/create-alias-in-linux/" target="_blank" rel="noopener noreferrer">How to Create and Use Alias Command in Linux</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-compare-between-outputs-from-two-commands">how to compare between outputs from two commands<a class="hash-link" href="#how-to-compare-between-outputs-from-two-commands" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">diff &lt;(ls old) &lt;(ls new)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://askubuntu.com/questions/229447/how-do-i-diff-the-output-of-two-commands" target="_blank" rel="noopener noreferrer">How do I diff the output of two commands? - Ask Ubuntu</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-accounts-management">BEST-PRACTICE: linux accounts management<a class="hash-link" href="#best-practice-linux-accounts-management" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-create-user">how to create user<a class="hash-link" href="#how-to-create-user" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># create user with a home directory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo useradd -m {USERNAME}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ls -la /home/{USERNAME}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create user [under root]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo useradd USERNAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create passwd [under root]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo passwd USERNAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-log-out">how to log out<a class="hash-link" href="#how-to-log-out" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-1-1110-and-above">resolution 1 (11.10 and above)<a class="hash-link" href="#resolution-1-1110-and-above" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gnome-session-quit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-2">resolution 2<a class="hash-link" href="#resolution-2" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo pkill -u $USER</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://askubuntu.com/questions/15795/how-can-you-log-out-via-the-terminal" target="_blank" rel="noopener noreferrer">command line - How can you log out via the terminal? - Ask Ubuntu</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="set-a-shorter-password-for-ubuntu">set a shorter password for ubuntu<a class="hash-link" href="#set-a-shorter-password-for-ubuntu" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo passwd &lt;USER&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-hwoto-1642479990429-35424184b62d147dc0744f2bcb9bca97f27b9efc9df47373a458c76442b30003.png" alt="picture 7" class="img_ev3q">  </p><ul><li><p>ref:</p><ul><li><a href="https://askubuntu.com/questions/180402/how-to-set-a-short-password-on-ubuntu" target="_blank" rel="noopener noreferrer">https://askubuntu.com/questions/180402/how-to-set-a-short-password-on-ubuntu</a></li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-net-management">BEST-PRACTICE: linux net management<a class="hash-link" href="#best-practice-linux-net-management" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-know-my-public-ip-address">how to know my public ip address<a class="hash-link" href="#how-to-know-my-public-ip-address" title="标题的直接链接">​</a></h3><ul><li>resolution 1:</li></ul><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># https://apple.stackexchange.com/questions/20547/how-do-i-find-my-ip-address-from-the-command-line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">curl ifconfig.me</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>resolution 2:</li></ul><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># https://www.digitalocean.com/community/tutorials/how-to-configure-remote-access-for-mongodb-on-ubuntu-20-04#:~:text=curl%20%2D4%20icanhazip.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">curl -4 icanhazip.com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-monitor-network-traffic">how to monitor network traffic<a class="hash-link" href="#how-to-monitor-network-traffic" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install nethogs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo nethogs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/368002/network-usage-top-htop-on-linux" target="_blank" rel="noopener noreferrer">networking - Network usage top/htop on Linux - Stack Overflow</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fixme-check-proxy">FIXME: check proxy<a class="hash-link" href="#fixme-check-proxy" title="标题的直接链接">​</a></h3><p>In <a href="https://releases.ubuntu.com/18.04/" target="_blank" rel="noopener noreferrer">Ubuntu 18.04.6 LTS (Bionic Beaver)</a>, it introduced two methods to see what/which proxies are we using:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">## approach 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $http_proxy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## approach 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">env | grep -i proxy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However, when I configured the proxies in <code>Manual Proxy</code>, I am surprised to find nothing using either commands in the above, while the ping to <code>google.com</code> does work so that I use it as the measure then.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ping google.com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And another wield thing is before the system was restarted, the <code>env | grep -i proxy</code> even shows duplicated results and the change in <code>Manual Proxy</code> doesn't work, which is quite confusing.</p><p>Maybe we can do more tests later.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-datetime-management">BEST-PRACTICE: linux date/time management<a class="hash-link" href="#best-practice-linux-datetime-management" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-format-date-in-terminal">how to format date in terminal<a class="hash-link" href="#how-to-format-date-in-terminal" title="标题的直接链接">​</a></h3><blockquote><p>⚠️</p><ol><li>the space in formatter should be using <code>\ </code> or anything other ways</li><li><code>date</code>是一个函数，不是变量，变量采用<code>$XX</code>或者<code>${XX}</code>的形式，但是函数要用<code>$(XX)</code>，并且不能在字符串中</li></ol></blockquote><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># directly output date</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">date +%Y-%m-%d\ %H:%M:%S</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># output date into variable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">T='the date is '$(date +%Y-%m-%d\ %H:%M:%S)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://unix.stackexchange.com/questions/549415/how-to-concatenate-a-date-variable-and-string-variable-in-unix" target="_blank" rel="noopener noreferrer">shell script - How to concatenate a date variable and string variable in unix? - Unix &amp; Linux Stack Exchange</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-change-timezone-and-time">how to change timezone (and time)<a class="hash-link" href="#how-to-change-timezone-and-time" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-1-conclusion-directly-export">resolution 1 (conclusion): directly export<a class="hash-link" href="#resolution-1-conclusion-directly-export" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo "export TZ='Asia/Shanghai'\n" &gt;&gt; ~/.profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo pkill -u $USER --force</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-2-detail-choose-following-directions">resolution 2 (detail): choose following directions<a class="hash-link" href="#resolution-2-detail-choose-following-directions" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># check current time, as well as timezone</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">date -R</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># if the ending is `+0800`, then it's ok, otherwise you need to change (e.g. `-0800`)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># change timezone (just choose as directed)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tzselect</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And finally you will get a command suggestion to write into profile file, that is <a href="#solution-1-directly-export">#solution-1-directly-export</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-system-management">BEST-PRACTICE: linux system management<a class="hash-link" href="#best-practice-linux-system-management" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-a-stop-job-is-running-for-session-c2-of-user--1min-30s">✅ <code>A stop job is running for Session c2 of user ... (1min 30s)</code><a class="hash-link" href="#-a-stop-job-is-running-for-session-c2-of-user--1min-30s" title="标题的直接链接">​</a></h3><blockquote><p>resolution</p></blockquote><ol><li>restart system</li><li><code>journalctl -p5</code></li><li>search <code>timed out. Killing</code></li><li>analyze the target process of <code>Killing process 1234 (jack_thru) with signal SIGKILL.</code></li></ol><blockquote><p>⚠️ 注意，也有其他几种解决方案，比如装<code>watchdog</code>和缩短<code>timeout</code>时间的，这些都侵入性太高了，并且不是治本之策，所以还是得从log来分析原因找对应政策。尤其是装<code>watchdog</code>的方案，我简单看了一下，大致是每分钟检查一下系统的情况，但问题是，为什么很久以前系统就没有这种问题呢？那个时候也没装 <code>watchdog</code> 啊，所以对于这个问题，我们不能偷懒!</p></blockquote><p>.</p><blockquote><p>result</p></blockquote><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-bugfix-1643550947015-7ed703f287400ec8593914f35740044149d43c47e7b97df89135a6ffff3681a5.png" alt="picture 9" class="img_ev3q">  </p><p>It tells me the last one is because of <code>adb</code>, since I do open the <code>adb</code> and not responding then.</p><p>And I also checked the last few times when <code>timed out</code>, but to find they are different.</p><p>So I confirmed the timeout error is temporary, since now I am not going to run any <code>adb</code>.</p><p>I tried to restart again, and the system does well which identified what I think.</p><blockquote><p>ref</p></blockquote><ul><li><p><a href="https://unix.stackexchange.com/questions/273876/a-stop-job-is-running-for-session-c2-of-user/297318" target="_blank" rel="noopener noreferrer">systemd - A stop job is running for Session c2 of user - Unix &amp; Linux Stack Exchange</a></p></li><li><p><a href="https://qastack.cn/unix/273876/a-stop-job-is-running-for-session-c2-of-user" target="_blank" rel="noopener noreferrer">用户的会话c2正在运行停止作业</a></p></li><li><p><a href="https://bbs.archlinux.org/viewtopic.php?id=264233" target="_blank" rel="noopener noreferrer">systemd stop job for Session 2 on shutdown / Newbie Corner / Arch Linux Forums</a></p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-----------------------------------">-----------------------------------<a class="hash-link" href="#-----------------------------------" title="标题的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practice-linux-common-commands">BEST-PRACTICE: linux common commands<a class="hash-link" href="#best-practice-linux-common-commands" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandtar">command:tar<a class="hash-link" href="#commandtar" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># x: extract, f: file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tar -xf FILE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># v: verbose, logging output, careful when extracting big files, e.g. AOSP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tar -vxf FILE</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://linuxize.com/post/how-to-extract-unzip-tar-gz-file/" target="_blank" rel="noopener noreferrer">How to Extract (Unzip) Tar Gz File | Linuxize</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandperl">command:perl<a class="hash-link" href="#commandperl" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-use-perl-to-replace-multi-lines">how to use perl to replace multi-lines<a class="hash-link" href="#how-to-use-perl-to-replace-multi-lines" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">perl -0pe 's/search/replace/gms' file</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol><li><code>-0</code>: without the <code>-0</code> argument, Perl processes data line-by-line, which causes multiline searches to fail.</li><li><code>-p</code>: loop over all the lines of a file</li><li><code>-e</code>: execute the following arg as a perl script</li><li><code>/s</code>: changes the behavior of the dot metacharacter <code>.</code> so that it matches any character at all. Normally it matches anything except a newline "\n", and so treats the string as a single line even if it contains newlines.</li><li><code>/m</code>: modifies the caret <code>^</code> and dollar <code>$</code> metacharacters so that they match at newlines within the string, treating it as a multi-line string. Normally they will match only at the beginning and end of the string.</li><li><code>/g</code>: global replace(not sure)</li></ol><p>ref:</p><ul><li><p>explaining <code>-0</code>: <a href="https://stackoverflow.com/questions/1030787/multiline-search-replace-with-perl" target="_blank" rel="noopener noreferrer">Multiline search replace with Perl - Stack Overflow</a></p></li><li><p>explaining <code>/m | /s</code>: <a href="https://stackoverflow.com/questions/22962588/understanding-perl-regular-expression-modifers-m-and-s" target="_blank" rel="noopener noreferrer">regex - Understanding Perl regular expression modifers /m and /s - Stack Overflow</a></p></li></ul><p>special thanks to: <a href="https://unix.stackexchange.com/a/378991" target="_blank" rel="noopener noreferrer">Not sure if you know, but sed has a great feature where you do not need to use a / as the separator.</a></p><ul><li><p><a href="https://www.mankier.com/1/perl#Description" target="_blank" rel="noopener noreferrer">perl man page - perl-interpreter - General Commands</a></p></li><li><p><a href="https://unix.stackexchange.com/questions/555948/replace-multi-line-string-with-multi-line-string-without-escaping-by-hand" target="_blank" rel="noopener noreferrer">perl - Replace multi line string with multi line string without escaping by hand - Unix &amp; Linux Stack Exchange</a></p></li><li><p><a href="https://www.runoob.com/perl/perl-regular-expressions.html" target="_blank" rel="noopener noreferrer">Perl 正则表达式 | 菜鸟教程</a></p></li><li><p><a href="https://unix.stackexchange.com/questions/378990/find-and-replace-with-sed-with-slash-in-find-and-replace-string" target="_blank" rel="noopener noreferrer">quoting - find and replace with sed with slash in find and replace string - Unix &amp; Linux Stack Exchange</a></p></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandfind">command:find<a class="hash-link" href="#commandfind" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-ignore-case">how to ignore case<a class="hash-link" href="#how-to-ignore-case" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">find -iname </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://unix.stackexchange.com/questions/32155/find-command-how-to-ignore-case" target="_blank" rel="noopener noreferrer">Find command: how to ignore case? - Unix &amp; Linux Stack Exchange</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-specify-search-type">how to specify search type<a class="hash-link" href="#how-to-specify-search-type" title="标题的直接链接">​</a></h4><p>Use <code>-type</code> to specify the search type (default is <code>c</code> for <code>file</code>), here I used <code>d</code> for <code>directory</code>, ref: <a href="https://man7.org/linux/man-pages/man1/find.1.html#:~:text=true%20%20Always%20true.-,%2Dtype%20c,-File%20is%20of" target="_blank" rel="noopener noreferrer">find type</a></p><p>And then, when I search directory, it would search all the sub-folders with '/' concatenated, so I need to specify <code>-d 1</code> in order to only search the top current directory.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  Application Support find . -name '*electron*' -type d -d 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./electron-react-boilerplate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./electron-react-typescript</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  Application Support rm -rf electron-react-boilerplate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  Application Support rm -rf electron-react-typescript</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-exclude-dir">how to exclude dir<a class="hash-link" href="#how-to-exclude-dir" title="标题的直接链接">​</a></h4><p>TODO: in fact, I really can't catch why <code>-prune</code> is combined with <code>-o</code> (or)</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 1. use `-not -path`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find -name "*.js` -not -path "./directory/*"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 2. use `-path xx -prune`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -path ./misc -prune -o -name '*.txt' -print</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 3. use multiple prune (need to add escaped bracket)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -type d \( -path ./dir1 -o -path ./dir2 -o -path ./dir3 \) -prune -o -name '*.txt' -print</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 4. use regex prune (-name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -type d -name node_modules -prune -o -name '*.json' -print</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/4210042/how-to-exclude-a-directory-in-find-command" target="_blank" rel="noopener noreferrer">linux - How to exclude a directory in find . command - Stack Overflow</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="todo-how-to-find-file-with-time-used">TODO: how to find file with time used<a class="hash-link" href="#todo-how-to-find-file-with-time-used" title="标题的直接链接">​</a></h4><h4 class="anchor anchorWithStickyNavbar_LWe7" id="tip-find-efficiency-comparison">tip: find efficiency comparison<a class="hash-link" href="#tip-find-efficiency-comparison" title="标题的直接链接">​</a></h4><p>Use a specified directory is the best and fastest;</p><p>If not, limit the <code>maxdepth</code> to a number small enough is also ok;</p><p>And then consider the directory prune.</p><p>Finally bared run is the worst.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  hjxh_express_match git:(main) time find .imgs  -name readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.imgs/readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find .imgs -name   0.00s user 0.00s system 52% cpu 0.005 total</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  hjxh_express_match git:(main) time find . -maxdepth 3  -name readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./.imgs/readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -maxdepth 3 -name   0.01s user 0.05s system 70% cpu 0.079 total</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  hjxh_express_match git:(main) time find . -maxdepth 4  -name readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./.imgs/readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -maxdepth 4 -name   0.06s user 0.69s system 87% cpu 0.854 total</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  hjxh_express_match git:(main) time find . -maxdepth 5  -name readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./.imgs/readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -maxdepth 5 -name   0.14s user 1.86s system 93% cpu 2.137 total</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  hjxh_express_match git:(main) time find . -maxdepth 6  -name readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./.imgs/readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -maxdepth 6 -name   0.26s user 3.21s system 94% cpu 3.683 total</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  hjxh_express_match git:(main) time find .  -name readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./.imgs/readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -name   0.44s user 5.85s system 51% cpu 12.172 total</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  hjxh_express_match git:(main) time find . -path './.imgs/*'  -name readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./.imgs/readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -path './.imgs/*' -name   0.46s user 5.93s system 51% cpu 12.299 total</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  hjxh_express_match git:(main) time find . -path './.imgs/*'  ! -path "**/node_modules/*"  -name readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./.imgs/readme-1641287704584-613d44afa250b17be45e5b366487d1dbd42939da44543700b5e7fbd7f6a8ca9e.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find . -path './.imgs/*' ! -path "**/node_modules/*" -name   0.46s user 5.91s system 51% cpu 12.268 total</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandgrep">command:grep<a class="hash-link" href="#commandgrep" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-exclude-dir---exclude-dirdir">how to exclude dir (<code>--exclude-dir=dir</code>)<a class="hash-link" href="#how-to-exclude-dir---exclude-dirdir" title="标题的直接链接">​</a></h4><p>Recent versions of GNU Grep (&gt;= 2.5.2) provide:</p><p><code>--exclude-dir=dir</code></p><p>which excludes directories matching the pattern dir from recursive directory searches.</p><p>So you can do:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">grep -R --exclude-dir=node_modules 'some pattern' /path/to/search</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/6565471/how-can-i-exclude-directories-from-grep-r" target="_blank" rel="noopener noreferrer">linux - How can I exclude directories from grep -R? - Stack Overflow</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-limit-depth--maxdepth">how to limit depth (<code>-maxdepth</code>)<a class="hash-link" href="#how-to-limit-depth--maxdepth" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> find . -maxdepth 4 -type f -exec grep "11.0.0_r1" {}  \;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://unix.stackexchange.com/questions/111722/how-to-do-max-depth-search-in-ack-and-grep" target="_blank" rel="noopener noreferrer">How to do max-depth search in ack and grep? - Unix &amp; Linux Stack Exchange</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="tip-grep-by-lines-context-is-much-faster-than-grep-by-words-context-and-even-better-for-output">tip: grep by lines context is MUCH FASTER than grep by words context, and even better for output<a class="hash-link" href="#tip-grep-by-lines-context-is-much-faster-than-grep-by-words-context-and-even-better-for-output" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  erb git:(main) ✗ time (cat release/build/mac/皇家小虎快递分析系统.app/Contents/Resources/app/dist/main/main.js | tr ";" "\n" | grep --context=3 'fake-database')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># var n=this&amp;&amp;this.__importDefault||function(e){return e&amp;&amp;e.__esModule?e:{default:e}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Object.defineProperty(t,"__esModule",{value:!0}),t.isDbFinished=t.initDbUpdateResult=t.initDbInsertResult=t.DB_UPDATE_DECLINED=t.DB_UPDATED=t.DB_INSERT_DUPLICATED=t.DB_INSERT_SUCCESS=t.DB_UNKNOWN=t.DB_TIMEOUT=t.DB_TABLE_NOT_EXISTED=t.prisma=void 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># const i=r(72298),a=`file:${n(r(71017)).default.join(i.app.getPath("userData"),"express_match.sqlite.db")}?connection_limit=1`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># process.env.DATABASE_URL=a,console.log({__dirname,rawDBPath:"file:dev.db?connection_limit=1",newDBPath:a}),t.prisma={erp:{create:()=&gt;{console.log("fake-database: creating one")},findMany:()=&gt;{console.log("fake-database: finding many")},upsert:()=&gt;{console.log("fake-database: upserting one")}}},t.DB_TABLE_NOT_EXISTED="DB_TABLE_NOT_EXISTED",t.DB_TIMEOUT="DB_TIMEOUT",t.DB_UNKNOWN="DB_UNKNOWN",t.DB_INSERT_SUCCESS="DB_INSERT_SUCCESS",t.DB_INSERT_DUPLICATED="DB_INSERT_DUPLICATED",t.DB_UPDATED="DB_UPDATED",t.DB_UPDATE_DECLINED="DB_UPDATE_DECLINED"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># t.initDbInsertResult=()=&gt;({nTotal:0,nInserted:0,nDuplicated:0,nTimeout:0,nUnknown:0,nTableNotExist:0})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># t.initDbUpdateResult=()=&gt;({nTotal:0,nUpdated:0,nDropped:0,nTimeout:0,nUnknown:0,nTableNotExist:0})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># t.isDbFinished=e=&gt;{let t=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">( cat  | tr ";" "\n" | grep --color=auto  --context=3 'fake-database'; )  0.20s user 0.01s system 121% cpu 0.169 total</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  erb git:(main) ✗ time ( grep -iEo '.{255}fake-database.{255}' release/build/mac/皇家小虎快递分析系统.app/Contents/Resources/app/dist/main/main.js | tr ';' '\n' ) </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># =`file:${n(r(71017)).default.join(i.app.getPath("userData"),"express_match.sqlite.db")}?connection_limit=1`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># process.env.DATABASE_URL=a,console.log({__dirname,rawDBPath:"file:dev.db?connection_limit=1",newDBPath:a}),t.prisma={erp:{create:()=&gt;{console.log("fake-database: creating one")},findMany:()=&gt;{console.log("fake-database: finding many")},upsert:()=&gt;{console.log("fake-database: upserting one")}}},t.DB_TABLE_NOT_EXISTED="DB_TABLE_NOT_EXISTED",t.DB_TIMEOUT="DB_TIMEOUT",t.DB_UNKNOWN="DB_UNKNOWN",t.DB_INSERT_SUCCESS="D</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">( grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox} -iEo  t)  3.27s user 0.01s system 99% cpu 3.279 total</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="tip-grep-by-negative-captured-group-needs-to-use-ggrep">tip: grep by negative captured group needs to use <code>ggrep</code><a class="hash-link" href="#tip-grep-by-negative-captured-group-needs-to-use-ggrep" title="标题的直接链接">​</a></h4><p>Examples
Given the string foobarbarfoo:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">bar(?=bar)     # finds the 1st bar ("bar" which has "bar" after it)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bar(?!bar)     # finds the 2nd bar ("bar" which does not have "bar" after it)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(?&lt;=foo)bar    # finds the 1st bar ("bar" which has "foo" before it)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(?&lt;!foo)bar    # finds the 2nd bar ("bar" which does not have "foo" before it)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can also combine them:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># finds the 1st bar ("bar" with "foo" before it and "bar" after it)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(?&lt;=foo)bar(?=bar)    </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/2973436/regex-lookahead-lookbehind-and-atomic-groups" target="_blank" rel="noopener noreferrer">lookaround - Regex lookahead, lookbehind and atomic groups - Stack Overflow</a></li></ul><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">grep -Pio '(?&lt;=heads\/)(.*?)(?=\n)' text.txt # P option instead of E</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref: <a href="https://stackoverflow.com/a/45534127/9422455" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/a/45534127/9422455</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandtree">command:tree<a class="hash-link" href="#commandtree" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-display-chinese--n">how to display chinese (<code>-N</code>)<a class="hash-link" href="#how-to-display-chinese--n" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tree -N</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://blog.csdn.net/cxrsdn/article/details/100006348" target="_blank" rel="noopener noreferrer">(23条消息) linux下tree命令中文字符乱码解决方案_cxrsdn的博客-CSDN博客_linux tree 中文</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-exclude-dir-i">how to exclude dir(<code>-I</code>)<a class="hash-link" href="#how-to-exclude-dir-i" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># use `|` to split choices</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># exclude</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tree -I "XXX|YYY"   # maybe it means 'ignore'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://unix.stackexchange.com/questions/61074/tree-command-for-multiple-includes-and-excludes" target="_blank" rel="noopener noreferrer">tree command for multiple includes and excludes - Unix &amp; Linux Stack Exchange</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandhead">command:head<a class="hash-link" href="#commandhead" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="head-basic-usage">head basic usage<a class="hash-link" href="#head-basic-usage" title="标题的直接链接">​</a></h4><p>head 这个命令行其实没有什么要讲的，用法非常简单。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># output the first 5 lines (default)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">head FILE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># output the first N lines (replace "N")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">head -n "N" FILES</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-exclude-the-last-k-rows">how to exclude the last k rows<a class="hash-link" href="#how-to-exclude-the-last-k-rows" title="标题的直接链接">​</a></h4><p>但是今天 2022-01-26 碰到了一个问题，就是要获取前n-1行，然后试了 stackoverflow 上的方案好像都不对。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">head -n -1 FILE</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>后来才知道，是因为mac的原因，要用<code>ghead</code>才行……</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">brew install coreutils</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ghead -n -4 main.m</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>而 <code>ghead</code> 是在 <code>coreutils</code> 里面，这个名字一看我就有，所以也不用装了。</p><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/16206507/head-command-to-skip-last-few-lines-of-file-on-mac-osx" target="_blank" rel="noopener noreferrer">shell - head command to skip last few lines of file on MAC OSX - Stack Overflow</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="discuss-use-head-or-sed">discuss: use <code>head</code> or <code>sed</code><a class="hash-link" href="#discuss-use-head-or-sed" title="标题的直接链接">​</a></h4><p>今天之所以用到 head 其实是因为我想对一个流做sed处理，但略去最后一行。</p><p>我一开始想用 sed 里的范围标识（地址），但一直没试出来。</p><p>后来我把地址标识换成最简单的<code>1,4s/find/replace/</code>之后才意识到，我的思路是不对的。</p><p><code>1,4</code>是一个确实被处理的范围选择，但结果就是，N行中，前四行都被sed替换了，但是后面的行尽管没替换依旧会打印出来，而这正是sed的默认行为，它是一个流转换器。</p><p>那如果纯粹基于sed，进行转换，并且去掉最后一行，就要用到<code>-o</code>结合好像是<code>/p</code>的 identifier，具体我也记不大清了。意思就是输出所有被匹配的行，但如果这样的话被匹配的行就会输出两遍了（两遍不必相同（NOT-SURE），一个是转换前，一个是转换后），所以另一个标识符就是阻止原内容的输出，这样就只输出匹配的行的处理结果。</p><p>所以，这个思路其实有问题，它可以对，也可以不对，它如果保证匹配n-1行，则对；否则就不满足需求了，我们的需求是处理前n-1行，并且不管匹配不匹配，都要输出，尽管实际上是都匹配的。</p><p>总之，理解到这层后，既可以用纯sed的方案，也可以用head+sed的方案，一个负责改，一个负责删即可，至于先后，结果都一样，也许head在前效率会更高一些。</p><p>所以，还是挺有意思的，这个。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandtop">command:top<a class="hash-link" href="#commandtop" title="标题的直接链接">​</a></h3><p>Today(2022-01-27) I finally understood how to use the command of <code>top</code> (though <code>htop</code> is better for display but possibly more costly).</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-commands-1643248016619-b1ac7d3bcd2a9eb546a53a0e5da199d11d573f85a61a9317d679d002d98012fa.png" alt="picture 88" class="img_ev3q">  </p><p>I can switch the display format of memory usage when <code>top</code> has gone to the interactive interface.</p><p>The first option I can use is <code>E</code>, which allows to switch memory unit between <code>KiB | MiB | GiB | TiB</code>.</p><p>And the second option I can use is <code>m</code>, which switches the memory display type between pure text, columns graph and block graph.</p><blockquote><p>⚠️</p><ol><li>不可以在命令行中直接用 <code>top -M</code> （显示以<code>MB</code>为单位的内存使用量），因为<code>top -h</code>的帮助中写的很清楚，只支持部分选项。在 stackoverflow 上有 <code>top -M</code> 的建议(see: <a href="https://unix.stackexchange.com/questions/105908/how-to-display-meminfo-in-megabytes-in-top" target="_blank" rel="noopener noreferrer">linux - How to display meminfo in megabytes in top? - Unix &amp; Linux Stack Exchange</a>)，但可能我的版本（Ubuntu 18）不支持。正确的做法，是先进入<code>top</code>交互界面，然后按<code>E</code>，这样就会切换单位，比如按两次切换到<code>GB</code>单位。另外，独立的，还可以按<code>m</code>去切换内存的显示样式，比如像<code>htop</code>那种竖条状！</li><li>以上只在ubuntu上测试通过，在mac上我刚试了，不行！所以到底怎么用命令，还得根据平台自身！</li><li>具体的，可以通过 <code>COMMAND -h</code>去看简洁版的帮助页面，或者<code>man COMMAND</code> (e.g. <a href="https://manpages.ubuntu.com/manpages/bionic/en/man1/top.1.html" target="_blank" rel="noopener noreferrer">Ubuntu Manpage: top - display Linux processes</a>) 去看完整版的帮助页面！</li></ol></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandcat">command:cat<a class="hash-link" href="#commandcat" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-write-raw-string-into-file-using-cat">how to write raw string into file using <code>cat</code><a class="hash-link" href="#how-to-write-raw-string-into-file-using-cat" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GOPATH=$HOME/my-go </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt;EOF &gt;&gt; ~/.profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export GOPATH=$GOPATH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/2500436/how-does-cat-eof-work-in-bash" target="_blank" rel="noopener noreferrer">linux - How does "cat \&lt;\&lt; EOF" work in bash? - Stack Overflow</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="usage-how-to-know-whats-the-bash-string">usage: how to know what's the bash string<a class="hash-link" href="#usage-how-to-know-whats-the-bash-string" title="标题的直接链接">​</a></h4><p>When using <code>bash</code> or <code>zsh</code>, we are supposed to use the function of <code>bindKey</code>.</p><p>However, the key we typed are always hard to remember, e.g. what's the <code>ctrl</code> key?</p><p>Luckily, there's a super easy (and also interactive) way for us to know it via <code>cat</code>, just to type <code>cat</code> followed by <code>enter</code> in terminal, and then the terminal would display what the character would be when we typing them.</p><p>E.g. here is what's the result when we combine <code>control | option | command</code> with arrow left and arrow right would be:</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-commands-1643287045491-0d652ec4cf50fd00bdfe265d1bcbc4df4482ffc562e30624d26218fd2d841adf.png" alt="picture 114" class="img_ev3q">  </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandunzip">command:Unzip<a class="hash-link" href="#commandunzip" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-unzip-to-specific-directory">how to unzip to specific directory<a class="hash-link" href="#how-to-unzip-to-specific-directory" title="标题的直接链接">​</a></h4><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">unzip file.zip -d TARGET_DIR</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://askubuntu.com/questions/994611/how-to-unzip-into-a-given-directory" target="_blank" rel="noopener noreferrer">bash - How to unzip into a given directory - Ask Ubuntu</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandkill">command:kill<a class="hash-link" href="#commandkill" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> ps aux  |  grep -i  electron |  awk '{print $2}'  |  xargs sudo kill -9</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><p><a href="https://stackoverflow.com/a/30486159/9422455" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/a/30486159/9422455</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandscp">command:scp<a class="hash-link" href="#commandscp" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo chown -R USER_NAME REMOTE_FOLDER</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo chmod 777 REMOTE_FOLDER</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>the <code>-R</code> means "recursively" since there may be file deeply in the target folder that won't allow you to write.</p><p>Hence, you can know, you can specifically claim your authority on the file or directory, since it would not automatically transfer.</p><p>Thus, a flexible approach is that just add a <code>-R</code> flag.</p><p>reference:
<a href="https://unix.stackexchange.com/a/347412" target="_blank" rel="noopener noreferrer">https://unix.stackexchange.com/a/347412</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandlsof">command:lsof<a class="hash-link" href="#commandlsof" title="标题的直接链接">​</a></h3><p>check status of port occupation</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lsof -i:8888</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandufw">command:ufw<a class="hash-link" href="#commandufw" title="标题的直接链接">​</a></h3><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># check status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo ufw status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># enable </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo ufw enable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># white list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo ufw allow 9000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># reload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo ufw reload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://blog.csdn.net/jiaochiwuzui/article/details/80907521" target="_blank" rel="noopener noreferrer">(20条消息) Ubuntu防火墙的开启，关闭，端口的打开，查看_jiaochiwuzui的博客-CSDN博客_ubuntu 查看防火墙开启的端口</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandtime">command:time<a class="hash-link" href="#commandtime" title="标题的直接链接">​</a></h3><p>I can directly using <code>time ( COMMAND_1 | COMMAND_2 )</code>, so that it can calculate the final time of this pipe.</p><p>However, time calculation is a little more sophisticated than what would I have thought, refer more to: <a href="https://unix.stackexchange.com/questions/364156/how-can-i-time-a-pipe/364157" target="_blank" rel="noopener noreferrer">bash - How can I time a pipe? - Unix &amp; Linux Stack Exchange</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandtr">command:tr<a class="hash-link" href="#commandtr" title="标题的直接链接">​</a></h3><p>It's useful to split line to lines.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ echo "111;222;333" | tr ';' '\n'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">222</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">333</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># use `nl` to add the line number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat main.js | tr ';' '\n' | nl -ba | head -6</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandcd">command:cd<a class="hash-link" href="#commandcd" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="usage-a-superb-scene-using-cd-">usage: a superb scene using <code>cd .</code><a class="hash-link" href="#usage-a-superb-scene-using-cd-" title="标题的直接链接">​</a></h4><img loading="lazy" alt="picture 10" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/linux-howto-1641284537356-d66d64fc07918dc1e98e62dd2dd70454a9ff16b2b2cc6da39fe18cbc6a5b07a1.png" width="480" class="img_ev3q"><p>ref:</p><ul><li><a href="https://superuser.com/questions/702402/how-do-i-refresh-directory-in-bash" target="_blank" rel="noopener noreferrer">linux - How do I refresh directory in BASH? - Super User</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="commandsed">command:sed<a class="hash-link" href="#commandsed" title="标题的直接链接">​</a></h3><blockquote><p>ref</p></blockquote><ul><li><p><a href="https://www.gnu.org/software/sed/manual/sed.html" target="_blank" rel="noopener noreferrer">✨✨✨ sed, a stream editor✨✨✨</a></p></li><li><p><a href="https://www.grymoire.com/Unix/Sed.html" target="_blank" rel="noopener noreferrer">Sed - An Introduction and Tutorial</a></p></li><li><p><a href="https://www.mankier.com/1/sed" target="_blank" rel="noopener noreferrer">sed man page - General Commands | ManKier</a></p></li></ul><p>a good start:</p><ul><li><a href="https://www.geeksforgeeks.org/sed-command-in-linux-unix-with-examples/" target="_blank" rel="noopener noreferrer">Sed Command in Linux/Unix with examples - GeeksforGeeks</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-print-only-matched-lines">how to print only matched lines<a class="hash-link" href="#how-to-print-only-matched-lines" title="标题的直接链接">​</a></h4><ol><li><code>-n</code> means "No automatically print the each line"</li><li><code>/p</code> means "Print the processed line"</li></ol><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># print only the matched lines</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sed -n "s|find|replace|p"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># don't print any line (so useless)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sed -n "s|find|replace|"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># print all the line each, with matched line again(twice, and it's the same)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sed "s|find|replace|p"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># TODO: print the processed, and apply function on it.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ref:</p><ul><li><a href="https://stackoverflow.com/questions/17511639/sed-print-only-matching-group" target="_blank" rel="noopener noreferrer">regex - sed: print only matching group - Stack Overflow</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-how-to-increment-version-number">✨ how to increment version number<a class="hash-link" href="#-how-to-increment-version-number" title="标题的直接链接">​</a></h4><h5 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-1-use-echo-based-on-e">resolution 1: use <code>echo</code> based on <code>//e</code><a class="hash-link" href="#resolution-1-use-echo-based-on-e" title="标题的直接链接">​</a></h5><p>special thanks to: <a href="https://stackoverflow.com/a/14348899/9422455" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/a/14348899/9422455</a></p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-2-answer">resolution 2: answer<a class="hash-link" href="#resolution-2-answer" title="标题的直接链接">​</a></h5><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">gsed -i -E 's|(.*)"version": "([0-9]+)\.([0-9]+)\.([0-9]+)"|echo "\1\\"version\\": \\"\2.\3.$((\4+1))\\""|e' package.json</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>test what happened using <code>//pe</code></p></blockquote><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">➜  erb_sqlite git:(main) head -3 release/app/package.json                                                                                                                                           [7-01-22 | 4:18:17]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "name": "mark.hjxh.express_match",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "version": "0.2.2",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">➜  erb_sqlite git:(main) gsed -E 's|(.*)"version": "([0-9]+)\.([0-9]+)\.([0-9]+)"|echo "\1\\"version\\": \\"\2.\3.$((\4+1))\\""|pe' release/app/package.json                                        [7-01-22 | 4:08:57]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "name": "mark.hjxh.express_match",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "  \"version\": \"0.2.$((2+1))\"",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "version": "0.2.3",</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>explanation</p></blockquote><p>In fact, the <code>  "version": "0.2.2",</code> is changed into <code>echo "  \"version\": \"0.2.$((2+1))\"",</code>.</p><p>And then the <code>e</code> syntax indicates run this sequency string as a command, so that it finally turns into <code>  "version": "0.2.3",</code></p><blockquote><p>attention</p></blockquote><ol><li>the <code>"</code> needs to be escaped, and to escape <code>"</code>, we need to use a <code>\</code>, and to let the <code>\</code> work in the <code>echo</code> function, we need to escape it again, that is to be <code>\\"</code></li><li><code>sed</code> will match all line (including the leading space), and the <code>e</code> would execute all line. So if I just replace the version number part into <code>echo "\\"0.2.3\\""</code>, then all the line would turns into <code>  "version": echo "\\"0.2.3\\""</code>, which is certainly unwanted and deserves reflection.</li></ol><blockquote><p>core ref</p></blockquote><p><a href="https://stackoverflow.com/questions/14348432/how-to-find-replace-and-increment-a-matched-number-with-sed-awk" target="_blank" rel="noopener noreferrer">bash - How to find/replace and increment a matched number with sed/awk? - Stack Overflow</a></p><p><code>perl | awk</code> alternative</p><ul><li><a href="https://stackoverflow.com/questions/8653126/how-to-increment-version-number-in-a-shell-script" target="_blank" rel="noopener noreferrer">bash - How to increment version number in a shell script? - Stack Overflow</a></li></ul><blockquote><p>official hack way (but I failed)</p></blockquote><p>sh
#!/usr/bin/sed -f</p><p>/<sup id="fnref-0-9-c2017e"><a href="#fn-0-9-c2017e" class="footnote-ref">0-9</a></sup>/ d</p><h1>replace all trailing 9s by _ (any other character except digits, could</h1><h1>be used)</h1><p>:d
s/9<!-- -->(<em>*<!-- -->)<!-- -->$/</em>\1/
td</p><h1>incr last digit only.  The first line adds a most-significant</h1><h1>digit of 1 if we have to add a digit.</h1><p>s/^<!-- -->(<em>*<!-- -->)<!-- -->$/1\1/; tn
s/8<!-- -->(</em><em>)<!-- -->$/9\1/; tn
s/7<!-- -->(<!-- -->_</em>)<!-- -->$/8\1/; tn
s/6<!-- -->(<em>*<!-- -->)<!-- -->$/7\1/; tn
s/5<!-- -->(</em><em>)<!-- -->$/6\1/; tn
s/4<!-- -->(<!-- -->_</em>)<!-- -->$/5\1/; tn
s/3<!-- -->(<em>*<!-- -->)<!-- -->$/4\1/; tn
s/2<!-- -->(</em><em>)<!-- -->$/3\1/; tn
s/1<!-- -->(<!-- -->_</em>)<!-- -->$/2\1/; tn
s/0<!-- -->(<!-- -->_*<!-- -->)<!-- -->$/1\1/; tn</p><p>:n
y/_/0/</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- [sed, a stream editor](https://www.gnu.org/software/sed/manual/sed.html#Increment-a-number)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#### how to match digits (`[0-9]` or `:digit:`)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; ref:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">thanks for the direction to sed official documentation in this post.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- [regex - Why doesn't `\d` work in regular expressions in sed? - Stack Overflow](https://stackoverflow.com/questions/14671293/why-doesnt-d-work-in-regular-expressions-in-sed)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#### how to insert text before first line of file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">suppose the text is:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```text</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tailwind base;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tailwind components;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tailwind utilities;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>and the file is <code>public/style.css</code></p><p>first, export this variable for better understanding of commands:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">T='@tailwind base;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tailwind components;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@tailwind utilities;'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">F='public/style.css'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>and copy file as a backup:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cp $F ${F}_</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>then the reset command is:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cp ${F}_ $F</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-1-use-cat-and-">resolution 1: use <code>cat</code> and <code>;</code><a class="hash-link" href="#resolution-1-use-cat-and-" title="标题的直接链接">​</a></h5><p>The <code>cat</code> approach meets our intuition, but needs a temp file.</p><p>First, we dump the <code>T</code> into <code>temp</code> file, then append <code>F</code> into temp, finally replace <code>F</code> with temp, that is:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo $T &gt; temp; cat $F &gt;&gt; temp; mv temp $F</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Be careful about the second operator of <code>&gt;&gt;</code> since it means <code>append</code>  otherwise the <code>$T</code> would be flushed, then <code>$F</code> keeps unchanged.</p><p>refer:</p><ul><li><a href="https://unix.stackexchange.com/questions/159513/what-are-the-shells-control-and-redirection-operators" target="_blank" rel="noopener noreferrer">What are the shell's control and redirection operators? - Unix &amp; Linux Stack Exchange</a></li></ul><h5 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-2-use-cat-and-">resolution 2: use <code>cat</code> and <code>|</code><a class="hash-link" href="#resolution-2-use-cat-and-" title="标题的直接链接">​</a></h5><p>In last solution, we used 2 ';', and there is an easy way to change it to just 1 ';'.</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo $T | cat - $F &gt; temp; mv temp $F</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this solution, the <code>$T</code> echoed into second pipe, and <code>cat</code> used <code>-</code> to capture it then joined with <code>$F</code> and dumped into temp, which surely is faster.</p><p>refer:</p><ul><li><p><a href="https://superuser.com/questions/1388584/what-does-the-last-hyphen-mean-in-options-of-bash" target="_blank" rel="noopener noreferrer">linux - What does the last "-" (hyphen) mean in options of <code>bash</code>? - Super User</a></p></li><li><p><a href="https://unix.stackexchange.com/questions/16357/usage-of-dash-in-place-of-a-filename" target="_blank" rel="noopener noreferrer">shell - Usage of dash (-) in place of a filename - Unix &amp; Linux Stack Exchange</a></p></li></ul><h5 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-3-use-sed-s-command">resolution 3: use sed s-command<a class="hash-link" href="#resolution-3-use-sed-s-command" title="标题的直接链接">​</a></h5><p>In the above 2 solutions, we both need an IO, i.e. first saving into a 'temp' file and move to override the raw file, which could be low-efficiently and not elegant.</p><p>There's a way allowing us to finish the 'join' action just in the pipe and finally leads to inplace-modify target file. That is "sed's s-command".</p><img loading="lazy" alt="picture 24" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640379168300-linux-howto-90b435ef191284a35f21cb8cac698769b8548bfe2b3f90db2be5ea988a56c636.png" width="480" class="img_ev3q"><img loading="lazy" alt="picture 25" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640379622241-linux-howto-e51b228ec26d453924d9731bc86f94185eccbc8ea4d43954698c4217845ca262.png" width="480" class="img_ev3q"><p>When using <code>s-command</code>, we can easily apply regex grammar to achieve what we want.</p><img loading="lazy" alt="picture 26" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640379819166-linux-howto-c717ac5a605fb416fa2f472e202a74949ed8b34c3556d06ca6b70c8202d70901.png" width="480" class="img_ev3q"><p>Like this, we can easily insert text in front of a sequency of text based on regex of '^', which means the beginning of text.</p><p>And then, since the basic grammar of how to insert text before specific line of an input file in <code>sed</code> is <code>sed -i 'Ni TEXT' $F</code>
, the problem then converts to how to join '1i' with $T. That is what we just learned can be put into practice:</p><img loading="lazy" alt="picture 27" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640380337394-linux-howto-d8bfb544ab1b2db098a1fd9138401997b9b11814af6cbf639243453526a91c02.png" width="480" class="img_ev3q"><p>You see, now all the commands have nothing to do with the io, and the principle behind this command chain is straightforward: join into <code>1i $T</code> then use it as <code>sed -i</code>’s parameter (via <code>-f-</code> which is the former pipe).</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="resolution-4-use-sed-e-command">resolution 4: use sed e-command<a class="hash-link" href="#resolution-4-use-sed-e-command" title="标题的直接链接">​</a></h5><img loading="lazy" alt="picture 16" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640375147417-linux-howto-e0475887ff34e4a4a0be217c3596e054d2bdfa01f28f360f2459123e0b2175f7.png" width="480" class="img_ev3q"><img loading="lazy" alt="picture 17" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640375169955-linux-howto-57609e425971259dd89c05c571047e701cb2c44dcc4deac43b0724a7295d8f44.png" width="480" class="img_ev3q"><p>I'd think the e-command is quite confusing, but does good job.</p><p>I made some tests on the e-command to help myself understand.</p><p>In the above introduction, it indicates that if 'without parameters, the e command executes the command that is found in space and replace the pattern space with the output'.</p><p>suppose we have <code>a='aaa\necho "bbb" \nccc'</code>, then if we runs <code>echo $a | gsed '2e'</code>, that's to say run the second line as a command and let others stay as what they are:</p><img loading="lazy" alt="picture 18" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640375663511-linux-howto-18fd2906bf27a739476740fbe2c713a3c42b40de5865cebd14c08e696ed0b39a.png" width="480" class="img_ev3q"><p>However, 'if a parameter is specified, instead, the e command interprets it as a command and sends its output to the output stream.'</p><p>I made an example which may help us to understand what's the mechanism of <code>gsed 'ne xxx</code>, in which <code>xxx</code> is the so-called 'parameter'.</p><img loading="lazy" alt="picture 19" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640376208972-linux-howto-5309698b6833082cf93b3b0f69cda3616678ad00d3e5141895bcec14b8684f57.png" width="480" class="img_ev3q"><p>You can see, as the following shows, since a is a three-line text and sent into the pipe as stream, so first line shows 'aaa', and second line shows 'echo "bbb"', as what we preset.</p><p>The most notable point is that since <code>gsed</code> sets a <code>3e</code> command which means 'it will execute following commands at 3rd row of stream'. Thus, the following commands <code>xxx\n echo "yyy"...</code> are executed as separate commands split by lines.</p><p>Obviously, neither <code>xxx</code> nor <code>zzz</code> is a valid command and turned into an error. Plus, since the level of error usually is a bit higher than normal output, the error of <code>zzz</code> came before <code>yyy</code> and then is <code>AAA</code>.</p><p>Finally, when all the commands were executed, the next stream in pipe came, i.e. <code>ccc</code>, and all the sequences came into end.</p><p>ref:</p><p><a href="https://www.gnu.org/software/sed/manual/sed.html#:~:text=by%20standard%20seds.-,e%20%5Bcommand%5D,-This%20command%20allows" target="_blank" rel="noopener noreferrer">sed e-command</a></p><p>Still, we had other topics to talk about.</p><img loading="lazy" alt="picture 20" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640377292421-linux-howto-27ab701a1d1cca335a1476e71b742a60b9f6817b5d08521c70c766bfae21290d.png" width="480" class="img_ev3q"><img loading="lazy" alt="picture 22" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640377315692-linux-howto-ea510349e79dd47d4ca01d17200defcf7e8b8b8ebda0b0785c1833ba932c625d.png" width="480" class="img_ev3q"><p>We can know the classic usage of <code>sed</code> is <code>sed SCRIPT INPUTFILE</code>, and if <code>-e</code> option is used to specify a script, with all non-option parameters taken as input files.</p><p>So what would happen when we combine the <code>-e</code> and an input file.</p><p>Back to what we covered the above, we can move a step further now.</p><img loading="lazy" alt="picture 23" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640377647537-linux-howto-8099c8c4212b90dd4f7fa22449dc22ef8135c485c97674a561b87769121c750b.png" width="480" class="img_ev3q"><p>In this example, we can see that <code>gsed</code> first read one line from <code>../temp</code> file which is <code>AAA</code>, and then paused since the <code>2e</code> flag to execute <code>cat -</code> command which shows all the input stream from <code>echo $a</code>, and finally continued to read the remaining rows of <code>BBB</code> and <code>CCC</code>.</p><p>So what about if we specify a <code>-i</code> option, which means <code>change in position</code>?</p><p>It's easy to understand, that is all the output would be sent into <code>../temp</code>, so that <code>../temp</code> changes to the output just like the result in this example shows.</p><p>Hence, we can derive from our conclusion: if we use the following command:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo $T | gsed -i '1e cat -'  $F</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>then the goal of inserting text before first line can be achieved just on the fly~</p><p>How amazing and beautiful it is!</p><p>ref:</p><ul><li><a href="https://www.gnu.org/software/sed/manual/sed.html#:~:text=sed%20%C2%A0%20%5BContents%5D%5BIndex%5D-,2.1%20overview,-Normally%20sed%20is" target="_blank" rel="noopener noreferrer">gsed overview</a></li></ul><blockquote><p>conclusion</p></blockquote><p>G1. To insert lines at the beginning of one file:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 1. dump, dump, and move</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $T &gt; temp; cat $F &gt;&gt; temp; mv temp $F;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 2. join, dump, and move</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $T | cat - $F &gt; temp; mv temp $F;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 3. [sed s-command] concat-string, inplace-insert</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $T | gsed '1s/^/1i /' | gsed -i -f- $F</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 4. [sed e-command] ... hard to conclude</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $T | gsed -i '1e cat -' $F</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>G2. To insert lines at specific line:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 1. if text is single line, refer: https://stackoverflow.com/a/6537587/9422455</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gsed -i 'Ni $T' $F</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 2. if text is multi lines, refer: </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $T | gsed -i 'Ne cat -' $F</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>FIXME: (failed) G3. To insert content after matched position:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 1. [sed r-command]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $T | gsed -i '$P/r -' $F #  the '-' is same for '/dev/stdin'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>G4. To insert multi lines manually:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 1, when lines are already multiplied, just add `\` after each line, refer: https://askubuntu.com/a/702693</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 2, when lines are in one, using `\n`, refer: https://askubuntu.com/a/702690</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>G5. To insert lines after matched line with the same leading space format:</p><blockquote><p>⚠️ 嵌套sed正则注意事项</p><ol><li>输入的文本不能与分隔符相同，否则需要转义。比如本次为了在代码中加入注释<code>//</code>，就不方便用<code>/</code>当分隔符</li><li>嵌套正则的时候，为了能分清一级与二级，可以应用不同的分隔符，比如本次更新用了<code>|</code>作为一级，<code>_</code>作为二级</li></ol></blockquote><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 1. [sed s-command] leading space align with $P</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># failed at 2022-01-25</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># echo $T | gsed 's/^.*$/s\/(^.*?)($P.*$)\/\\1\\2\\n\0\//' | gsed -E -f- $F</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># updated at 2022-01-25</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $T | gsed 's|^.*$|s_^(.*?)('$P'.*)$_\\1\\2\\n\\1\0_|' | gsed -E -f- $F | grep --context=3 $T</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># FIXME: (failed) 2. [sed s-command with named-pipe] [more straightforward]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;(echo -n "s/(^.*?)($P.*?$)/\1\2\\\\n\1" &amp; echo -n $T &amp; echo -n "/") | gsed -E -f- $F</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><img loading="lazy" alt="picture 29" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640385997938-linux-howto-41e634caf1122f991d08d485202adfb56ab71cdfdb7d5ad76ad4f57ca751cbaa.png" width="480" class="img_ev3q"><p>ref:</p><ul><li><a href="https://serverfault.com/questions/171095/how-do-i-join-two-named-pipes-into-single-input-stream-in-linux" target="_blank" rel="noopener noreferrer">shell - How do I join two named pipes into single input stream in linux - Server Fault</a></li></ul>]]></content:encoded>
            <category>开发笔记</category>
            <category>Linux</category>
        </item>
        <item>
            <title><![CDATA[札记 | 关于近几年的一些感悟]]></title>
            <link>https://markshawn2020.github.io/blog/2022/02/01/archive/prose-2022-begining</link>
            <guid>/2022/02/01/archive/prose-2022-begining</guid>
            <pubDate>Tue, 01 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[我本来想写挺长的文章。]]></description>
            <content:encoded><![CDATA[<blockquote><p>我本来想写挺长的文章。</p><p>后来我打开音乐一放：李汉颖老师的《在最美时分别》。</p><p>我就什么都不想写了。</p><p>只想说一句：“新年快乐”。</p><p>毕竟，人是无论如何都会生活的。</p><p>而人生，向来如此。</p><p>所以不要忘了：新年了，请快乐！</p></blockquote><ol><li><a href="#%E5%86%99%E6%96%87%E7%AB%A0%E6%80%BB%E9%9C%80%E8%A6%81%E4%B8%80%E7%82%B9%E7%90%86%E7%94%B1%E5%AE%9E%E5%9C%A8%E6%B2%A1%E6%9C%89%E5%B0%B1%E5%8F%AA%E5%A5%BD%E7%BC%96%E9%80%A0%E4%B8%80%E4%B8%AA%E5%A6%82%E4%B8%8B">写文章总需要一点理由，实在没有就只好编造一个如下</a></li><li><a href="#%E6%98%AF%E7%9A%84%E7%8E%B0%E5%9C%A8%E6%98%AF%E7%99%BE%E5%B9%B4%E6%9C%AA%E6%9C%89%E4%B9%8B%E5%A4%A7%E5%8F%98%E5%B1%80%E6%89%80%E4%BB%A5%E7%84%B6%E5%90%8E%E5%91%A2">是的，现在是百年未有之大变局，所以，然后呢？</a></li><li><a href="#%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E8%8A%B1%E5%A4%9A%E4%B9%85%E6%89%8D%E8%83%BD%E6%98%8E%E7%99%BD%E7%94%9F%E6%B4%BB%E5%B9%B3%E6%B7%A1%E5%A6%82%E6%B0%B4%E6%89%8D%E6%98%AF%E4%BA%BA%E7%94%9F%E7%9A%84%E7%BB%88%E6%9E%81%E5%91%BD%E9%A2%98">我们需要花多久才能明白，生活平淡如水，才是人生的终极命题</a></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="写文章总需要一点理由实在没有就只好编造一个如下">写文章总需要一点理由，实在没有就只好编造一个如下<a class="hash-link" href="#写文章总需要一点理由实在没有就只好编造一个如下" title="标题的直接链接">​</a></h2><p>不得不说，我们还是年轻的，是实打实的“当打之年”。</p><p>我知道，这么说肯定会有人反驳，他可以举出无数个比我们自己更年轻的却更成功的人的例子。</p><p>但我终于可以对这些具有一定启发意义的，但本质上无意义的攀比、定性，无动于衷了。</p><p>我已经到了，能够清晰地认识，什么是一个人固有的，什么是一个人应有的，以及什么是一个人将有的年龄。</p><p>考虑到年龄这个词太过于敏感，并略显消极，请允许我将它偷换成心境，尽管听起来有点不耻贴金的味道。</p><p>毕竟，一个二十几岁的年轻人，何以有胆妄谈心境呢。</p><p>但也许，能谈，一点点。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="是的现在是百年未有之大变局所以然后呢">是的，现在是百年未有之大变局，所以，然后呢？<a class="hash-link" href="#是的现在是百年未有之大变局所以然后呢" title="标题的直接链接">​</a></h2><p>这个年代，在大家很小的时候，好像都有个科学家、数学家的梦想。</p><p>我自然也不例外。</p><p>尽管我对于这个念想的生长，不能寻得一点点的蛛丝马迹。</p><p>毕竟，众所周知，咱目前这个社会，科学家、数学家的待遇，也是令人唏嘘；而当时，兴许也是。</p><p>也许最近略好一些了罢。</p><p>如果硬是强塞一个逻辑，那大概是小时候见到某个朋友家里有一套《十万个为什么》，而另一个朋友家里有一套《上下五千年》。</p><p>但讽刺的是，有《十万个为什么》的朋友，数年后推销起了房地产。</p><p>而我，也万万没有想到的，成为了一名工程师。</p><p>至于《上下五千年》那位，我们暂时还是先不谈了。</p><p>回到我刚刚提到的“也许最近略好一些了罢”。</p><p>缘何能起这样的怀疑。</p><p>大概是因为华为终于被卡脖子了，国家终于到了一个可以重视基础研究，可以有一定的底气高谈阔论内循环的时候了。</p><p>但你知道我怕什么吗。</p><p>十几年的教育培养我的第一大人生哲学便是：<strong>这一次没有什么不同</strong>。</p><p>我这么说一定有足够的底气，想来华夏已经这么几千年了，老祖先什么政策、什么逻辑没有试过呢。</p><p>再怎么都不会能有超越轴心时代的高光时刻吧，从历史结点的意义上来说。</p><p>生活在当代的人，我知道，肯定会大谈资本主义/社会主义制度的优越性，相对于封建制度/奴隶制度来说。</p><p>但一切都没有意义。</p><p><strong>人是无论如何，都会生活的。</strong></p><p>而生活的本质，是当下如何做，是落实到接下来的一秒钟你是该眨左眼还是右眼的问题。</p><p>并且你会突然意识到，这个问题是如此荒谬，因为正常情况下，我们都是同时眨左右眼的。</p><p><strong>而更荒谬的是，人生本便是如此。</strong></p><p>我们活在百年未有之大变局里，是的。</p><p>历史不会抹去这些时刻，八年抗战、三年饥荒、十年文革的惨痛仍旧触目惊心，孙先生的遗志仍旧历久弥新着。</p><p>历史也会记住这些时刻，一带一路、脱贫攻坚、伟大复兴的号召始终不绝于耳，周总理的希冀始终不负盛开着。</p><p>但这不能回答，为什么一间房子竟能抵得上一个人的十辈子乃至更多。</p><p>也不能回答，为什么也有一个人仅仅一天，就能赚上上百间房子。</p><p>我是多么好奇那个年代，“我们都有光明的未来”。</p><p>所以，请告诉我，时代于个人，于每一个活生生的人，一个有着自己物质追求、精神向往、灵魂自由的人，它究竟该摆在哪个位置。</p><p>思考这些很难是吧，所以下一秒，我们又忙着聊下一个天了，或是看下一篇文章了，或是忙下一个项目了， 或是忙下一场恋爱了。</p><p>你知道我是这么想这些的吗？</p><p>我望着窗外飞驰的丘陵、田野，我其实没有答案。</p><p>我偶尔会试图想知道菩提顿悟顿的是什么悟，我奋斗奋的是什么斗，我思索思的是什么索，而我归家归的又是什么家。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="我们需要花多久才能明白生活平淡如水才是人生的终极命题">我们需要花多久才能明白，生活平淡如水，才是人生的终极命题<a class="hash-link" href="#我们需要花多久才能明白生活平淡如水才是人生的终极命题" title="标题的直接链接">​</a></h2><p>有一个心理学逻辑叫自证预言，一个人生长的整体轨迹，会沿着它内心的一条暗线进行。</p><p>但很遗憾的是，在我仅有的这二十几年生长长河里，我似乎并不能窥见这一定律。</p><p>我不知道有多少人也是像我一样的，我猜想，可能不多。</p><p>我的意思，我是相信自证预言的，但我突破了前二十年我原有的自证预言，后二十年的我，将是一个新的自证预言。</p><p>我大概知道原因，无非就是我从小留守独立，恰好读书略有天赋，又喜欢冒险，以至于活成了我现在的自己，大致如此。</p><p>若是缺了留守独立这一条，那一定深受家庭影响，可能有继往开来的突破，但不大可能有出乎意料的选择。</p><p>若是缺了读书天赋这一条，这个社会顶层设计的复杂性，将使他难得开昧，活得拧巴，亦或痞气。</p><p>而若是缺了冒险这一条，也许可以过的顺遂，却难以活得明白，终有一天可能生出被社会骗了的错觉。</p><p>但我这样，也不无代价。</p><p>有人是会羡慕我的潇洒，我的自由，我却也并不比大多数人幸福，这也是人生规律之一，围城始终存在。</p><p>很多时候，我是多么羡慕那些，摆正定位、脚踏实地的人。</p><p>但我也是，允许我说，深刻地知道，他们放弃了什么，他们会遇到什么。</p><p>以至于有一天，我对自己会心一笑，我似乎可以自由地穿越于社会的阶级之间了。</p><p>我似乎，真地活成了一个人。</p><p>而非其他什么的。</p><p>但可笑的是，我的骨子里又是那么无趣的一个人。</p><p>曾经我也许热衷于把这个人标记为A，把那个时刻标记为B，后来也索性都任由它们在大脑皮层的喜好了。</p><p>我们需要花多久才能明白，<strong>刚刚过去的一秒钟，曾是属于我们自己的一秒钟；而即将到来的这一刻，也是属于我们的这一刻</strong>。</p><p>但当我们想握起什么，它便从指缝溜走什么；当我们想忆起什么，它便从现在偷走什么。</p>]]></content:encoded>
            <category>札记</category>
        </item>
        <item>
            <title><![CDATA[札记 | 一位工程师的自我修养（序）]]></title>
            <link>https://markshawn2020.github.io/blog/2022/01/23/archive/prose-engineer-cultivation</link>
            <guid>/2022/01/23/archive/prose-engineer-cultivation</guid>
            <pubDate>Sun, 23 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[中午冒险尝试了重庆辣的重庆小面，那个滋味，真地是……]]></description>
            <content:encoded><![CDATA[<p>中午冒险尝试了重庆辣的重庆小面，那个滋味，真地是……</p><p>回来就拉肚子了。</p><p>我显然已经过了能吃辣的那个年纪。</p><p>这同时也意味着，我到了需要思考自我修养的年龄了。</p><p>文雅起见，就记为《一位工程师的自我修养》吧。</p><p>于是，漫步夜晚望京的街头，一位男子迎面缓缓跑过，这不巧了吗？正是我的房租爸爸（尽管看起来可能比我还年轻，都有儿子了）。</p><p>第一个念头就是，作为工程师，我该不该跟他打招呼。</p><p>细想想，昨天上电梯时，中途进来一个人，顿觉有点面熟，可正是他。</p><p>似乎同性相斥，我们两次最终都没有什么言语。</p><p>难道他也是一名工程师？我如此想到。</p><p>他走后，我企图拍下他的背影，毕竟深夜单独跑步的人，一定还是值得肯定的。</p><p>既然我没有跑步，而他跑了。</p><p>而我是工程师，说明他肯定不是。</p><p>所以，这才彼此没有话说吧，不然一定可以聊一聊跑步的最优路径规划问题。</p><p>但，这不扯远了吗？作为工程师，我该不该和他打招呼呢？</p><p>想着想着，许是太冷，就偶然走进了一家星爸爸，想来一杯热咖啡。</p><p>工程师是一定要喝咖啡的，尽管已经是夜晚。</p><p>但考虑自己年纪确实不小了，明日还要以一个高昂的斗志约见一位新同事，心想还是稳妥点好，于是点了杯红茶。</p><p>但我很显然，立马就觉得不对了。</p><p>因为星爸爸的柜台小姐姐转而向我推销后面的杯子了。</p><p>原本我是没有兴趣的，工程师是一定要省钱的，而星爸爸的杯子素来都不便宜。</p><p>可是她又立即补充道了一句：或者送人什么的。</p><p>这可把我一下愣住了，是啊，我可以送人。</p><p>我还有一个妹妹，我是可以送人。</p><p>很久以前，就有女生送我星爸爸的杯子，我一向觉得杯子有什么好送的。</p><p>后来，很久很久后，那个杯子终于碎了。</p><p>但在我转身之际，却发现，有看起来不会碎的杯子。</p><p>我是可以考虑送一个杯子给我妹妹的啊。</p><p>尽管不知道杯子到底有什么意义，但是，是可以送一个杯子的啊。</p><p>毕竟七五折。</p><p>我便去看杯子。</p><p>我想，什么杯子才能体现一个工程师的审美与素养呢。</p><p>它一定不能是花里胡哨的，它一定是鲁棒的，它一定是持久化的，它一定是交互友好的。</p><p>我很中意一个杯子，它不高，精致，这样能体现一个妹妹的意义。</p><p>可是，它相比另一个杯子，只有一个爪子的图案，这样不能显示出是猫爪子还是虎爪子。</p><p>这不行，程序要语义化、准确化。</p><p>所以，我选了另一个稍显修长的。</p><p>它很高，有很显著的虎头形象。</p><p>转念一想，这也是极其适合的。</p><p>妹妹大了，是时候撑起身边的一片天了。</p><p>我要让她知道，属于她的，不再是精致的自我世界，还有顶立的家庭与广阔的社会。</p><p>杯子是修长的，希望她能明白成长的过程。</p><p>杯子是金红的，希望她能明白稳重的意义。</p><p>杯子是保温的，希望她能明白温度的价值。</p><p>小姐姐对我说，这个杯子是最贵的。</p><p>我很吃惊，因为我其实并没有注意到这个事情。</p><p>我只是从工程师的角度，选了一个杯子。</p><p>这么看来，在我以工程师的眼光去选择一个杯子之前，便已经有工程师以工程师的素养造了一个杯子。</p><p>我感受到了与工程师的共鸣。</p><p>我感受到了与工程师素养的共鸣。</p><p>小姐姐试图和我聊更多。</p><p>询问我的行业，我的出身地。</p><p>她的言辞是那么轻微、平和、恳切。</p><p>说工程师都是很聪明的人，赚自己好多倍的钱。</p><p>不知是幽默还是啥的，问我南京是不是江苏的省会。</p><p>我看着眼前这个北京不大不小的星爸爸店里，这位说话满是令人心疼的，一位女孩。</p><p>更加坚定了我买这个杯子的决心。</p><p>她们最后给我定了七折，不走积分。</p><p>确实，积分又有什么意义呢。</p><p>我安静地坐下，以一位工程师的素养，不紧不慢地喝完那杯红茶。</p><p>不能太快，否则容易有bug。</p><p>不能太慢，否则显得不是那么聪明。</p><p>她时不时将目光飘过来，似乎想和我聊更多。</p><p>但是她以服务员的素养，克制住了。</p><p>而我只想着这个杯子，什么时候以什么方式预期会有什么结果的寄给我妹妹。</p><p>这是工程师首要考虑的。</p><p>我细细地品完最后一口红茶，在五秒内郑重地打开两道门，向不眠的街道走去。</p><p>快递大叔还在富有激情的忙着，迎面一位浑身大袄的男人牵着两条狗在冰雪上悠闲地溜达着。</p><p>我突然想起进门小姐姐的第一句话：你穿这么少不冷吗。</p><p>我记得很清楚，我当时确实没感觉冷。</p><p>因为工程师一定会计算好温度选择最合适的的衣服出行。</p><p>行走会让我的机体产生热量，与脑部的温度对冲。</p><p>而脑部适当的低温，是对身体有益的，尤其是在夜晚睡觉时。</p><p>但很显然，这杯红茶，让我明白。</p><p>也不全是这样。</p>]]></content:encoded>
            <category>札记</category>
            <category>工作</category>
        </item>
        <item>
            <title><![CDATA[札记 | 是的，我入职了]]></title>
            <link>https://markshawn2020.github.io/blog/2022/01/20/archive/prose-first-job</link>
            <guid>/2022/01/20/archive/prose-first-job</guid>
            <pubDate>Thu, 20 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[是的，我入职了.]]></description>
            <content:encoded><![CDATA[<p>是的，我入职了.</p><p>那个曾经改名不拿国一不理发的幼稚男孩，那个曾经背着行囊走南闯北无问东西的青涩少年，那个曾经在朋友圈征伐不公、在家摔过饭碗、在公司写信质问领导的意气青年，他入职了。</p><p>曾经，这是一个很难抉择的选项，想上最牛逼的学校，去最牛逼的公司，做最牛逼的工作，有着澎湃的欲望，一路匆忙。</p><p>谈不上失败。</p><p>断不会停止。</p><p>但是时候先做一个总结了。</p><blockquote><p>我的母亲说我不小了</p><p>为什么还是话不多</p><p>是不是过的不快乐</p><p>我背起行囊又走了</p><p>我去过很多个地方</p><p>那些故事很快就遗忘</p><p>我不想看见谁悲伤</p><p>就只是一个人游荡</p><p>——三旬老汉《世子》</p></blockquote><p>很多年前，我第一次踏入大学的校门时，我在想什么。</p><p>已经不得而知。</p><p>多年以后，当我再一次踏入大学校门时，我会想什么。</p><p>我想，应该是我现在想的那样。</p><p>成长，总是这样的。</p><p>很多事情，也许你曾经不明白，但总有一天，你会醒悟。</p><p>因为某些人，或是，因为某些事，或是，单单因为突然下了一场雪，一场久违的雪。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_im-working-now-1642682889597-5ac8d8bffba84de558c9a85b4363d727e94cd3b6263bb3c6256af3121f593901.png" alt="picture 5" class="img_ev3q">  </p><p>我还记得，十年前，周末教学楼走廊上的阳光是那么的迷人，金色，温暖，一个个眼睛里还透露着稚气与朝气。</p><p>我还记得，五年前，社团同学产生严重分歧，一个二十年历史五星级的社团摇摇欲坠，大家一起在黑夜的操场上围成圈，努力地摆正方向。</p><p>我还记得，三年前，南下深圳，东临浦江，北往天坛，正式开始背起行囊，学界、业界纷纷撞入我的眼帘，播下我对学习真正的渴望。</p><p>三年内，一直一个人，因孤独而开始丰富，因坚定而开始执着，终于有一刻，我学会对自己说：“If this is not our time, when will be?”</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_im-working-now-1642681271954-c4b359b2d77796962afd79cdc26063ada9459caa35350935e17561926842b5ea.png" alt="picture 1" class="img_ev3q">  </p><p>我时常望着远处发呆，远处的高楼，或者远处的原野，或者远处的孤冢，或者远处的夕阳。</p><p>我望着，不是因为渴望什么，我望着，只是因为它们都与我如此相关，只是因为那无穷的远方，无数的人们也与我有关。</p><p>我好像早已过了，渴望从什么地方获得什么的年龄。</p><p>我开始希望，自己向外释放什么。</p><p>我希望我能带来希望。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_im-working-now-1642683155554-a0656b88380f91fd4a4ea35a926112d7090c1f1f2df610ad8dcdd1c1dc265f09.png" alt="picture 7" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_im-working-now-1642683264721-b4c5303fb44b733d66d7ad76a725668edc8548e1f9cbe43a5c7b66fdb5626e77.png" alt="picture 8" class="img_ev3q">  </p><p>我不信命运由父母决定，由学校决定，由新冠决定。</p><p>我们悠久的历史里，无数文人志士、武将侯门、乞丐与帝后，他们也曾像我们一般彷徨，他们也曾像我们一样有力。</p><p>而我们，也将像他们一样，如此。</p><p>所以，最重要的是当下。</p><p>最好的时刻是此刻。</p><p>一切都不为晚。</p><p>选择有力的朋友，坚定有力的方向，其余的交给青春、热血希望，交给我们，自己。</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_im-working-now-1642682440489-d6e963dc60cad99d6d6941816e8645d9893922c8219b9acd97aadfa3e976ece9.png" alt="picture 4" class="img_ev3q">  </p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_im-working-now-1642683334060-163231098a4f8e9ae2c39ce44c7a1f1125ef7fed41b1fc4e198fb381235b0cdc.png" alt="picture 9" class="img_ev3q">  </p><p>北京的冬天，迷蒙而又寒冷。</p><p>Go on.</p><p>We must go on.</p><p><img loading="lazy" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/mark_im-working-now-1642684242518-6a146c63f28bfb34254496a7b6a624a2827ba0e10260410ea9e9a798c86854ea.jpg" alt="picture 10" class="img_ev3q"></p>]]></content:encoded>
            <category>札记</category>
            <category>工作</category>
        </item>
        <item>
            <title><![CDATA[札记 | 我的2021：混沌与洞见]]></title>
            <link>https://markshawn2020.github.io/blog/2022/01/01/archive/prose-my-2021</link>
            <guid>/2022/01/01/archive/prose-my-2021</guid>
            <pubDate>Sat, 01 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[在《马男波杰克（Bojack Horseman）》第六季中戴安想写一部有深度的、关于“创伤”的书，书名较长：《One Last Thing and Then I Swear to God I'll Shut Up About This Forever Arguments, Opinions, Reflections, Recollections》，某字幕组将其翻译为：《再说最后一件事，然后我保证再也不提这事：关于我们做出的选择、伤害的人、去过的地方的最后反思》]]></description>
            <content:encoded><![CDATA[<blockquote><p>在《马男波杰克（Bojack Horseman）》第六季中戴安想写一部有深度的、关于“创伤”的书，书名较长：《One Last Thing and Then I Swear to God I'll Shut Up About This Forever: Dispatches from the Frontlines of the War on Women: Arguments, Opinions, Reflections, Recollections》，某字幕组将其翻译为：《再说最后一件事，然后我保证再也不提这事：关于我们做出的选择、伤害的人、去过的地方的最后反思》
但是她失败了。
我显然也不行。
但是……</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="启">启<a class="hash-link" href="#启" title="标题的直接链接">​</a></h2><p>这个题目，我想了很久，应该说，从年中就开始想了，一直想到前天，也就是12月29日才敲定，就叫：“混沌与洞见”。</p><p>但遗憾地是，混沌居多，洞见居少，哪怕仅有的一点，怕也是夏虫语冰，让大家见笑了。</p><p>但每每因我的弱薄，而不敢动笔之际，总有先人叮咛道：忘却的救世主就快到了啊。</p><p>可不，这会都已经是2021年最后一天的最后一个时辰了。</p><p>所以，总得说点什么吧。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="顾">顾<a class="hash-link" href="#顾" title="标题的直接链接">​</a></h2><p>网易有人云：“讲过去像是在卖惨，讲未来又像是白日做梦，讲现在又像是旁观者迷，迟迟无语，字字心酸”。</p><p>但我偏不信这样的鬼话。</p><p>毕竟，惨、梦、迷，乃是人生常态，不惨之人无有后发，不梦之人无有浪漫，不迷之人无有破局。</p><p>回顾这一年，满是奔赴满是期盼，既有满满的震撼与感动，也有条条的伤痕与不甘。</p><p>今年是项目实践年，应身边的前辈、老师、朋友、同学的邀请，我参与了大大小小多个项目的主开发：基于React的算法可视化平台，基于OCR与NLP的企业智能记账软件、基于爬虫与逆向的企业数据BI、基于安卓系统的VR定制、基于Electron的大数据比对系统等等，涉及到了算法、前端、后端、数据、系统等程序开发的方方面面，同时也点亮了自己Python,
JavaScript, C++, Java等主流语言的技术树。</p><p>在这些项目中，有许多遗憾，许多不尽人意的地方，一些放弃了，一些只做了个半成品。</p><p>如果说收获，应该是深度接触了不同的企业，对现在一些初期与中期的公司的发展路径、模式，有了较深的体会，这是以学生身份去实习很难体会到的，也是若直接奔赴大公司就便错过了的。</p><p>但最宝贵的是，在这些形形色色的项目上摸爬滚打后，我终于摸索出了一条可行之路：“整理之道”。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="整理之道">整理之道<a class="hash-link" href="#整理之道" title="标题的直接链接">​</a></h3><p>得益于当代计算机学科与软件技术的发展，一些公司开发出了非常优秀的程序化编辑软件，例如<code>sublime</code>, <code>atom</code>, <code>vscode</code>
等等，而我最终选用了<code>vscode</code>并初步成功打造了自己的知识库。</p><p>这里的关键词是 <strong>自己的知识库</strong>。</p><p>它是来自于书本、来自于生活、来自于工作、来自于互联网，经过自己的涓涓意念，最终汇成的属于自己全部工业知识的一个具体集合：</p><img loading="lazy" alt="picture 3" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/MY2021-%7Btimestamp%7D-ca0545fd5db8cf93fc2c7195a3c5d368df9b0732ba071346d7eaaba791f4b6d1.png" width="480" class="img_ev3q"><p>在形式上，我把所有正在学习的、以及将要学习的，都分类整理。</p><p>在路径上，我则是持续地将新的经验、想法、规划记录在整个文档库中。</p><p>而从这个文档库到现在，才短短一个月，就已经有整整十五万字。</p><img loading="lazy" alt="picture 4" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/MY2021-%7Btimestamp%7D-72167e172bb0e2af5c8399dc730076f8e7ba6761cb5c865192b643af5383c42a.png" width="480" class="img_ev3q"><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">1.  readme.md(1808)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> To write</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> What's Going On</span><span class="token tag" style="color:#00009f">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">工具开发</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Mac</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">CopyClip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> VSCode</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ConditionalCommentCursorDown</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> VSCode</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">AutoCompletionForHeadingsOfOtherFiles</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> VSCode</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">md</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">flex</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> Chrome</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">text2md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">02. MarkScripts/boilerplate_electron_archive/readme.md(457)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">注意事项</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 遇到需要确认安装`webpack</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dev</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">server`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 遇到安装过程中出错的问题</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 关于`document`、`window`等非关键依赖，WebStorm `cannot find name`的问题</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">03. MarkScripts/fast_cnki_translate/readme.md(571)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' API call fail'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> History</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'meta '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">04. MarkScripts/boilerplate_electron_ts_react_antd_tailwindcss/boilerplate_electron_ts_react_antd_tailwindcss.md(3050)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">Boilerplate of `electron-typescript-react-antd-tailwindcss`</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">'Step 1. Using Boilerplate of `electron-typescript-react` '</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">Step 2. Add Antd</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> install `style</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">loader` and `css</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">loader` needed for `antd`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> add `mjs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> css(style</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">loader)` support since antd used mjs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'add css import '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">Step 3. Add TailwindCSS</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> add `postcss</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">loader` otherwise no effect (based on antd initialization)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> All in One Script</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">05. MarkNotes/ 南川开发笔记 | 记与Webpack十二小时的奋战 copy.md(9343)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Former Record</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 真正唯一的收获</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">06. MarkLearnsLife/学习的思维.md(1048)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 主动犯错</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">07. MarkLearnsLife/what am I to wite.md(160)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">a coder's world from a coder's eyesight</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> different and usually better choice from a coder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">08. MarkLearnsLife/从LinkToTextFragment插件说起.md(542)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">09. MarkLearnsLife/我的2021：混沌与洞见.md(357)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">10. MarkLearnsLife/南川歌词摘记.md(354)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 旷野上盛开的小黄花</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 曾燃烧的光，可曾熄灭</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">11. MarkLearnsLife/mark-daily.md(453)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">'2021-12-29'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> The first post in stackoverflow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">12. MarkLearnsLife/coding-philoosipher.md(205)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Macro Control and Interface decoupling(解耦)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">13. MarkLearnsLife/南川诗集.md(175)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 代码大厦</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 晚霞、冢与犬</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">14. MarkLearnsCoding/Vim/vim-howto.md(2583)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> multi</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">line insert under `visual mode`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">Copy-Paste in Vim</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> copy paste of line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> copy paste of selected</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> column selection</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> undo changes after file saved</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">15. MarkLearnsCoding/Python/python开发笔记.md(272)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 技巧</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">install specific python version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 在注解中标注正在使用的类</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">16. MarkLearnsCoding/Python/python-howto.md(3007)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> TypedDict NotRequired VS Optional</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> TypedDict self</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">reference</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">conda</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> change default startup behavior in zsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">regex</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> multi</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">line match</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">17. MarkLearnsCoding/Python/python-bugfix.md(260)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> pip freeze wield path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> python virtualenv conflicts with anaconda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">18. MarkLearnsCoding/Python/jupyter-howto.md(257)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> matplotlib 画图中文显示问题【mac】</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">19. MarkLearnsCoding/Python/Pycharm/pycharm-bugfix.md(1424)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">terminal中的venv-py与project中的venv-py不同</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 问题复现</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 解决方案</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">20. MarkLearnsCoding/Python/Pycharm/pycharm-howto.md(4339)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> doc stub on class</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">pycharm vs vscode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> when configure test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> create pycharm shortcut</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">How to sort parameters of a function call</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Parameter Info</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Parameter Suggestions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">21. MarkLearnsCoding/Python/fastapi/fastapi-howto.md(1446)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> when `root_path` meets with `doc_url`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> How to save uploaded files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> How to write unit test</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">22. MarkLearnsCoding/Python/fastapi/uvicorn-howto.md(99)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> uvicorn deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">23. MarkLearnsCoding/CSS/css-howto.md(5223)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> shrink flex item to the remaining space</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">set height to equal to its sibling</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> use `table`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> use `absolute position`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'use `flex-shrink` with `min-w/h: 0`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">text-intent settings</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> only first line indent (like chinese  paragraph)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> start indent from second line (hanging indent)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> conclusion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">24. MarkLearnsCoding/CSS/scss/scss-howto.md(523)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> mixin example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">25. MarkLearnsCoding/CSS/flex/flex.md(1668)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Why are there no `justify</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">items` and `justify</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">self` properties</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">26. MarkLearnsCoding/JS/js-bugfix.md(3477)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">prettier</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> prettier plugin not work</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> recommend prettier plugins</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">eslint</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> eslint google or standard</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">tailwindcss autocompletion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> enable tailwindcss autocompletion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> fasten tailwindcss autocompletion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">27. MarkLearnsCoding/JS/js-discuss.md(1642)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'`Enum` or `Union / Array`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'`for...of` or `.forEach`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">28. MarkLearnsCoding/JS/markdown-bugfix.md(310)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> add plugin of `remark</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">admonitions`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">29. MarkLearnsCoding/JS/ts-howto.md(9439)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> declare const array in d.ts'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">hwo to define `useImperativeHandler` interface</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReturnType of a function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> how to design interface with default value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> what's `TS_NODE_TRANSPILE_ONLY`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'cast enum to string'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> how to import `.md` like resources</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> how to check object's specific type when defined as a union type</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">30. MarkLearnsCoding/JS/npm_yarn-howto.md(6090)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">★★★★★ chinese mirror set ★★★★★</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'a chinese mirror practice: how does it save an electron project '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">config npm mirrors</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> approach 1 (recommend)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> approach 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> config yarn mirrors</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">npm commands</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> check exist</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> locally and globally</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> with and without dependencies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">31. MarkLearnsCoding/JS/js-howto.md(8779)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'webpack '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> receive arg from command line </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Standard Method (no library)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> change string to number </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">DON'T</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">'best practice to use Exceptions '</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> catch error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> extend error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'[HANDBOOK] fs read file, async and part'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">csv read and parse</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'`node-csv` or `fast-csv`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> fast</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">csv problem of quotes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">run js in different envs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> browser env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> node env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'node + esm '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> node + esm + ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> use `__filename` and `__dirname`  in ESM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">32. MarkLearnsCoding/JS/esm and cjs.md(2608)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'[ERR_REQUEST_ESM]'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> cjs和mjs不要混用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> babel的失败尝试</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">33. MarkLearnsCoding/JS/develop-remark-pulgin.md(7914)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">develop own markdown parser or renderer</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> where does code fence define</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">read `remark</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">parse`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> from 'remark</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">parse' to 'madst</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">util</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">from</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">markdown'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> from 'mdast</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">util</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">directive' to 'remark</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">util</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">directive'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> codes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> For markdown plugin develop</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> what I installed</span><span class="token punctuation" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">34. MarkLearnsCoding/JS/database-orm.md(192)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> prisma vs typeorm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">35. MarkLearnsCoding/JS/CodeQuality_eslint_prettier_jest/eslint-howto.md(3134)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'`div` element with `onClick`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Alias error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">36. MarkLearnsCoding/JS/CodeQuality_eslint_prettier_jest/eslint &amp; prettier &amp; typescript.md(1170)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> eslint </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> prettier difference</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> eslint </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> prettier max</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">len</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">37. MarkLearnsCoding/JS/CodeQuality_eslint_prettier_jest/jest-howto.md(1326)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> top js test frameworks</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'`jest` config'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'`jest` ESM support'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">38. MarkLearnsCoding/JS/WebStorm/webstorm_bugfix.md(2755)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> suppress TS7016 Could not find a declaration file for module</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> alias between eslint and webpack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> '`tailwindcss` auto</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">completion doesn''t work with WebStorm'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">39. MarkLearnsCoding/JS/WebStorm/webstorm_howto.md(5513)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'`js-doc` in webstorm'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> hide '.js' file generated by '.ts' file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> distraction mode and zen mode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'remove specific package.json '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> How to suppress annoying intellisense from certain package</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> such as `antd`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> How to debug a create</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">react</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app  in webstorm</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">40. MarkLearnsCoding/JS/Electron/electron-howto.md(4384)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'`ipcRenderer` communication'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">'hwo to use `preload.ts` '</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> the `preload` script won't run if we just start the main process</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> it's ok when we just use `preload.js`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">what about using a `preload.ts`</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> remedy 1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> the `tsc` solution</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> how to remedy the  `electron</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">react</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">boilerplate` project</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">41. MarkLearnsCoding/JS/Electron/electron-bugfix.md(1678)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">Can't use `ContextBridge` which `ContextIsolation is true`</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Official Documentation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'A simple solution: give up using `ContextBridge`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'A seemly good solution: `nodeIntegration: true; contextIsolation:false`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">'A more sophisticated solution: based on `WebPack`'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> add `global = globalThis` in `index.html`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">42. MarkLearnsCoding/JS/React/react-whyso.md(664)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> why react not render into body directly</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">43. MarkLearnsCoding/JS/React/react-howto.md(2817)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ⭐️ function as hook</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> the async understanding</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> get host</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> configure fs node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> configure proxy pass</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> how to always scroll bottom</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">44. MarkLearnsCoding/markdown/markdown-howto.md(2145)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">check box alternative</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'update: use `:white_circle:` instead of `:white_large_square:`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">recommended emojis</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> numbers</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> tips</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> checks</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> emotions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">45. MarkLearnsCoding/Google/ChromeExtensions/chrome_extensions.md(381)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">develop a chrome extension</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> start up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">46. MarkLearnsCoding/Google/ChromeExtensions/archive-copy slected text as markdown/readme.md(500)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">design</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'know what are selected '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">47. MarkLearnsCoding/Google/ChromeExtensions/nc-link-to-text-fragment-main/README.md(2600)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Installation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Usage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Background</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Acknowledgements</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> License</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">48. MarkLearnsCoding/Google/GoogleSearch/google-search-howto.md(395)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">google advanced search</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> search target words in title</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">49. MarkLearnsCoding/JetBrains/jetbrains-howto.md(593)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> improve jetbrains efficiency</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">50. MarkLearnsCoding/mongodb/mongodb-bugfix.md(1518)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> mongodb killed by OS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> brew can't restart mongod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">51. MarkLearnsCoding/mongodb/mongodb-howto.md(3743)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> install mongodb in Ubuntu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> configure mongodb remote connection via 0.0.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Mongodb create superuser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Mongodb Auth JS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">Mongodb Auth PY</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'approach 1 '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> approach 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> approach 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">52. MarkLearnsCoding/Mac/Mac开发笔记.md(3469)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">About Mac</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 关于开机要输入两次密码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">About VSCode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 在命令行中使用`code .`启动VSCode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 设置忽略文件夹</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Commands Editing Shortcuts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">53. MarkLearnsCoding/Mac/Mac使用心得.md(1626)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> mac用熟的体现</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Uninstall Microsoft AutoUpdate and microsoft worksuits.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">54. MarkLearnsCoding/Mac/定制termnial按键.md(1873)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">Define your own terminal shortcuts</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Goal 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Goal 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Goal 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Realization of Goal 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">55. MarkLearnsCoding/Mac/alfred-howto.md(1072)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> script filter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> generate icon based on number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">56. MarkLearnsCoding/Mac/mac-howto.md(1592)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> how to configure permanent environment variable</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Can local dns set and work for chrome</span><span class="token punctuation" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">No</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> it can't</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">57. MarkLearnsCoding/Mac/zsh.md(1810)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> use `exec zsh` rather than `source ~/.zshrc`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">'`git + zsh` can be very slow (seconds)'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> solution 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> solution 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">58. MarkLearnsCoding/nginx/nginx-howto.md(1377)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> nginx config file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> how to install and configure nginx on Ubuntu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> configure for fastapi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> configure for react</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> so the react app lies on the domain</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> break through the default max size limit (1m)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">59. MarkLearnsCoding/Linux/linux-commands.md(780)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> check status of port occupation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> SAFELY delete file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> compare between outputs from two commands</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">60. MarkLearnsCoding/Linux/sed-howto.md(9086)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">insert text before first line of file</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> solution 1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> use cat and ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> solution 2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> use cat and </span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Solution 3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> use sed s</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Solution 4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> use sed e</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Conclusion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">61. MarkLearnsCoding/Linux/linux-howto.md(6767)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">create interactive shell</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> alfred documentation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> alfred create script</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> alfred repo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'`sh` is different with `bash`'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> mkdir if not exist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ls and delete files '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> scp transfer files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ssh no secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">how to know my public ip address</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> approach 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> approach 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> how to configure `history</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">search</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">backward/forward`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ssh keep connection alive</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> create user</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">Linux Terminator</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> enable color</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 防火墙</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">62. MarkLearnsCoding/VSCode/vscode-howto.md(5775)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">TOP</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> extensions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> '</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">open mode</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> how to trigger open via ''double click'''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">' In VSCode, how to render shell commands in markdown (not under preview mode)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">add commentLine-cursorDown support like jetbrains</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> step 1. install plugin of 'multi</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">command'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> which allows you diy your key and commands</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        like a `macro`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> step 2. diy my own comment line and cursor down</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> double click to select a whole word with '</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> about 'new file' when right click on a file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> about switch tab view</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> about definition suggestion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">plugin 'markdown-image'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> diy the image path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Script of migrating all the images in different sub</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">folders everywhere to the</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        central image asserts directory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">63. MarkLearnsCoding/Git/git-howto.md(4855)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> git format control and recommend</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> git </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">cancel</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> `reset </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">hard`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> git pull </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ff</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">only</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> About Erasing Large File Commit in the Git History</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="如何定义">如何定义<a class="hash-link" href="#如何定义" title="标题的直接链接">​</a></h3><p>我有一段时间，应该说很长一段时间，都有在想一件事：在二十一世纪的当代，我们在这个世界上的存在，究竟该如何定义。</p><p>在我备考的这几年里，每年都会时不时听到各个地方学生跳楼的不幸事件，他们年轻的生命就以这样的形式退场了，只留下了如泣如诉的遗言。</p><p>我们，不该被这些定义。</p><p>我们，也不能被这些定义。</p><p>即使已经经历了三次考研失败的我，依旧觉得生命值得来过；而身边甚至还有正在经历第六次（也许是第七次）考研的朋友，仍在努力地为理想而奋斗着。</p><p>这既是一种执念，我不否认。</p><p>这也是一种人性的光辉，也许你不认同。</p><p>在有大风吹落黄花、夕阳洒满原野、繁星钻进窗台的日子里，我时不时，会走出屋子，有时会望向北方，那是天之骄子霍去病日进千里的傲然身姿；有时会望向西方，那是雪域高原的人们在时代的潮流里或彷徨或奋进的模样。</p><p>是的，比起考研、比起项目，今年我最感谢的是，西藏之旅。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="西行之旅">西行之旅<a class="hash-link" href="#西行之旅" title="标题的直接链接">​</a></h3><p>在某一篇马男的观后感里，有人用心理学知识阐述了马男背后的“自我实现的预言”理念：</p><img loading="lazy" alt="picture 6" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/MY2021-%7Btimestamp%7D-40d15e665c1ee372d8bbab11eb83b13c7da8059e512c5a617df0bf2b62b9c167.png" width="480" class="img_ev3q"><p>很有意思的是，我有一天偶然翻阅朋友圈，然后看到2020年末我写道：“我想去中西部走一步“。</p><img loading="lazy" alt="picture 5" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/MY2021-%7Btimestamp%7D-cdd1af68402ddb8543f1541499e1d76e5e4742e8abc8023f819723169c26b457.png" width="480" class="img_ev3q"><p>但在2021年整一年中，几乎都忘了这个小愿望。</p><p>直到7月份做完项目，我突然做了个决定，我要去骑行西藏，做出这个决定，我只花了一晚上的时间，然后就花了一周购买了各种装备，然后一个月半就都在路上了。</p><p>很难说，这不是“自我实现的预言”在背后捣鬼。</p><img loading="lazy" alt="picture 7" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/MY2021-%7Btimestamp%7D-aca611ae41607af9e54975dc5a5b36a7e7267e1c988eb1710ecd765664b141e3.png" width="480" class="img_ev3q"><img loading="lazy" alt="picture 8" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/MY2021-%7Btimestamp%7D-a2ed06ab08e8cfdd2ace8e62e27eb5038e73b1ee1c746859b52ae28d60a9a742.png" width="480" class="img_ev3q"><p>但很遗憾的是，今天，我好像没有什么特别想做的。</p><p>如果有的话，那就是把我上文提到的个人文档库，即“整理之道”，继续坚持下去，坚持一年看看会有什么成效。</p><p>除此之外，我似乎进入了我个人的低欲望时代。</p><p>也许，这才是我的“本”。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="本">本<a class="hash-link" href="#本" title="标题的直接链接">​</a></h2><p>何为本。</p><p>民为邦本，本固邦宁。这是国之本。</p><p>那人之本呢？</p><p>人之本，应是人之立身之本。</p><p>这么些年来，我结交各种朋友、打各种比赛、研习各种知识，是的，那样纯粹的时光，是令人感动，让我感到充实的。</p><p>但那不是我的本。</p><p>马克思说，人是社会关系的总和。</p><blockquote><p>任何人都不可能脱离他所处身的社会、家庭，不可能脱离自己在不自觉状态下形成的性格、习惯、能力、价值观以及身体状况的控制来进行人生的全部选择，这些被控制的选择影响到周边的人与物，这些人与物又会对作出动作的物体进行反作用。社会关系同时也包含了这些个人与其他个人之间的全部互动。</p></blockquote><p>我向来，以为自己是自由的。</p><p>我自由地追逐着我所认为要追逐的，我自由地选择着我所认为要选择的。</p><p>但事实上，也许我在很多时候可以选择，但也有更多时候，我却无法拒绝。</p><p>逐渐地，我才真正意识到，也就是那两个大家经常会提起的词：责任，和义务。</p><p>若我不能选择完全自由，那我就要选择必须承担，这个选择，我已经无法拒绝。</p><p>考研的我，像一头蛮牛，连续三年在某个时间点疯狂发力。</p><p>第一年，在学校连续三个月，每天十八小时。</p><p>第二年，在朋友家两个月，进一步在身体与精神上约束自己。</p><p>第三年，在自己家两个月，我与母亲作着良久的斗争，我想，我已经找到我的答案了。</p><p>无源之水无本之木，无以有有。</p><p>有源之水有本之木，有以有无。</p><p>新的一年了，让岁月的属于岁月，让我们的属于自己，不求能与岁月争辉，但求无愧于本身。</p>]]></content:encoded>
            <category>札记</category>
            <category>年终总结</category>
        </item>
        <item>
            <title><![CDATA[编程 | 记与Webpack十二小时的奋战]]></title>
            <link>https://markshawn2020.github.io/blog/2021/12/24/archive/dev-webpack</link>
            <guid>/2021/12/24/archive/dev-webpack</guid>
            <pubDate>Fri, 24 Dec 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[2021年12月24日]]></description>
            <content:encoded><![CDATA[<p>2021年12月24日</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="content">Content<a class="hash-link" href="#content" title="标题的直接链接">​</a></h2><p>这篇必须用中文记录，而且直到目前还没有完全解决，只实现了一个还可以接受的替代方案，背后还有一些东西没弄明白。</p><p>先直接说结论：</p><ol><li>如果所有的依赖包都是<code>commonjs</code>形式（使用<code>require</code>和<code>module.export</code>），子包的<code>package.json</code>中没有定义<code>type: "module"</code>，则webpack无论怎么写，基本都不会出错，直接运行<code>webpack --config xxx.webpack.config.js</code>即可</li><li>如果<code>xxx.config.js</code>文件中使用了<code>import xxx from xx</code>或者子包都是用的<code>type: "module"</code>，则在项目的<code>package.json</code>中定义一些<code>type: "module"</code>，也可以解决问题</li><li>如果出现了<code>commonjs</code>和<code>esm</code>混用的情况，则会报错，要么导致<code>Cannot use import statement outside a module</code>，要么导致<code>mjs</code>等等无法导入因为有<code>type: module</code>之类的问题，下面着重说一下在该种情况下的解决方案</li></ol><p>我碰到的问题就是，我直接clone的github上的两个boilerplate，一个是<code>electron-react-typescript-webpack-boilerplate</code>，还有一个是<a href="https://github.com/diego3g/electron-typescript-react#:~:text=electron-typescript-react" target="_blank" rel="noopener noreferrer">electron-typescript-react</a>，这两个boilerplate虽然配置有些差异，而且一个用到了<code>babel</code>一个没用，但是共同点就是<code>webpack.config.js</code>中都没有使用<code>import</code>语法，<code>webpack</code>的所有依赖也都是<code>commonjs</code>。</p><p>而我为了将<code>markdown</code>文件在前端渲染出来，虽然我可以直接使用<code>marked</code>或者<code>react-markdown</code>这类package，但是基于以前<code>nextjs | gatsby</code>等框架的经验，直接基于<code>webpack</code>进行<code>markdown</code>解析体验会比较好（毕竟两个项目都用上<code>webpack</code>了）。</p><p>但是问题来了，我在<code>webpack</code>官网中找到加载<code>markdown</code>相关的<code>loaders</code>的 <a href="https://webpack.js.org/loaders/remark-loader/#inspiration" target="_blank" rel="noopener noreferrer">remark-loader | webpack</a> 章节时，实际使用发现<code>remark-html</code>是<code>esm</code>，没法直接用，我的<code>webpack</code>会报错。</p><p>接着我就经历了12个小时的奋斗，尝试了几乎所有能找到的方案，从最基础的改<code>type: "module"</code>，到用上<code>babel-register</code>，甚至详细去读了<code>webpack</code>、<code>babel</code>的相关内容，最后不得不都以失败告终。其中应该说最有影响力、提供解决方案最多（然而最终都失败）的帖子应该是下面这个：</p><ul><li><a href="https://stackoverflow.com/questions/31903692/how-can-i-use-es6-in-webpack-config-js" target="_blank" rel="noopener noreferrer">How can I use ES6 in webpack.config.js? - Stack Overflow</a></li></ul><p>问题说的很清楚，就是要在<code>webpack.config.js</code>中使用<code>ES6</code>。</p><p>但答案都不OK，最终，我在万念俱灰无数次之后，偶然在 <a href="https://github.com/vercel/next.js/discussions/27758" target="_blank" rel="noopener noreferrer">Bug at render-markdown stage of tutorial: Must use import to load ES Module · Discussion #27758 · vercel/next.js</a> 这个帖子里找到了一句话：<code>npm install remark@13 remark-html@13</code>，凭着经验，我一下就知道是怎么回事了，因为前两天我刚刚与万恶的<code>webstorm</code>不支持<code>tailwindcss</code>最新版最终不得不安装<code>tailwindcss@2.0.1-compat</code>做了同样艰苦的斗争！</p><img loading="lazy" alt="picture 5" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640346360145-webpack-bugfix-349711dd9f694e145b5dc4a1ddae42e2955043d9a23747857b50d1423368dd9f.png" width="480" class="img_ev3q"><p>果然，安装指定的版本后，项目终于成功运行：</p><img loading="lazy" alt="picture 6" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640346477725-webpack-bugfix-7d4cd572dc5ec9fe5ad511c4156c56e047cbe30184b88b8c95601c1d21b1b02e.png" width="480" class="img_ev3q"><p>至此，所有与<code>webpack</code>的斗争，应该说告一段落了，不然，我下一个更艰苦卓绝的打算，可能就是去看<code>nextjs</code>之类重型框架的源码，剖析它们是怎么高大上地使用<code>webpack</code>了。。</p><p>所以，目前，我可以确定的就是，只要保证所有<code>webpack</code>依赖的库都是<code>commonjs</code>，就可以不借助<code>babel</code>使项目运行，毕竟当一个前端项目需要用上<code>babel</code>的时候，它肯定就已经是另一个项目了，于是，一键DELETE恢复世界清净。</p><img loading="lazy" alt="picture 9" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640347058731-webpack-bugfix-901426db9195c9d0a7ec92ef0370f3a94d57f35b9b78808b330f4929e3341574.png" width="480" class="img_ev3q"><p>不过事实上，就像我开头说的，我clone了两个项目，其中一个用了babel，用于转换<code>jsx</code>之类的文件的，它是基于<code>electron-forge</code>的，为了弄清楚当时的报错我还特意去看了这个库，说实话也没怎么弄明白。它的这个<code>boilerplate</code>对我最大的启发，应该是写了一个标准的<code>main</code>和<code>renderer</code>之间通信的接口，即：</p><ol><li>main中暴露api给renderer使用的接口定义</li></ol><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// src/@types/bridge.d.ts </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> api </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'electron/bridge'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"> global </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// eslint-disable-next-line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">Window</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Main</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> api</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol><li>main中对api使用的收发封装</li></ol><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// electron/bridge.ts</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> contextBridge</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ipcRenderer </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'electron'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> api </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * Here you can expose functions to the renderer process</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * so they can interact with the main (electron) side</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * without security problems.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   *</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * The function below can accessed using `window.Main.sendMessage`</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">sendMessage</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">message</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ipcRenderer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">send</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'message'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   * Provide an easier way to listen to events</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">on</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">channel</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> callback</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">Function</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ipcRenderer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">on</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">channel</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">callback</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">contextBridge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">exposeInMainWorld</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Main'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> api</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这两个文件，包括main和render程序中如何使用这两个文件的写法对我还是有很好的指导作用的，至少electron官网上对typescript的范式介绍比较少，这就需要从这些boilerplate中寻找指点。</p><p>但除此之外，这个boilerplate对我的意义就不大了，而且，我也不怎么看得懂它给定的几个<code>scripts</code>，其实无法就是开发版、生产版、运行、打包与测试的不同命令，但是被他搞的有点负责，相比较之下，另一个boilerplate就很好，清晰明白，也有可能上半年我在学习electron的时候正好用的就是第二个boilerplate，但无论怎样，确实第二个更好。</p><img loading="lazy" alt="picture 10" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640347712904-webpack-bugfix-5b369e0dff7ff239ccac2debcdc0a1dbf626a177b96e8f07b9fb9cf1e9ef977c.png" width="480" class="img_ev3q"><hr><img loading="lazy" alt="picture 11" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640347790778-webpack-bugfix-dec8b0f034c1fea196744e1f5f4d8772efad854d0a2d28d7858995617024a57e.png" width="480" class="img_ev3q"><p>但为了确信这一点（2比1好），我又重新去确认了一下github的star数，结果，并不是这样的，第一个boilerplate的star有1.2k，而第二个只有176，好家伙……我的直觉真不靠谱。</p><p>不过这也解释地通，因为第一个是叫<code>electron-typescript-react</code>，第二个叫<code>electron-react-typescript-webpack-boilerplate</code>，表面上后者是前者的具化，因为名词更多。</p><p>但事实上，恰恰相反，在<code>electron-typescript-react</code>中反而既有<code>webpack</code>也有<code>babel</code>，其实比另一个涉及的东西还有多……从这个角度想，第一个boilerplate星多，应该至少归结于三个点：</p><ol><li>名字短</li><li>加了<code>babel</code>，让使用者有了更多发挥的空间</li><li><code>bridge</code>的接口写的棒，对使用者有更大的价值</li><li>...</li></ol><p>Anyway，这大概就是关于目前这个问题的所有思考，和两个boilerplate带给我的启发。</p><p>接下来，才是工作的重头戏，那就是手上工具顺了，就要立即投身到业务实现上了。</p><p>但仍然，我开头说的还有一些问题是没有解决的，罗列如下：</p><ol><li>为什么<code>webpack</code>官网的所有<code>loader</code>的配置都是<code>import</code>导入的，难道他们所有的dependencies都是esm吗？</li><li>有可能不是，因为我还看到他们的有些loader可以使用<code>type: "auto"</code>这种配置，应该就是自动对多种type的js采取不同的策略智能打包的意思，但这个可以作用于<code>config.js</code>的抬头吗？好像不可以吧，因为我看他们是用在<code>rules</code>里的。</li><li>肯定存在很多<code>commonjs</code>和<code>esm</code>混用的项目的，如果不引入<code>babel</code>，<code>webpack</code>是否可以有策略正常运行呢？目前，他们都是基于<code>babel</code>的吗？</li><li>如果是基于<code>babel</code>，我认为我之前尝试装那么多<code>babel</code>依赖，应该也可以正常运行啊，为什么就不能奏效呢？</li></ol><p>关于第三点，我突然想到我上半年也写过脚本，翻出来看了一下：</p><img loading="lazy" alt="picture 12" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640348790672-webpack-bugfix-66129064c7e8a8c55c2161aad0bcce67f18e484b1cf913921f14bd01688a3542.png" width="480" class="img_ev3q"><p>可以看到，确实是要用<code>babel_register</code>进行子程序注册的，并且我也确实是用<code>import</code>进行导包的：</p><img loading="lazy" alt="picture 13" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640348883256-webpack-bugfix-a0039a63671200450ee7bc85582444eecf757b3c9393f8bd3443e2b72b79dedd.png" width="480" class="img_ev3q"><p>人老了啊，记性不行了，当时应该研究这些东西也花了一星期的，结果都一点印象没了，幸好好记性不如烂笔头，整理了当时的代码库。再回想开头看的那个关于<code>babel_register</code>的解决方案，内心突然就有些豁然开朗了：</p><img loading="lazy" alt="picture 14" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640349025625-webpack-bugfix-045d3c71ca84950c4a03136ad85db57f3652e3aa1f0600b59ebcdfd8eaf8c66f.png" width="480" class="img_ev3q"><p>不过呢，至少这个项目，我应该暂时不需要了hhh，如果需要，到时候<code>yarn add</code>一顿乱装，加个<code>babel-register</code>脚本，改一下启动命令行，应该就行了，hhh，肯定不会像今天这样头疼了。</p><p>那就暂时先这样，对该问题的记录到此为止。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="former-record">Former Record<a class="hash-link" href="#former-record" title="标题的直接链接">​</a></h2><blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="problem-syntaxerror-cannot-use-import-statement-outside-a-module">[Problem]<!-- --> SyntaxError: Cannot use import statement outside a module<a class="hash-link" href="#problem-syntaxerror-cannot-use-import-statement-outside-a-module" title="标题的直接链接">​</a></h3><p>This discussion is very close to what I happened to, however they gave no solution, except pointed out that there may be some package using <code>es</code> which seems <strong>not proper for webpack</strong>, and inspired me to have a check at <a href="#the-target-package-of-remark-html-i-wanted-to-import">the target package</a>  I wanted to import as official webpack suggested me to.</p><ul><li><a href="https://stackoverflow.com/questions/70114861/why-does-error-syntaxerror-cannot-use-import-statement-outside-a-module-when" target="_blank" rel="noopener noreferrer">javascript - Why does Error 'SyntaxError: Cannot use import statement outside a module ' when I try to use ES Modules? - Stack Overflow</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-target-package-of-remark-html-i-wanted-to-import">The target package of <code>remark-html</code> I wanted to import<a class="hash-link" href="#the-target-package-of-remark-html-i-wanted-to-import" title="标题的直接链接">​</a></h3><ul><li><a href="https://webpack.js.org/loaders/remark-loader/#root" target="_blank" rel="noopener noreferrer">remark-loader | webpack</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="failed-solution-of-babel-node">[Failed]<!-- --> Solution of <code>babel-node</code><a class="hash-link" href="#failed-solution-of-babel-node" title="标题的直接链接">​</a></h3><p>It seems that <code>babel-node</code> is a possible solution to this problem, since it when I installed it, it automatically detected what's going wrong of all my webpack loaders.</p><img loading="lazy" alt="picture 1" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640327908025-webpack-bugfix-51cf4a831368a2ef7d3cf8957e88c6c5f9528ec63aa21ab93ff4602781cdc6cd.png" width="480" class="img_ev3q"><h3 class="anchor anchorWithStickyNavbar_LWe7" id="failed-solution-of-babelregister">[Failed]<!-- --> Solution of <code>@babel/register</code><a class="hash-link" href="#failed-solution-of-babelregister" title="标题的直接链接">​</a></h3><ul><li><a href="https://stackoverflow.com/questions/31903692/how-can-i-use-es6-in-webpack-config-js" target="_blank" rel="noopener noreferrer">How can I use ES6 in webpack.config.js? - Stack Overflow</a></li></ul></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="真正唯一的收获">真正唯一的收获<a class="hash-link" href="#真正唯一的收获" title="标题的直接链接">​</a></h2><p>前段时间有个字节的小姐姐，和我表述想转码的意愿，聊下来觉得前端对她可以一试，毕竟目前各种开发岗位里前端是相对来说最容易上手的了……</p><p>但是！</p><p>这说的只是十二十年前纯粹用<code>html + css + jquery</code> 或者 <code>php</code>的时代！</p><p>现在，前端技术突飞猛进，各种范式层出不穷，变得越来越复杂了，三大框架<code>AngularJS | React | Vue</code>就不说了，<code>webpack</code>和<code>babel</code>绝对能让大厂的前端开发掉一层皮……</p><p>但anyway，如果不论这些，平时写写前端真地能让人心情大好，获得感十足，用一位朋友对开发的态度来说：“平时自己写些玩玩挺好的，当做工作就太无聊了”，确实如是~</p><p>保持学习，保持热爱！</p><img loading="lazy" alt="picture 15" src="https://mark-vue-oss.oss-cn-hangzhou.aliyuncs.com/1640349694440-webpack-bugfix-7adf1882ddf381568cee583516f84f77d56237f255c73a5bcceb153755794696.png" width="480" class="img_ev3q"><p>reference:</p><ul><li><a href="https://blog.logrocket.com/transpile-es-modules-with-webpack-node-js/" target="_blank" rel="noopener noreferrer">How to transpile ES modules with webpack and Node.js - LogRocket Blog</a></li></ul><ul><li><a href="https://stackoverflow.com/questions/31903692/how-can-i-use-es6-in-webpack-config-js" target="_blank" rel="noopener noreferrer">How can I use ES6 in webpack.config.js? - Stack Overflow</a></li></ul><ul><li><p><a href="https://github.com/diego3g/electron-typescript-react" target="_blank" rel="noopener noreferrer">diego3g/electron-typescript-react: An Electron boilerplate including TypeScript, React, Jest and ESLint.</a></p></li><li><p><a href="https://github.com/Devtography/electron-react-typescript-webpack-boilerplate" target="_blank" rel="noopener noreferrer">Devtography/electron-react-typescript-webpack-boilerplate: Pre-configured boilerplate for Electron + React + TypeScript + Webpack</a></p></li><li><p><a href="https://webpack.js.org/loaders/remark-loader/#inspiration" target="_blank" rel="noopener noreferrer">remark-loader | webpack</a></p></li><li><p><a href="https://github.com/vercel/next.js/discussions/27758" target="_blank" rel="noopener noreferrer">Bug at render-markdown stage of tutorial: Must use import to load ES Module · Discussion #27758 · vercel/next.js</a></p></li><li><p><a href="https://www.electronforge.io/templates/typescript-+-webpack-template" target="_blank" rel="noopener noreferrer">TypeScript + Webpack - Electron Forge</a></p></li><li><p><a href="https://www.electronjs.org/zh/docs/latest/api/ipc-main" target="_blank" rel="noopener noreferrer">ipcMain | Electron</a></p></li></ul>]]></content:encoded>
            <category>开发笔记</category>
            <category>Webpack</category>
            <category>前端</category>
        </item>
    </channel>
</rss>