(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[155],{92966:(e,r,o)=>{"use strict";o.r(r),o.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var a=o(87462),n=(o(67294),o(3905)),s=o(93456);const t={},i="arpara distortion logic",d={unversionedId:"AndroidFramework/TaskA4-sf-research/arpara-distortion-logic",id:"AndroidFramework/TaskA4-sf-research/arpara-distortion-logic",title:"arpara distortion logic",description:"",source:"@site/docs/AndroidFramework/TaskA4-sf-research/arpara-distortion-logic.md",sourceDirName:"AndroidFramework/TaskA4-sf-research",slug:"/AndroidFramework/TaskA4-sf-research/arpara-distortion-logic",permalink:"/docs/docs/AndroidFramework/TaskA4-sf-research/arpara-distortion-logic",draft:!1,editUrl:"https://github.com/markshawn2020/docusaurus/edit/master/docs/AndroidFramework/TaskA4-sf-research/arpara-distortion-logic.md",tags:[],version:"current",lastUpdatedAt:1658770976,formattedLastUpdatedAt:"2022\u5e747\u670825\u65e5",frontMatter:{},sidebar:"docs",previous:{title:"aosp changes",permalink:"/docs/docs/AndroidFramework/TaskA3-aosp-changes/aosp-changes"},next:{title:"surfaceflinger display research",permalink:"/docs/docs/AndroidFramework/TaskA4-sf-research/sf-howto"}},p={},c=[],l={toc:c};function m(e){let{components:r,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,o,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"arpara-distortion-logic"},"arpara distortion logic"),(0,n.kt)(s.Mermaid,{config:{},chart:"flowchart TD\n\n\n\nsubgraph doComposition[step4. doComposition]\n    direction TB\n\n    subgraph doDisplayComposition[repaint-framebuffer]\n        direction TB\n\n        r[return]\n        doComposerSurface{doComposerSurface} --\x3e |NO| r\n        doComposerSurface --\x3e |YES| swapBuffer[swapBuffer of presentation] --\x3e r\n    end\n\n    displayStateEnabled{displayStateEnabled}\n    --\x3e |YES| doDisplayComposition\n    --\x3e clearAndFlip[swap framebuffer]\nend\n\n\nsubgraph doDebugFlashRegions[step3. doDebugFlashRegions:2000]\n    direction TB\n\n    needDoComposerSurface{displayStateEnabled +<br> dirtyRegionNotEmpty}\n    --\x3e |YES| doComposerSurface.FlashRegions\n    --\x3e renderEngine.queueBuffer\n    --\x3e postFrameBuffer\n\n    needDoComposerSurface --\x3e |NO| postFrameBuffer\n    --\x3e prepareFrame\nend\n\nsubgraph for:displays\n    direction TB\n\n    beginFrame[step1. beginFrame]\n    --\x3e prepareFrame.Refresh[step2. prepareFrame]\n    --\x3e doDebugFlashRegions\n    --\x3e doComposition\nend\n\nsubgraph handleMessageRefresh\n    direction TB\n\n    preComposition \n    --\x3e rebuildLayerStacks \n    --\x3e calculateWorkingSet \n    --\x3e for:displays\n    --\x3e logLayerStates\n    --\x3e postFrame\n    --\x3e postComposition\n    --\x3e vsync.onRefreshed\n    --\x3e queueFrames.clear\n\nend\n",mdxType:"Mermaid"}))}m.isMDXComponent=!0},11748:(e,r,o)=>{var a={"./locale":89234,"./locale.js":89234};function n(e){var r=s(e);return o(r)}function s(e){if(!o.o(a,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return a[e]}n.keys=function(){return Object.keys(a)},n.resolve=s,e.exports=n,n.id=11748}}]);